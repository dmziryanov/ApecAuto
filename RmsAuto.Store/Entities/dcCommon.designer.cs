#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RmsAuto.Store.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ex_rmsauto_common")]
	public partial class dcCommonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClientGroup(ClientGroup instance);
    partial void UpdateClientGroup(ClientGroup instance);
    partial void DeleteClientGroup(ClientGroup instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertGlobalSetting(GlobalSetting instance);
    partial void UpdateGlobalSetting(GlobalSetting instance);
    partial void DeleteGlobalSetting(GlobalSetting instance);
    partial void InsertOwnStoreSupplier(OwnStoreSupplier instance);
    partial void UpdateOwnStoreSupplier(OwnStoreSupplier instance);
    partial void DeleteOwnStoreSupplier(OwnStoreSupplier instance);
    #endregion
		
		public dcCommonDataContext() : 
				base(global::RmsAuto.Store.Properties.Settings.Default.ex_rmsauto_commonConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dcCommonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcCommonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcCommonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcCommonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ClientGroup> ClientGroups
		{
			get
			{
				return this.GetTable<ClientGroup>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<GlobalSetting> GlobalSettings
		{
			get
			{
				return this.GetTable<GlobalSetting>();
			}
		}
		
		public System.Data.Linq.Table<OwnStoreSupplier> OwnStoreSuppliers
		{
			get
			{
				return this.GetTable<OwnStoreSupplier>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelAllHowKnowType")]
		public ISingleResult<spSelAllHowKnowTypeResult> spSelAllHowKnowType()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spSelAllHowKnowTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdBankInfo")]
		public int spUpdBankInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankInfo_BIC", DbType="NChar(9)")] string bankInfo_BIC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankInfo_INN", DbType="NChar(10)")] string bankInfo_INN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankInfo_Acc", DbType="NChar(20)")] string bankInfo_Acc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankInfo_BIC, bankInfo_INN, bankInfo_Acc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelAllScopeType")]
		public ISingleResult<spSelAllScopeTypeResult> spSelAllScopeType()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spSelAllScopeTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelBankInfoByBIC")]
		public ISingleResult<spSelBankInfoByBICResult> spSelBankInfoByBIC([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankInfo_BIC", DbType="NChar(9)")] string bankInfo_BIC)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankInfo_BIC);
			return ((ISingleResult<spSelBankInfoByBICResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelHowKnowTypeByID")]
		public ISingleResult<spSelHowKnowTypeByIDResult> spSelHowKnowTypeByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HowKnowType_ID", DbType="Int")] System.Nullable<int> howKnowType_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), howKnowType_ID);
			return ((ISingleResult<spSelHowKnowTypeByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelAllCountry")]
		public ISingleResult<spSelAllCountryResult> spSelAllCountry()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spSelAllCountryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelRegionByCountry")]
		public ISingleResult<spSelRegionByCountryResult> spSelRegionByCountry([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country_ID", DbType="Int")] System.Nullable<int> country_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), country_ID);
			return ((ISingleResult<spSelRegionByCountryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelRegionByID")]
		public ISingleResult<spSelRegionByIDResult> spSelRegionByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Region_ID", DbType="Int")] System.Nullable<int> region_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), region_ID);
			return ((ISingleResult<spSelRegionByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelCountryByID")]
		public ISingleResult<spSelCountryByIDResult> spSelCountryByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country_ID", DbType="Int")] System.Nullable<int> country_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), country_ID);
			return ((ISingleResult<spSelCountryByIDResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientGroup")]
	public partial class ClientGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientGroupID;
		
		private string _ClientGroupName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientGroupIDChanging(int value);
    partial void OnClientGroupIDChanged();
    partial void OnClientGroupNameChanging(string value);
    partial void OnClientGroupNameChanged();
    #endregion
		
		public ClientGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClientGroupID
		{
			get
			{
				return this._ClientGroupID;
			}
			set
			{
				if ((this._ClientGroupID != value))
				{
					this.OnClientGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ClientGroupID = value;
					this.SendPropertyChanged("ClientGroupID");
					this.OnClientGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientGroupName
		{
			get
			{
				return this._ClientGroupName;
			}
			set
			{
				if ((this._ClientGroupName != value))
				{
					this.OnClientGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ClientGroupName = value;
					this.SendPropertyChanged("ClientGroupName");
					this.OnClientGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _Region_ID;
		
		private System.Nullable<bool> _Visible;
		
		private bool _isVIP;
		
		private bool _isNEW;
		
		private System.Nullable<int> _Priority;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnVisibleChanging(System.Nullable<bool> value);
    partial void OnVisibleChanged();
    partial void OnisVIPChanging(bool value);
    partial void OnisVIPChanged();
    partial void OnisNEWChanging(bool value);
    partial void OnisNEWChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    #endregion
		
		public City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(100)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region_ID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._Region_ID;
			}
			set
			{
				if ((this._Region_ID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._Region_ID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isVIP", DbType="bit", UpdateCheck=UpdateCheck.Never)]
		public bool isVIP
		{
			get
			{
				return this._isVIP;
			}
			set
			{
				if ((this._isVIP != value))
				{
					this.OnisVIPChanging(value);
					this.SendPropertyChanging();
					this._isVIP = value;
					this.SendPropertyChanged("isVIP");
					this.OnisVIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isNEW", DbType="bit", UpdateCheck=UpdateCheck.Never)]
		public bool isNEW
		{
			get
			{
				return this._isNEW;
			}
			set
			{
				if ((this._isNEW != value))
				{
					this.OnisNEWChanging(value);
					this.SendPropertyChanging();
					this._isNEW = value;
					this.SendPropertyChanged("isNEW");
					this.OnisNEWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Region_ID;
		
		private string _Region_Name;
		
		private int _Country_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    #endregion
		
		public Region()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region_ID", DbType="Int", IsPrimaryKey=true)]
		public int RegionID
		{
			get
			{
				return this._Region_ID;
			}
			set
			{
				if ((this._Region_ID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._Region_ID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region_Name", DbType="Nvarchar(50)")]
		public string RegionName
		{
			get
			{
				return this._Region_Name;
			}
			set
			{
				if ((this._Region_Name != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._Region_Name = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_ID", DbType="Int", IsPrimaryKey=true)]
		public int CountryID
		{
			get
			{
				return this._Country_ID;
			}
			set
			{
				if ((this._Country_ID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._Country_ID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalSettings")]
	public partial class GlobalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SettingID;
		
		private string _Name;
		
		private string _Value;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIDChanging(int value);
    partial void OnSettingIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public GlobalSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SettingID
		{
			get
			{
				return this._SettingID;
			}
			set
			{
				if ((this._SettingID != value))
				{
					this.OnSettingIDChanging(value);
					this.SendPropertyChanging();
					this._SettingID = value;
					this.SendPropertyChanged("SettingID");
					this.OnSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OwnStoreSuppliers")]
	public partial class OwnStoreSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private string _Description;
		
		private bool _IsTopSearchResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsTopSearchResultsChanging(bool value);
    partial void OnIsTopSearchResultsChanged();
    #endregion
		
		public OwnStoreSupplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTopSearchResults", DbType="Bit NOT NULL")]
		public bool IsTopSearchResults
		{
			get
			{
				return this._IsTopSearchResults;
			}
			set
			{
				if ((this._IsTopSearchResults != value))
				{
					this.OnIsTopSearchResultsChanging(value);
					this.SendPropertyChanging();
					this._IsTopSearchResults = value;
					this.SendPropertyChanged("IsTopSearchResults");
					this.OnIsTopSearchResultsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spSelAllHowKnowTypeResult
	{
		
		private int _HowKnowType_ID;
		
		private string _HowKnowType_Name;
		
		public spSelAllHowKnowTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowKnowType_ID", DbType="Int NOT NULL")]
		public int HowKnowType_ID
		{
			get
			{
				return this._HowKnowType_ID;
			}
			set
			{
				if ((this._HowKnowType_ID != value))
				{
					this._HowKnowType_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowKnowType_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HowKnowType_Name
		{
			get
			{
				return this._HowKnowType_Name;
			}
			set
			{
				if ((this._HowKnowType_Name != value))
				{
					this._HowKnowType_Name = value;
				}
			}
		}
	}
	
	public partial class spSelAllScopeTypeResult
	{
		
		private int _ScopeType_ID;
		
		private string _ScopeType_Name;
		
		public spSelAllScopeTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeType_ID", DbType="Int NOT NULL")]
		public int ScopeType_ID
		{
			get
			{
				return this._ScopeType_ID;
			}
			set
			{
				if ((this._ScopeType_ID != value))
				{
					this._ScopeType_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeType_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ScopeType_Name
		{
			get
			{
				return this._ScopeType_Name;
			}
			set
			{
				if ((this._ScopeType_Name != value))
				{
					this._ScopeType_Name = value;
				}
			}
		}
	}
	
	public partial class spSelBankInfoByBICResult
	{
		
		private string _BankInfo_INN;
		
		private string _BankInfo_Acc;
		
		private string _BankInfo_Name;
		
		public spSelBankInfoByBICResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankInfo_INN", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string BankInfo_INN
		{
			get
			{
				return this._BankInfo_INN;
			}
			set
			{
				if ((this._BankInfo_INN != value))
				{
					this._BankInfo_INN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankInfo_Acc", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string BankInfo_Acc
		{
			get
			{
				return this._BankInfo_Acc;
			}
			set
			{
				if ((this._BankInfo_Acc != value))
				{
					this._BankInfo_Acc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankInfo_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BankInfo_Name
		{
			get
			{
				return this._BankInfo_Name;
			}
			set
			{
				if ((this._BankInfo_Name != value))
				{
					this._BankInfo_Name = value;
				}
			}
		}
	}
	
	public partial class spSelHowKnowTypeByIDResult
	{
		
		private string _HowKnowType_Name;
		
		public spSelHowKnowTypeByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowKnowType_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HowKnowType_Name
		{
			get
			{
				return this._HowKnowType_Name;
			}
			set
			{
				if ((this._HowKnowType_Name != value))
				{
					this._HowKnowType_Name = value;
				}
			}
		}
	}
	
	public partial class spSelAllCountryResult
	{
		
		private int _CountryID;
		
		private string _CountryName;
		
		public spSelAllCountryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class spSelRegionByCountryResult
	{
		
		private int _RegionID;
		
		private string _RegionName;
		
		public spSelRegionByCountryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this._RegionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
	}
	
	public partial class spSelRegionByIDResult
	{
		
		private string _RegionName;
		
		public spSelRegionByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
	}
	
	public partial class spSelCountryByIDResult
	{
		
		private string _CountryName;
		
		public spSelCountryByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
