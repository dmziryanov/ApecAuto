#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RmsAuto.Store.Cms.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ex_apecautoR_store")]
	public partial class CmsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogItem(LogItem instance);
    partial void UpdateLogItem(LogItem instance);
    partial void DeleteLogItem(LogItem instance);
    partial void InsertNewsItem(NewsItem instance);
    partial void UpdateNewsItem(NewsItem instance);
    partial void DeleteNewsItem(NewsItem instance);
    partial void InsertVacancy(Vacancy instance);
    partial void UpdateVacancy(Vacancy instance);
    partial void DeleteVacancy(Vacancy instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertFeedbackRecipient(FeedbackRecipient instance);
    partial void UpdateFeedbackRecipient(FeedbackRecipient instance);
    partial void DeleteFeedbackRecipient(FeedbackRecipient instance);
    partial void InsertFolder(Folder instance);
    partial void UpdateFolder(Folder instance);
    partial void DeleteFolder(Folder instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertShop(Shop instance);
    partial void UpdateShop(Shop instance);
    partial void DeleteShop(Shop instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    partial void InsertCatalogItem(CatalogItem instance);
    partial void UpdateCatalogItem(CatalogItem instance);
    partial void DeleteCatalogItem(CatalogItem instance);
    partial void InsertSeoPartsCatalogItem(SeoPartsCatalogItem instance);
    partial void UpdateSeoPartsCatalogItem(SeoPartsCatalogItem instance);
    partial void DeleteSeoPartsCatalogItem(SeoPartsCatalogItem instance);
    partial void InsertSeoTecDocTextTemplate(SeoTecDocTextTemplate instance);
    partial void UpdateSeoTecDocTextTemplate(SeoTecDocTextTemplate instance);
    partial void DeleteSeoTecDocTextTemplate(SeoTecDocTextTemplate instance);
    partial void InsertSeoTecDocText(SeoTecDocText instance);
    partial void UpdateSeoTecDocText(SeoTecDocText instance);
    partial void DeleteSeoTecDocText(SeoTecDocText instance);
    partial void InsertSparePartGroup(SparePartGroup instance);
    partial void UpdateSparePartGroup(SparePartGroup instance);
    partial void DeleteSparePartGroup(SparePartGroup instance);
    partial void InsertBannersForCatalogItem(BannersForCatalogItem instance);
    partial void UpdateBannersForCatalogItem(BannersForCatalogItem instance);
    partial void DeleteBannersForCatalogItem(BannersForCatalogItem instance);
    partial void InsertBanners(Banners instance);
    partial void UpdateBanners(Banners instance);
    partial void DeleteBanners(Banners instance);
    partial void InsertLocalization(Localization instance);
    partial void UpdateLocalization(Localization instance);
    partial void DeleteLocalization(Localization instance);
    partial void InsertTextItem(TextItem instance);
    partial void UpdateTextItem(TextItem instance);
    partial void DeleteTextItem(TextItem instance);
    partial void InsertTires(Tires instance);
    partial void UpdateTires(Tires instance);
    partial void DeleteTires(Tires instance);
    partial void InsertTireBrand(TireBrand instance);
    partial void UpdateTireBrand(TireBrand instance);
    partial void DeleteTireBrand(TireBrand instance);
    partial void InsertBattery(Battery instance);
    partial void UpdateBattery(Battery instance);
    partial void DeleteBattery(Battery instance);
    partial void InsertBatteryBrand(BatteryBrand instance);
    partial void UpdateBatteryBrand(BatteryBrand instance);
    partial void DeleteBatteryBrand(BatteryBrand instance);
    partial void InsertDiscBrand(DiscBrand instance);
    partial void UpdateDiscBrand(DiscBrand instance);
    partial void DeleteDiscBrand(DiscBrand instance);
    partial void InsertOurCatalog(OurCatalog instance);
    partial void UpdateOurCatalog(OurCatalog instance);
    partial void DeleteOurCatalog(OurCatalog instance);
    partial void InsertDisc(Disc instance);
    partial void UpdateDisc(Disc instance);
    partial void DeleteDisc(Disc instance);
    partial void InsertOrderLineStatuses(OrderLineStatuses instance);
    partial void UpdateOrderLineStatuses(OrderLineStatuses instance);
    partial void DeleteOrderLineStatuses(OrderLineStatuses instance);
    partial void InsertCatalogItemsLoc(CatalogItemsLoc instance);
    partial void UpdateCatalogItemsLoc(CatalogItemsLoc instance);
    partial void DeleteCatalogItemsLoc(CatalogItemsLoc instance);
    partial void InsertSeoPartsCatalogItemsLoc(SeoPartsCatalogItemsLoc instance);
    partial void UpdateSeoPartsCatalogItemsLoc(SeoPartsCatalogItemsLoc instance);
    partial void DeleteSeoPartsCatalogItemsLoc(SeoPartsCatalogItemsLoc instance);
    partial void InsertFeedbackRecipientsLoc(FeedbackRecipientsLoc instance);
    partial void UpdateFeedbackRecipientsLoc(FeedbackRecipientsLoc instance);
    partial void DeleteFeedbackRecipientsLoc(FeedbackRecipientsLoc instance);
    #endregion
		
		public CmsDataContext() : 
				base(global::RmsAuto.Store.Properties.Settings.Default.ex_rmsauto_storeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CmsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CmsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CmsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CmsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LogItem> LogItems
		{
			get
			{
				return this.GetTable<LogItem>();
			}
		}
		
		public System.Data.Linq.Table<NewsItem> NewsItems
		{
			get
			{
				return this.GetTable<NewsItem>();
			}
		}
		
		public System.Data.Linq.Table<Vacancy> Vacancies
		{
			get
			{
				return this.GetTable<Vacancy>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<FeedbackRecipient> FeedbackRecipients
		{
			get
			{
				return this.GetTable<FeedbackRecipient>();
			}
		}
		
		public System.Data.Linq.Table<Folder> Folders
		{
			get
			{
				return this.GetTable<Folder>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<Shop> Shops
		{
			get
			{
				return this.GetTable<Shop>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<CatalogItem> CatalogItems
		{
			get
			{
				return this.GetTable<CatalogItem>();
			}
		}
		
		public System.Data.Linq.Table<SeoPartsCatalogItem> SeoPartsCatalogItems
		{
			get
			{
				return this.GetTable<SeoPartsCatalogItem>();
			}
		}
		
		public System.Data.Linq.Table<SeoTecDocTextTemplate> SeoTecDocTextTemplates
		{
			get
			{
				return this.GetTable<SeoTecDocTextTemplate>();
			}
		}
		
		public System.Data.Linq.Table<SeoTecDocText> SeoTecDocTexts
		{
			get
			{
				return this.GetTable<SeoTecDocText>();
			}
		}
		
		public System.Data.Linq.Table<SparePartGroup> SparePartGroups
		{
			get
			{
				return this.GetTable<SparePartGroup>();
			}
		}
		
		public System.Data.Linq.Table<BannersForCatalogItem> BannersForCatalogItems
		{
			get
			{
				return this.GetTable<BannersForCatalogItem>();
			}
		}
		
		public System.Data.Linq.Table<Banners> Banners
		{
			get
			{
				return this.GetTable<Banners>();
			}
		}
		
		public System.Data.Linq.Table<SeoShortLink> SeoShortLinks
		{
			get
			{
				return this.GetTable<SeoShortLink>();
			}
		}
		
		public System.Data.Linq.Table<Localization> Localizations
		{
			get
			{
				return this.GetTable<Localization>();
			}
		}
		
		public System.Data.Linq.Table<TextItem> TextItems
		{
			get
			{
				return this.GetTable<TextItem>();
			}
		}
		
		public System.Data.Linq.Table<Tires> Tires
		{
			get
			{
				return this.GetTable<Tires>();
			}
		}
		
		public System.Data.Linq.Table<TireBrand> TireBrands
		{
			get
			{
				return this.GetTable<TireBrand>();
			}
		}
		
		public System.Data.Linq.Table<Battery> Batteries
		{
			get
			{
				return this.GetTable<Battery>();
			}
		}
		
		public System.Data.Linq.Table<BatteryBrand> BatteryBrands
		{
			get
			{
				return this.GetTable<BatteryBrand>();
			}
		}
		
		public System.Data.Linq.Table<DiscBrand> DiscBrands
		{
			get
			{
				return this.GetTable<DiscBrand>();
			}
		}
		
		public System.Data.Linq.Table<Catalog> Catalogs
		{
			get
			{
				return this.GetTable<Catalog>();
			}
		}
		
		public System.Data.Linq.Table<OurCatalog> OurCatalogs
		{
			get
			{
				return this.GetTable<OurCatalog>();
			}
		}
		
		public System.Data.Linq.Table<Disc> Discs
		{
			get
			{
				return this.GetTable<Disc>();
			}
		}
		
		public System.Data.Linq.Table<OrderLineStatuses> OrderLineStatuses
		{
			get
			{
				return this.GetTable<OrderLineStatuses>();
			}
		}
		
		public System.Data.Linq.Table<CatalogItemsLoc> CatalogItemsLocs
		{
			get
			{
				return this.GetTable<CatalogItemsLoc>();
			}
		}
		
		public System.Data.Linq.Table<SeoPartsCatalogItemsLoc> SeoPartsCatalogItemsLocs
		{
			get
			{
				return this.GetTable<SeoPartsCatalogItemsLoc>();
			}
		}
		
		public System.Data.Linq.Table<FeedbackRecipientsLoc> FeedbackRecipientsLocs
		{
			get
			{
				return this.GetTable<FeedbackRecipientsLoc>();
			}
		}
		
		private void InsertSeoShortLink(SeoShortLink obj)
		{
			this.spUpdSeoShortLinks(((System.Nullable<int>)(obj.SeoLinksID)), obj.NameLink, obj.Url, obj.Localization);
		}
		
		private void UpdateSeoShortLink(SeoShortLink obj)
		{
			this.spUpdSeoShortLinks(((System.Nullable<int>)(obj.SeoLinksID)), obj.NameLink, obj.Url, obj.Localization);
		}
		
		private void DeleteSeoShortLink(SeoShortLink obj)
		{
			this.spDelSeoShortLinks(((System.Nullable<int>)(obj.SeoLinksID)));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDelSeoShortLinks")]
		public int spDelSeoShortLinks([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeoLinksID", DbType="Int")] System.Nullable<int> seoLinksID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), seoLinksID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdSeoShortLinks")]
		public int spUpdSeoShortLinks([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeoLinksID", DbType="Int")] System.Nullable<int> seoLinksID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NameLink", DbType="NVarChar(255)")] string nameLink, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Url", DbType="NVarChar(255)")] string url, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Localization", DbType="Char(9)")] string localization)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), seoLinksID, nameLink, url, localization);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cms.spSelFilesFromRms")]
		public ISingleResult<spSelFilesFromRmsResult> spSelFilesFromRms([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<spSelFilesFromRmsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cms.spSelCatalogsFromRms")]
		public ISingleResult<spSelCatalogsFromRmsResult> spSelCatalogsFromRms()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spSelCatalogsFromRmsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cms.spSelFranchesFromRms")]
		public ISingleResult<spSelFranchesFromRmsResult> spSelFranchesFromRms()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spSelFranchesFromRmsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.LogItem")]
	public partial class LogItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private string _LogEntityType;
		
		private int _LogEntityID;
		
		private System.DateTime _LogEventDate;
		
		private int _LogActionCode;
		
		private string _LogUserName;
		
		private string _LogEntityName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnLogEntityTypeChanging(string value);
    partial void OnLogEntityTypeChanged();
    partial void OnLogEntityIDChanging(int value);
    partial void OnLogEntityIDChanged();
    partial void OnLogEventDateChanging(System.DateTime value);
    partial void OnLogEventDateChanged();
    partial void OnLogActionCodeChanging(int value);
    partial void OnLogActionCodeChanged();
    partial void OnLogUserNameChanging(string value);
    partial void OnLogUserNameChanged();
    partial void OnLogEntityNameChanging(string value);
    partial void OnLogEntityNameChanged();
    #endregion
		
		public LogItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEntityType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LogEntityType
		{
			get
			{
				return this._LogEntityType;
			}
			set
			{
				if ((this._LogEntityType != value))
				{
					this.OnLogEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._LogEntityType = value;
					this.SendPropertyChanged("LogEntityType");
					this.OnLogEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEntityID", DbType="Int NOT NULL")]
		public int LogEntityID
		{
			get
			{
				return this._LogEntityID;
			}
			set
			{
				if ((this._LogEntityID != value))
				{
					this.OnLogEntityIDChanging(value);
					this.SendPropertyChanging();
					this._LogEntityID = value;
					this.SendPropertyChanged("LogEntityID");
					this.OnLogEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEventDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogEventDate
		{
			get
			{
				return this._LogEventDate;
			}
			set
			{
				if ((this._LogEventDate != value))
				{
					this.OnLogEventDateChanging(value);
					this.SendPropertyChanging();
					this._LogEventDate = value;
					this.SendPropertyChanged("LogEventDate");
					this.OnLogEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogActionCode", DbType="Int NOT NULL")]
		public int LogActionCode
		{
			get
			{
				return this._LogActionCode;
			}
			set
			{
				if ((this._LogActionCode != value))
				{
					this.OnLogActionCodeChanging(value);
					this.SendPropertyChanging();
					this._LogActionCode = value;
					this.SendPropertyChanged("LogActionCode");
					this.OnLogActionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LogUserName
		{
			get
			{
				return this._LogUserName;
			}
			set
			{
				if ((this._LogUserName != value))
				{
					this.OnLogUserNameChanging(value);
					this.SendPropertyChanging();
					this._LogUserName = value;
					this.SendPropertyChanged("LogUserName");
					this.OnLogUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEntityName", DbType="VarChar(50)")]
		public string LogEntityName
		{
			get
			{
				return this._LogEntityName;
			}
			set
			{
				if ((this._LogEntityName != value))
				{
					this.OnLogEntityNameChanging(value);
					this.SendPropertyChanging();
					this._LogEntityName = value;
					this.SendPropertyChanged("LogEntityName");
					this.OnLogEntityNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.NewsItems")]
	public partial class NewsItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsItemID;
		
		private System.DateTime _NewsItemDate;
		
		private string _NewsItemHeader;
		
		private string _NewsItemAnnotation;
		
		private string _NewsItemText;
		
		private bool _NewsItemVisible;
		
		private System.Nullable<int> _IconFileID;
		
		private bool _IsDiscount;
		
		private string _Localization;
		
		private EntityRef<File> _IconFile;
		
		private EntityRef<Localization> _Localization1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsItemIDChanging(int value);
    partial void OnNewsItemIDChanged();
    partial void OnNewsItemDateChanging(System.DateTime value);
    partial void OnNewsItemDateChanged();
    partial void OnNewsItemHeaderChanging(string value);
    partial void OnNewsItemHeaderChanged();
    partial void OnNewsItemAnnotationChanging(string value);
    partial void OnNewsItemAnnotationChanged();
    partial void OnNewsItemTextChanging(string value);
    partial void OnNewsItemTextChanged();
    partial void OnNewsItemVisibleChanging(bool value);
    partial void OnNewsItemVisibleChanged();
    partial void OnIconFileIDChanging(System.Nullable<int> value);
    partial void OnIconFileIDChanged();
    partial void OnIsDiscountChanging(bool value);
    partial void OnIsDiscountChanged();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    #endregion
		
		public NewsItem()
		{
			this._IconFile = default(EntityRef<File>);
			this._Localization1 = default(EntityRef<Localization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsItemID
		{
			get
			{
				return this._NewsItemID;
			}
			set
			{
				if ((this._NewsItemID != value))
				{
					this.OnNewsItemIDChanging(value);
					this.SendPropertyChanging();
					this._NewsItemID = value;
					this.SendPropertyChanged("NewsItemID");
					this.OnNewsItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsItemDate", DbType="DateTime NOT NULL")]
		public System.DateTime NewsItemDate
		{
			get
			{
				return this._NewsItemDate;
			}
			set
			{
				if ((this._NewsItemDate != value))
				{
					this.OnNewsItemDateChanging(value);
					this.SendPropertyChanging();
					this._NewsItemDate = value;
					this.SendPropertyChanged("NewsItemDate");
					this.OnNewsItemDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsItemHeader", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string NewsItemHeader
		{
			get
			{
				return this._NewsItemHeader;
			}
			set
			{
				if ((this._NewsItemHeader != value))
				{
					this.OnNewsItemHeaderChanging(value);
					this.SendPropertyChanging();
					this._NewsItemHeader = value;
					this.SendPropertyChanged("NewsItemHeader");
					this.OnNewsItemHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsItemAnnotation", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NewsItemAnnotation
		{
			get
			{
				return this._NewsItemAnnotation;
			}
			set
			{
				if ((this._NewsItemAnnotation != value))
				{
					this.OnNewsItemAnnotationChanging(value);
					this.SendPropertyChanging();
					this._NewsItemAnnotation = value;
					this.SendPropertyChanged("NewsItemAnnotation");
					this.OnNewsItemAnnotationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsItemText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NewsItemText
		{
			get
			{
				return this._NewsItemText;
			}
			set
			{
				if ((this._NewsItemText != value))
				{
					this.OnNewsItemTextChanging(value);
					this.SendPropertyChanging();
					this._NewsItemText = value;
					this.SendPropertyChanged("NewsItemText");
					this.OnNewsItemTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsItemVisible", DbType="Bit NOT NULL")]
		public bool NewsItemVisible
		{
			get
			{
				return this._NewsItemVisible;
			}
			set
			{
				if ((this._NewsItemVisible != value))
				{
					this.OnNewsItemVisibleChanging(value);
					this.SendPropertyChanging();
					this._NewsItemVisible = value;
					this.SendPropertyChanged("NewsItemVisible");
					this.OnNewsItemVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFileID", DbType="Int")]
		public System.Nullable<int> IconFileID
		{
			get
			{
				return this._IconFileID;
			}
			set
			{
				if ((this._IconFileID != value))
				{
					if (this._IconFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIconFileIDChanging(value);
					this.SendPropertyChanging();
					this._IconFileID = value;
					this.SendPropertyChanged("IconFileID");
					this.OnIconFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscount", DbType="Bit NOT NULL")]
		public bool IsDiscount
		{
			get
			{
				return this._IsDiscount;
			}
			set
			{
				if ((this._IsDiscount != value))
				{
					this.OnIsDiscountChanging(value);
					this.SendPropertyChanging();
					this._IsDiscount = value;
					this.SendPropertyChanged("IsDiscount");
					this.OnIsDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localization", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					if (this._Localization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_NewsItem", Storage="_IconFile", ThisKey="IconFileID", OtherKey="FileID", IsForeignKey=true)]
		public File IconFile
		{
			get
			{
				return this._IconFile.Entity;
			}
			set
			{
				if ((this._IconFile.Entity != value))
				{
					this.SendPropertyChanging();
					this._IconFile.Entity = value;
					this.SendPropertyChanged("IconFile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_NewsItem", Storage="_Localization1", ThisKey="Localization", OtherKey="LocalizationID", IsForeignKey=true)]
		public Localization Localization1
		{
			get
			{
				return this._Localization1.Entity;
			}
			set
			{
				Localization previousValue = this._Localization1.Entity;
				if (((previousValue != value) 
							|| (this._Localization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localization1.Entity = null;
						previousValue.NewsItems.Remove(this);
					}
					this._Localization1.Entity = value;
					if ((value != null))
					{
						value.NewsItems.Add(this);
						this._Localization = value.LocalizationID;
					}
					else
					{
						this._Localization = default(string);
					}
					this.SendPropertyChanged("Localization1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Vacancies")]
	public partial class Vacancy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VacancyID;
		
		private string _VacancyName;
		
		private System.Nullable<int> _ShopID;
		
		private Gender _VacancyGender;
		
		private int _VacancyAgeFrom;
		
		private System.Nullable<int> _VacancyAgeTo;
		
		private string _VacancyEducation;
		
		private string _VacancyExperience;
		
		private string _VacancyEmployment;
		
		private string _VacancyIncomeLevel;
		
		private string _VacancyRequirement;
		
		private string _VacancyFunctions;
		
		private string _VacancyNote;
		
		private string _VacancyContacts;
		
		private bool _VacancyVisible;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVacancyIDChanging(int value);
    partial void OnVacancyIDChanged();
    partial void OnVacancyNameChanging(string value);
    partial void OnVacancyNameChanged();
    partial void OnShopIDChanging(System.Nullable<int> value);
    partial void OnShopIDChanged();
    partial void OnVacancyGenderChanging(Gender value);
    partial void OnVacancyGenderChanged();
    partial void OnVacancyAgeFromChanging(int value);
    partial void OnVacancyAgeFromChanged();
    partial void OnVacancyAgeToChanging(System.Nullable<int> value);
    partial void OnVacancyAgeToChanged();
    partial void OnVacancyEducationChanging(string value);
    partial void OnVacancyEducationChanged();
    partial void OnVacancyExperienceChanging(string value);
    partial void OnVacancyExperienceChanged();
    partial void OnVacancyEmploymentChanging(string value);
    partial void OnVacancyEmploymentChanged();
    partial void OnVacancyIncomeLevelChanging(string value);
    partial void OnVacancyIncomeLevelChanged();
    partial void OnVacancyRequirementChanging(string value);
    partial void OnVacancyRequirementChanged();
    partial void OnVacancyFunctionsChanging(string value);
    partial void OnVacancyFunctionsChanged();
    partial void OnVacancyNoteChanging(string value);
    partial void OnVacancyNoteChanged();
    partial void OnVacancyContactsChanging(string value);
    partial void OnVacancyContactsChanged();
    partial void OnVacancyVisibleChanging(bool value);
    partial void OnVacancyVisibleChanged();
    #endregion
		
		public Vacancy()
		{
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VacancyID
		{
			get
			{
				return this._VacancyID;
			}
			set
			{
				if ((this._VacancyID != value))
				{
					this.OnVacancyIDChanging(value);
					this.SendPropertyChanging();
					this._VacancyID = value;
					this.SendPropertyChanged("VacancyID");
					this.OnVacancyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string VacancyName
		{
			get
			{
				return this._VacancyName;
			}
			set
			{
				if ((this._VacancyName != value))
				{
					this.OnVacancyNameChanging(value);
					this.SendPropertyChanging();
					this._VacancyName = value;
					this.SendPropertyChanged("VacancyName");
					this.OnVacancyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopID", DbType="Int")]
		public System.Nullable<int> ShopID
		{
			get
			{
				return this._ShopID;
			}
			set
			{
				if ((this._ShopID != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIDChanging(value);
					this.SendPropertyChanging();
					this._ShopID = value;
					this.SendPropertyChanged("ShopID");
					this.OnShopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyGender", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public Gender VacancyGender
		{
			get
			{
				return this._VacancyGender;
			}
			set
			{
				if ((this._VacancyGender != value))
				{
					this.OnVacancyGenderChanging(value);
					this.SendPropertyChanging();
					this._VacancyGender = value;
					this.SendPropertyChanged("VacancyGender");
					this.OnVacancyGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyAgeFrom", DbType="Int NOT NULL")]
		public int VacancyAgeFrom
		{
			get
			{
				return this._VacancyAgeFrom;
			}
			set
			{
				if ((this._VacancyAgeFrom != value))
				{
					this.OnVacancyAgeFromChanging(value);
					this.SendPropertyChanging();
					this._VacancyAgeFrom = value;
					this.SendPropertyChanged("VacancyAgeFrom");
					this.OnVacancyAgeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyAgeTo", DbType="Int")]
		public System.Nullable<int> VacancyAgeTo
		{
			get
			{
				return this._VacancyAgeTo;
			}
			set
			{
				if ((this._VacancyAgeTo != value))
				{
					this.OnVacancyAgeToChanging(value);
					this.SendPropertyChanging();
					this._VacancyAgeTo = value;
					this.SendPropertyChanged("VacancyAgeTo");
					this.OnVacancyAgeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyEducation", DbType="VarChar(MAX)")]
		public string VacancyEducation
		{
			get
			{
				return this._VacancyEducation;
			}
			set
			{
				if ((this._VacancyEducation != value))
				{
					this.OnVacancyEducationChanging(value);
					this.SendPropertyChanging();
					this._VacancyEducation = value;
					this.SendPropertyChanged("VacancyEducation");
					this.OnVacancyEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyExperience", DbType="VarChar(MAX)")]
		public string VacancyExperience
		{
			get
			{
				return this._VacancyExperience;
			}
			set
			{
				if ((this._VacancyExperience != value))
				{
					this.OnVacancyExperienceChanging(value);
					this.SendPropertyChanging();
					this._VacancyExperience = value;
					this.SendPropertyChanged("VacancyExperience");
					this.OnVacancyExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyEmployment", DbType="VarChar(MAX)")]
		public string VacancyEmployment
		{
			get
			{
				return this._VacancyEmployment;
			}
			set
			{
				if ((this._VacancyEmployment != value))
				{
					this.OnVacancyEmploymentChanging(value);
					this.SendPropertyChanging();
					this._VacancyEmployment = value;
					this.SendPropertyChanged("VacancyEmployment");
					this.OnVacancyEmploymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyIncomeLevel", DbType="VarChar(500)")]
		public string VacancyIncomeLevel
		{
			get
			{
				return this._VacancyIncomeLevel;
			}
			set
			{
				if ((this._VacancyIncomeLevel != value))
				{
					this.OnVacancyIncomeLevelChanging(value);
					this.SendPropertyChanging();
					this._VacancyIncomeLevel = value;
					this.SendPropertyChanged("VacancyIncomeLevel");
					this.OnVacancyIncomeLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyRequirement", DbType="VarChar(MAX)")]
		public string VacancyRequirement
		{
			get
			{
				return this._VacancyRequirement;
			}
			set
			{
				if ((this._VacancyRequirement != value))
				{
					this.OnVacancyRequirementChanging(value);
					this.SendPropertyChanging();
					this._VacancyRequirement = value;
					this.SendPropertyChanged("VacancyRequirement");
					this.OnVacancyRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyFunctions", DbType="VarChar(MAX)")]
		public string VacancyFunctions
		{
			get
			{
				return this._VacancyFunctions;
			}
			set
			{
				if ((this._VacancyFunctions != value))
				{
					this.OnVacancyFunctionsChanging(value);
					this.SendPropertyChanging();
					this._VacancyFunctions = value;
					this.SendPropertyChanged("VacancyFunctions");
					this.OnVacancyFunctionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyNote", DbType="VarChar(MAX)")]
		public string VacancyNote
		{
			get
			{
				return this._VacancyNote;
			}
			set
			{
				if ((this._VacancyNote != value))
				{
					this.OnVacancyNoteChanging(value);
					this.SendPropertyChanging();
					this._VacancyNote = value;
					this.SendPropertyChanged("VacancyNote");
					this.OnVacancyNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyContacts", DbType="VarChar(MAX)")]
		public string VacancyContacts
		{
			get
			{
				return this._VacancyContacts;
			}
			set
			{
				if ((this._VacancyContacts != value))
				{
					this.OnVacancyContactsChanging(value);
					this.SendPropertyChanging();
					this._VacancyContacts = value;
					this.SendPropertyChanged("VacancyContacts");
					this.OnVacancyContactsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyVisible", DbType="Bit NOT NULL")]
		public bool VacancyVisible
		{
			get
			{
				return this._VacancyVisible;
			}
			set
			{
				if ((this._VacancyVisible != value))
				{
					this.OnVacancyVisibleChanging(value);
					this.SendPropertyChanging();
					this._VacancyVisible = value;
					this.SendPropertyChanged("VacancyVisible");
					this.OnVacancyVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Vacancy", Storage="_Shop", ThisKey="ShopID", OtherKey="ShopID", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.Vacancies.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.Vacancies.Add(this);
						this._ShopID = value.ShopID;
					}
					else
					{
						this._ShopID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpID;
		
		private int _ShopID;
		
		private string _EmpName;
		
		private string _EmpPosition;
		
		private string _EmpEmail;
		
		private string _EmpICQ;
		
		private string _EmpPhone;
		
		private bool _EmpVisible;
		
		private int _EmpPriority;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(int value);
    partial void OnEmpIDChanged();
    partial void OnShopIDChanging(int value);
    partial void OnShopIDChanged();
    partial void OnEmpNameChanging(string value);
    partial void OnEmpNameChanged();
    partial void OnEmpPositionChanging(string value);
    partial void OnEmpPositionChanged();
    partial void OnEmpEmailChanging(string value);
    partial void OnEmpEmailChanged();
    partial void OnEmpICQChanging(string value);
    partial void OnEmpICQChanged();
    partial void OnEmpPhoneChanging(string value);
    partial void OnEmpPhoneChanged();
    partial void OnEmpVisibleChanging(bool value);
    partial void OnEmpVisibleChanged();
    partial void OnEmpPriorityChanging(int value);
    partial void OnEmpPriorityChanged();
    #endregion
		
		public Employee()
		{
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopID", DbType="Int NOT NULL")]
		public int ShopID
		{
			get
			{
				return this._ShopID;
			}
			set
			{
				if ((this._ShopID != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIDChanging(value);
					this.SendPropertyChanging();
					this._ShopID = value;
					this.SendPropertyChanged("ShopID");
					this.OnShopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this.OnEmpNameChanging(value);
					this.SendPropertyChanging();
					this._EmpName = value;
					this.SendPropertyChanged("EmpName");
					this.OnEmpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpPosition", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string EmpPosition
		{
			get
			{
				return this._EmpPosition;
			}
			set
			{
				if ((this._EmpPosition != value))
				{
					this.OnEmpPositionChanging(value);
					this.SendPropertyChanging();
					this._EmpPosition = value;
					this.SendPropertyChanged("EmpPosition");
					this.OnEmpPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpEmail", DbType="VarChar(250)")]
		public string EmpEmail
		{
			get
			{
				return this._EmpEmail;
			}
			set
			{
				if ((this._EmpEmail != value))
				{
					this.OnEmpEmailChanging(value);
					this.SendPropertyChanging();
					this._EmpEmail = value;
					this.SendPropertyChanged("EmpEmail");
					this.OnEmpEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpICQ", DbType="VarChar(100)")]
		public string EmpICQ
		{
			get
			{
				return this._EmpICQ;
			}
			set
			{
				if ((this._EmpICQ != value))
				{
					this.OnEmpICQChanging(value);
					this.SendPropertyChanging();
					this._EmpICQ = value;
					this.SendPropertyChanged("EmpICQ");
					this.OnEmpICQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpPhone", DbType="VarChar(100)")]
		public string EmpPhone
		{
			get
			{
				return this._EmpPhone;
			}
			set
			{
				if ((this._EmpPhone != value))
				{
					this.OnEmpPhoneChanging(value);
					this.SendPropertyChanging();
					this._EmpPhone = value;
					this.SendPropertyChanged("EmpPhone");
					this.OnEmpPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpVisible", DbType="Bit NOT NULL")]
		public bool EmpVisible
		{
			get
			{
				return this._EmpVisible;
			}
			set
			{
				if ((this._EmpVisible != value))
				{
					this.OnEmpVisibleChanging(value);
					this.SendPropertyChanging();
					this._EmpVisible = value;
					this.SendPropertyChanged("EmpVisible");
					this.OnEmpVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpPriority", DbType="Int NOT NULL")]
		public int EmpPriority
		{
			get
			{
				return this._EmpPriority;
			}
			set
			{
				if ((this._EmpPriority != value))
				{
					this.OnEmpPriorityChanging(value);
					this.SendPropertyChanging();
					this._EmpPriority = value;
					this.SendPropertyChanged("EmpPriority");
					this.OnEmpPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Employee", Storage="_Shop", ThisKey="ShopID", OtherKey="ShopID", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._ShopID = value.ShopID;
					}
					else
					{
						this._ShopID = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.FeedbackRecipients")]
	public partial class FeedbackRecipient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecipientID;
		
		private string _RecipientName;
		
		private string _RecipientEmail;
		
		private bool _RecipientVisible;
		
		private EntitySet<FeedbackRecipientsLoc> _FeedbackRecipientsLocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecipientIDChanging(int value);
    partial void OnRecipientIDChanged();
    partial void OnRecipientNameChanging(string value);
    partial void OnRecipientNameChanged();
    partial void OnRecipientEmailChanging(string value);
    partial void OnRecipientEmailChanged();
    partial void OnRecipientVisibleChanging(bool value);
    partial void OnRecipientVisibleChanged();
    #endregion
		
		public FeedbackRecipient()
		{
			this._FeedbackRecipientsLocs = new EntitySet<FeedbackRecipientsLoc>(new Action<FeedbackRecipientsLoc>(this.attach_FeedbackRecipientsLocs), new Action<FeedbackRecipientsLoc>(this.detach_FeedbackRecipientsLocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecipientID
		{
			get
			{
				return this._RecipientID;
			}
			set
			{
				if ((this._RecipientID != value))
				{
					this.OnRecipientIDChanging(value);
					this.SendPropertyChanging();
					this._RecipientID = value;
					this.SendPropertyChanged("RecipientID");
					this.OnRecipientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string RecipientName
		{
			get
			{
				return this._RecipientName;
			}
			set
			{
				if ((this._RecipientName != value))
				{
					this.OnRecipientNameChanging(value);
					this.SendPropertyChanging();
					this._RecipientName = value;
					this.SendPropertyChanged("RecipientName");
					this.OnRecipientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientEmail", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string RecipientEmail
		{
			get
			{
				return this._RecipientEmail;
			}
			set
			{
				if ((this._RecipientEmail != value))
				{
					this.OnRecipientEmailChanging(value);
					this.SendPropertyChanging();
					this._RecipientEmail = value;
					this.SendPropertyChanged("RecipientEmail");
					this.OnRecipientEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientVisible", DbType="Bit NOT NULL")]
		public bool RecipientVisible
		{
			get
			{
				return this._RecipientVisible;
			}
			set
			{
				if ((this._RecipientVisible != value))
				{
					this.OnRecipientVisibleChanging(value);
					this.SendPropertyChanging();
					this._RecipientVisible = value;
					this.SendPropertyChanged("RecipientVisible");
					this.OnRecipientVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeedbackRecipient_FeedbackRecipientsLoc", Storage="_FeedbackRecipientsLocs", ThisKey="RecipientID", OtherKey="RecipientID")]
		public EntitySet<FeedbackRecipientsLoc> FeedbackRecipientsLocs
		{
			get
			{
				return this._FeedbackRecipientsLocs;
			}
			set
			{
				this._FeedbackRecipientsLocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeedbackRecipientsLocs(FeedbackRecipientsLoc entity)
		{
			this.SendPropertyChanging();
			entity.FeedbackRecipient = this;
		}
		
		private void detach_FeedbackRecipientsLocs(FeedbackRecipientsLoc entity)
		{
			this.SendPropertyChanging();
			entity.FeedbackRecipient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Folders")]
	public partial class Folder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderID;
		
		private System.Nullable<int> _ParentID;
		
		private string _FolderName;
		
		private System.DateTime _FolderCreationDate;
		
		private EntitySet<Folder> _Folders;
		
		private EntitySet<File> _Files;
		
		private EntityRef<Folder> _Folder1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnFolderNameChanging(string value);
    partial void OnFolderNameChanged();
    partial void OnFolderCreationDateChanging(System.DateTime value);
    partial void OnFolderCreationDateChanged();
    #endregion
		
		public Folder()
		{
			this._Folders = new EntitySet<Folder>(new Action<Folder>(this.attach_Folders), new Action<Folder>(this.detach_Folders));
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._Folder1 = default(EntityRef<Folder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Folder1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string FolderName
		{
			get
			{
				return this._FolderName;
			}
			set
			{
				if ((this._FolderName != value))
				{
					this.OnFolderNameChanging(value);
					this.SendPropertyChanging();
					this._FolderName = value;
					this.SendPropertyChanged("FolderName");
					this.OnFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderCreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime FolderCreationDate
		{
			get
			{
				return this._FolderCreationDate;
			}
			set
			{
				if ((this._FolderCreationDate != value))
				{
					this.OnFolderCreationDateChanging(value);
					this.SendPropertyChanging();
					this._FolderCreationDate = value;
					this.SendPropertyChanged("FolderCreationDate");
					this.OnFolderCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Folder", Storage="_Folders", ThisKey="FolderID", OtherKey="ParentID")]
		public EntitySet<Folder> Folders
		{
			get
			{
				return this._Folders;
			}
			set
			{
				this._Folders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_File", Storage="_Files", ThisKey="FolderID", OtherKey="FolderID")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Folder", Storage="_Folder1", ThisKey="ParentID", OtherKey="FolderID", IsForeignKey=true)]
		public Folder Parent
		{
			get
			{
				return this._Folder1.Entity;
			}
			set
			{
				Folder previousValue = this._Folder1.Entity;
				if (((previousValue != value) 
							|| (this._Folder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Folder1.Entity = null;
						previousValue.Folders.Remove(this);
					}
					this._Folder1.Entity = value;
					if ((value != null))
					{
						value.Folders.Add(this);
						this._ParentID = value.FolderID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Folder = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Folder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileID;
		
		private int _FolderID;
		
		private string _FileName;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _FileBody;
		
		private string _FileMimeType;
		
		private int _FileSize;
		
		private System.DateTime _FileCreationDate;
		
		private System.DateTime _FileModificationDate;
		
		private string _FileNote;
		
		private bool _IsImage;
		
		private System.Nullable<int> _ImageWidth;
		
		private System.Nullable<int> _ImageHeight;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private EntitySet<Banners> _Banners;
		
		private EntitySet<TireBrand> _TireBrands;
		
		private EntitySet<DiscBrand> _DiscBrands;
		
		private EntitySet<OurCatalog> _OurCatalogs;
		
		private EntityRef<Folder> _Folder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileBodyChanging(System.Data.Linq.Binary value);
    partial void OnFileBodyChanged();
    partial void OnFileMimeTypeChanging(string value);
    partial void OnFileMimeTypeChanged();
    partial void OnFileSizeChanging(int value);
    partial void OnFileSizeChanged();
    partial void OnFileCreationDateChanging(System.DateTime value);
    partial void OnFileCreationDateChanged();
    partial void OnFileModificationDateChanging(System.DateTime value);
    partial void OnFileModificationDateChanged();
    partial void OnFileNoteChanging(string value);
    partial void OnFileNoteChanged();
    partial void OnIsImageChanging(bool value);
    partial void OnIsImageChanged();
    partial void OnImageWidthChanging(System.Nullable<int> value);
    partial void OnImageWidthChanged();
    partial void OnImageHeightChanging(System.Nullable<int> value);
    partial void OnImageHeightChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public File()
		{
			this._Banners = new EntitySet<Banners>(new Action<Banners>(this.attach_Banners), new Action<Banners>(this.detach_Banners));
			this._TireBrands = new EntitySet<TireBrand>(new Action<TireBrand>(this.attach_TireBrands), new Action<TireBrand>(this.detach_TireBrands));
			this._DiscBrands = new EntitySet<DiscBrand>(new Action<DiscBrand>(this.attach_DiscBrands), new Action<DiscBrand>(this.detach_DiscBrands));
			this._OurCatalogs = new EntitySet<OurCatalog>(new Action<OurCatalog>(this.attach_OurCatalogs), new Action<OurCatalog>(this.detach_OurCatalogs));
			this._Folder = default(EntityRef<Folder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					if (this._Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileBody", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileBody
		{
			get
			{
				return this._FileBody.Value;
			}
			set
			{
				if ((this._FileBody.Value != value))
				{
					this.OnFileBodyChanging(value);
					this.SendPropertyChanging();
					this._FileBody.Value = value;
					this.SendPropertyChanged("FileBody");
					this.OnFileBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileMimeType", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FileMimeType
		{
			get
			{
				return this._FileMimeType;
			}
			set
			{
				if ((this._FileMimeType != value))
				{
					this.OnFileMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._FileMimeType = value;
					this.SendPropertyChanged("FileMimeType");
					this.OnFileMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCreationDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime FileCreationDate
		{
			get
			{
				return this._FileCreationDate;
			}
			set
			{
				if ((this._FileCreationDate != value))
				{
					this.OnFileCreationDateChanging(value);
					this.SendPropertyChanging();
					this._FileCreationDate = value;
					this.SendPropertyChanged("FileCreationDate");
					this.OnFileCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileModificationDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime FileModificationDate
		{
			get
			{
				return this._FileModificationDate;
			}
			set
			{
				if ((this._FileModificationDate != value))
				{
					this.OnFileModificationDateChanging(value);
					this.SendPropertyChanging();
					this._FileModificationDate = value;
					this.SendPropertyChanged("FileModificationDate");
					this.OnFileModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNote", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string FileNote
		{
			get
			{
				return this._FileNote;
			}
			set
			{
				if ((this._FileNote != value))
				{
					this.OnFileNoteChanging(value);
					this.SendPropertyChanging();
					this._FileNote = value;
					this.SendPropertyChanged("FileNote");
					this.OnFileNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImage", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsImage
		{
			get
			{
				return this._IsImage;
			}
			set
			{
				if ((this._IsImage != value))
				{
					this.OnIsImageChanging(value);
					this.SendPropertyChanging();
					this._IsImage = value;
					this.SendPropertyChanged("IsImage");
					this.OnIsImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageWidth", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ImageWidth
		{
			get
			{
				return this._ImageWidth;
			}
			set
			{
				if ((this._ImageWidth != value))
				{
					this.OnImageWidthChanging(value);
					this.SendPropertyChanging();
					this._ImageWidth = value;
					this.SendPropertyChanged("ImageWidth");
					this.OnImageWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageHeight", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ImageHeight
		{
			get
			{
				return this._ImageHeight;
			}
			set
			{
				if ((this._ImageHeight != value))
				{
					this.OnImageHeightChanging(value);
					this.SendPropertyChanging();
					this._ImageHeight = value;
					this.SendPropertyChanged("ImageHeight");
					this.OnImageHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Banners", Storage="_Banners", ThisKey="FileID", OtherKey="FileID")]
		public EntitySet<Banners> Banners
		{
			get
			{
				return this._Banners;
			}
			set
			{
				this._Banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_TireBrand", Storage="_TireBrands", ThisKey="FileID", OtherKey="ImageId")]
		public EntitySet<TireBrand> TireBrands
		{
			get
			{
				return this._TireBrands;
			}
			set
			{
				this._TireBrands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_DiscBrand", Storage="_DiscBrands", ThisKey="FileID", OtherKey="ImageId")]
		public EntitySet<DiscBrand> DiscBrands
		{
			get
			{
				return this._DiscBrands;
			}
			set
			{
				this._DiscBrands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_OurCatalog", Storage="_OurCatalogs", ThisKey="FileID", OtherKey="ImageUrl")]
		public EntitySet<OurCatalog> OurCatalogs
		{
			get
			{
				return this._OurCatalogs;
			}
			set
			{
				this._OurCatalogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_File", Storage="_Folder", ThisKey="FolderID", OtherKey="FolderID", IsForeignKey=true)]
		public Folder Folder
		{
			get
			{
				return this._Folder.Entity;
			}
			set
			{
				Folder previousValue = this._Folder.Entity;
				if (((previousValue != value) 
							|| (this._Folder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Folder.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Folder.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._FolderID = value.FolderID;
					}
					else
					{
						this._FolderID = default(int);
					}
					this.SendPropertyChanged("Folder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Banners(Banners entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Banners(Banners entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_TireBrands(TireBrand entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_TireBrands(TireBrand entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_DiscBrands(DiscBrand entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_DiscBrands(DiscBrand entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_OurCatalogs(OurCatalog entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_OurCatalogs(OurCatalog entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Shops")]
	public partial class Shop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopID;
		
		private string _ShopName;
		
		private string _ShopAddress;
		
		private string _ShopMetro;
		
		private string _ShopWorkTime;
		
		private string _ShopPhones;
		
		private string _ShopNote;
		
		private bool _ShopVisible;
		
		private System.Nullable<int> _ShopMapFileID;
		
		private System.Nullable<int> _ShopGalleryFolderID;
		
		private int _ShopPriority;
		
		private string _StoreId;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _RegionID;
		
		private string _SiteUrl;
		
		private double _XCoord;
		
		private float _YCoord;
		
		private string _MapComment;
		
		private bool _isRMS;
		
		private string _FranchName;
		
		private string _InternalFranchName;
		
		private bool _isRetail;
		
		private bool _isWholeSale;
		
		private string _FullInfo;
		
		private EntitySet<Vacancy> _Vacancies;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<Folder> _ShopGalleryFolder;
		
		private EntityRef<File> _ShopMapFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopIDChanging(int value);
    partial void OnShopIDChanged();
    partial void OnShopNameChanging(string value);
    partial void OnShopNameChanged();
    partial void OnShopAddressChanging(string value);
    partial void OnShopAddressChanged();
    partial void OnShopMetroChanging(string value);
    partial void OnShopMetroChanged();
    partial void OnShopWorkTimeChanging(string value);
    partial void OnShopWorkTimeChanged();
    partial void OnShopPhonesChanging(string value);
    partial void OnShopPhonesChanged();
    partial void OnShopNoteChanging(string value);
    partial void OnShopNoteChanged();
    partial void OnShopVisibleChanging(bool value);
    partial void OnShopVisibleChanged();
    partial void OnShopMapFileIDChanging(System.Nullable<int> value);
    partial void OnShopMapFileIDChanged();
    partial void OnShopGalleryFolderIDChanging(System.Nullable<int> value);
    partial void OnShopGalleryFolderIDChanged();
    partial void OnShopPriorityChanging(int value);
    partial void OnShopPriorityChanged();
    partial void OnStoreIdChanging(string value);
    partial void OnStoreIdChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnSiteUrlChanging(string value);
    partial void OnSiteUrlChanged();
    partial void OnXCoordChanging(double value);
    partial void OnXCoordChanged();
    partial void OnYCoordChanging(float value);
    partial void OnYCoordChanged();
    partial void OnMapCommentChanging(string value);
    partial void OnMapCommentChanged();
    partial void OnisRMSChanging(bool value);
    partial void OnisRMSChanged();
    partial void OnFranchNameChanging(string value);
    partial void OnFranchNameChanged();
    partial void OnInternalFranchNameChanging(string value);
    partial void OnInternalFranchNameChanged();
    partial void OnisRetailChanging(bool value);
    partial void OnisRetailChanged();
    partial void OnisWholeSaleChanging(bool value);
    partial void OnisWholeSaleChanged();
    partial void OnFullInfoChanging(string value);
    partial void OnFullInfoChanged();
    #endregion
		
		public Shop()
		{
			this._Vacancies = new EntitySet<Vacancy>(new Action<Vacancy>(this.attach_Vacancies), new Action<Vacancy>(this.detach_Vacancies));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._ShopGalleryFolder = default(EntityRef<Folder>);
			this._ShopMapFile = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShopID
		{
			get
			{
				return this._ShopID;
			}
			set
			{
				if ((this._ShopID != value))
				{
					this.OnShopIDChanging(value);
					this.SendPropertyChanging();
					this._ShopID = value;
					this.SendPropertyChanged("ShopID");
					this.OnShopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ShopName
		{
			get
			{
				return this._ShopName;
			}
			set
			{
				if ((this._ShopName != value))
				{
					this.OnShopNameChanging(value);
					this.SendPropertyChanging();
					this._ShopName = value;
					this.SendPropertyChanged("ShopName");
					this.OnShopNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ShopAddress
		{
			get
			{
				return this._ShopAddress;
			}
			set
			{
				if ((this._ShopAddress != value))
				{
					this.OnShopAddressChanging(value);
					this.SendPropertyChanging();
					this._ShopAddress = value;
					this.SendPropertyChanged("ShopAddress");
					this.OnShopAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopMetro", DbType="VarChar(MAX)")]
		public string ShopMetro
		{
			get
			{
				return this._ShopMetro;
			}
			set
			{
				if ((this._ShopMetro != value))
				{
					this.OnShopMetroChanging(value);
					this.SendPropertyChanging();
					this._ShopMetro = value;
					this.SendPropertyChanged("ShopMetro");
					this.OnShopMetroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopWorkTime", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ShopWorkTime
		{
			get
			{
				return this._ShopWorkTime;
			}
			set
			{
				if ((this._ShopWorkTime != value))
				{
					this.OnShopWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._ShopWorkTime = value;
					this.SendPropertyChanged("ShopWorkTime");
					this.OnShopWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPhones", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ShopPhones
		{
			get
			{
				return this._ShopPhones;
			}
			set
			{
				if ((this._ShopPhones != value))
				{
					this.OnShopPhonesChanging(value);
					this.SendPropertyChanging();
					this._ShopPhones = value;
					this.SendPropertyChanged("ShopPhones");
					this.OnShopPhonesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopNote", DbType="VarChar(MAX)")]
		public string ShopNote
		{
			get
			{
				return this._ShopNote;
			}
			set
			{
				if ((this._ShopNote != value))
				{
					this.OnShopNoteChanging(value);
					this.SendPropertyChanging();
					this._ShopNote = value;
					this.SendPropertyChanged("ShopNote");
					this.OnShopNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopVisible", DbType="Bit NOT NULL")]
		public bool ShopVisible
		{
			get
			{
				return this._ShopVisible;
			}
			set
			{
				if ((this._ShopVisible != value))
				{
					this.OnShopVisibleChanging(value);
					this.SendPropertyChanging();
					this._ShopVisible = value;
					this.SendPropertyChanged("ShopVisible");
					this.OnShopVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopMapFileID", DbType="Int")]
		public System.Nullable<int> ShopMapFileID
		{
			get
			{
				return this._ShopMapFileID;
			}
			set
			{
				if ((this._ShopMapFileID != value))
				{
					if (this._ShopMapFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopMapFileIDChanging(value);
					this.SendPropertyChanging();
					this._ShopMapFileID = value;
					this.SendPropertyChanged("ShopMapFileID");
					this.OnShopMapFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopGalleryFolderID", DbType="Int")]
		public System.Nullable<int> ShopGalleryFolderID
		{
			get
			{
				return this._ShopGalleryFolderID;
			}
			set
			{
				if ((this._ShopGalleryFolderID != value))
				{
					if (this._ShopGalleryFolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopGalleryFolderIDChanging(value);
					this.SendPropertyChanging();
					this._ShopGalleryFolderID = value;
					this.SendPropertyChanged("ShopGalleryFolderID");
					this.OnShopGalleryFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPriority", DbType="Int NOT NULL")]
		public int ShopPriority
		{
			get
			{
				return this._ShopPriority;
			}
			set
			{
				if ((this._ShopPriority != value))
				{
					this.OnShopPriorityChanging(value);
					this.SendPropertyChanging();
					this._ShopPriority = value;
					this.SendPropertyChanged("ShopPriority");
					this.OnShopPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Varchar(50)")]
		public string StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUrl", DbType="NVarChar(100)")]
		public string SiteUrl
		{
			get
			{
				return this._SiteUrl;
			}
			set
			{
				if ((this._SiteUrl != value))
				{
					this.OnSiteUrlChanging(value);
					this.SendPropertyChanging();
					this._SiteUrl = value;
					this.SendPropertyChanged("SiteUrl");
					this.OnSiteUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XCoord", DbType="real")]
		public double XCoord
		{
			get
			{
				return this._XCoord;
			}
			set
			{
				if ((this._XCoord != value))
				{
					this.OnXCoordChanging(value);
					this.SendPropertyChanging();
					this._XCoord = value;
					this.SendPropertyChanged("XCoord");
					this.OnXCoordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YCoord", DbType="real")]
		public float YCoord
		{
			get
			{
				return this._YCoord;
			}
			set
			{
				if ((this._YCoord != value))
				{
					this.OnYCoordChanging(value);
					this.SendPropertyChanging();
					this._YCoord = value;
					this.SendPropertyChanged("YCoord");
					this.OnYCoordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapComment", DbType="NVarChar(Max)")]
		public string MapComment
		{
			get
			{
				return this._MapComment;
			}
			set
			{
				if ((this._MapComment != value))
				{
					this.OnMapCommentChanging(value);
					this.SendPropertyChanging();
					this._MapComment = value;
					this.SendPropertyChanged("MapComment");
					this.OnMapCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRMS", DbType="bit")]
		public bool isRMS
		{
			get
			{
				return this._isRMS;
			}
			set
			{
				if ((this._isRMS != value))
				{
					this.OnisRMSChanging(value);
					this.SendPropertyChanging();
					this._isRMS = value;
					this.SendPropertyChanged("isRMS");
					this.OnisRMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchName", DbType="Nvarchar(100)")]
		public string FranchName
		{
			get
			{
				return this._FranchName;
			}
			set
			{
				if ((this._FranchName != value))
				{
					this.OnFranchNameChanging(value);
					this.SendPropertyChanging();
					this._FranchName = value;
					this.SendPropertyChanged("FranchName");
					this.OnFranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalFranchName", DbType="nvarchar(250)")]
		public string InternalFranchName
		{
			get
			{
				return this._InternalFranchName;
			}
			set
			{
				if ((this._InternalFranchName != value))
				{
					this.OnInternalFranchNameChanging(value);
					this.SendPropertyChanging();
					this._InternalFranchName = value;
					this.SendPropertyChanged("InternalFranchName");
					this.OnInternalFranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRetail", DbType="Bit NOT NULL")]
		public bool isRetail
		{
			get
			{
				return this._isRetail;
			}
			set
			{
				if ((this._isRetail != value))
				{
					this.OnisRetailChanging(value);
					this.SendPropertyChanging();
					this._isRetail = value;
					this.SendPropertyChanged("isRetail");
					this.OnisRetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isWholeSale", DbType="Bit NOT NULL")]
		public bool isWholeSale
		{
			get
			{
				return this._isWholeSale;
			}
			set
			{
				if ((this._isWholeSale != value))
				{
					this.OnisWholeSaleChanging(value);
					this.SendPropertyChanging();
					this._isWholeSale = value;
					this.SendPropertyChanged("isWholeSale");
					this.OnisWholeSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullInfo", DbType="varchar(255)", CanBeNull=false)]
		public string FullInfo
		{
			get
			{
				return this._FullInfo;
			}
			set
			{
				if ((this._FullInfo != value))
				{
					this.OnFullInfoChanging(value);
					this.SendPropertyChanging();
					this._FullInfo = value;
					this.SendPropertyChanged("FullInfo");
					this.OnFullInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Vacancy", Storage="_Vacancies", ThisKey="ShopID", OtherKey="ShopID")]
		public EntitySet<Vacancy> Vacancies
		{
			get
			{
				return this._Vacancies;
			}
			set
			{
				this._Vacancies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Employee", Storage="_Employees", ThisKey="ShopID", OtherKey="ShopID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Shop", Storage="_ShopGalleryFolder", ThisKey="ShopGalleryFolderID", OtherKey="FolderID", IsForeignKey=true)]
		public Folder ShopGalleryFolder
		{
			get
			{
				return this._ShopGalleryFolder.Entity;
			}
			set
			{
				if ((this._ShopGalleryFolder.Entity != value))
				{
					this.SendPropertyChanging();
					this._ShopGalleryFolder.Entity = value;
					this.SendPropertyChanged("ShopGalleryFolder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Shop", Storage="_ShopMapFile", ThisKey="ShopMapFileID", OtherKey="FileID", IsForeignKey=true)]
		public File ShopMapFile
		{
			get
			{
				return this._ShopMapFile.Entity;
			}
			set
			{
				if ((this._ShopMapFile.Entity != value))
				{
					this.SendPropertyChanging();
					this._ShopMapFile.Entity = value;
					this.SendPropertyChanged("ShopMapFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vacancies(Vacancy entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_Vacancies(Vacancy entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Brands")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrandID;
		
		private VehicleType _VehicleType;
		
		private string _Name;
		
		private string _Info;
		
		private System.Nullable<int> _LogoFileID;
		
		private string _AutoXPUrl;
		
		private string _UrlCode;
		
		private string _PageTitle;
		
		private string _PageKeywords;
		
		private string _PageDescription;
		
		private string _PageFooter;
		
		private EntityRef<File> _LogoFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnVehicleTypeChanging(VehicleType value);
    partial void OnVehicleTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnLogoFileIDChanging(System.Nullable<int> value);
    partial void OnLogoFileIDChanged();
    partial void OnAutoXPUrlChanging(string value);
    partial void OnAutoXPUrlChanged();
    partial void OnUrlCodeChanging(string value);
    partial void OnUrlCodeChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPageKeywordsChanging(string value);
    partial void OnPageKeywordsChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    partial void OnPageFooterChanging(string value);
    partial void OnPageFooterChanged();
    #endregion
		
		public Brand()
		{
			this._LogoFile = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleType", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType;
			}
			set
			{
				if ((this._VehicleType != value))
				{
					this.OnVehicleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehicleType = value;
					this.SendPropertyChanged("VehicleType");
					this.OnVehicleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="VarChar(MAX)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFileID", DbType="Int")]
		public System.Nullable<int> LogoFileID
		{
			get
			{
				return this._LogoFileID;
			}
			set
			{
				if ((this._LogoFileID != value))
				{
					if (this._LogoFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogoFileIDChanging(value);
					this.SendPropertyChanging();
					this._LogoFileID = value;
					this.SendPropertyChanged("LogoFileID");
					this.OnLogoFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoXPUrl", DbType="VarChar(500)")]
		public string AutoXPUrl
		{
			get
			{
				return this._AutoXPUrl;
			}
			set
			{
				if ((this._AutoXPUrl != value))
				{
					this.OnAutoXPUrlChanging(value);
					this.SendPropertyChanging();
					this._AutoXPUrl = value;
					this.SendPropertyChanged("AutoXPUrl");
					this.OnAutoXPUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCode", DbType="Varchar(50) NOT NULL", CanBeNull=false)]
		public string UrlCode
		{
			get
			{
				return this._UrlCode;
			}
			set
			{
				if ((this._UrlCode != value))
				{
					this.OnUrlCodeChanging(value);
					this.SendPropertyChanging();
					this._UrlCode = value;
					this.SendPropertyChanged("UrlCode");
					this.OnUrlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="VarChar(500)")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKeywords", DbType="VarChar(MAX)")]
		public string PageKeywords
		{
			get
			{
				return this._PageKeywords;
			}
			set
			{
				if ((this._PageKeywords != value))
				{
					this.OnPageKeywordsChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords = value;
					this.SendPropertyChanged("PageKeywords");
					this.OnPageKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDescription", DbType="Varchar(MAX)")]
		public string PageDescription
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFooter", DbType="VarChar(MAX)")]
		public string PageFooter
		{
			get
			{
				return this._PageFooter;
			}
			set
			{
				if ((this._PageFooter != value))
				{
					this.OnPageFooterChanging(value);
					this.SendPropertyChanging();
					this._PageFooter = value;
					this.SendPropertyChanged("PageFooter");
					this.OnPageFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Brand", Storage="_LogoFile", ThisKey="LogoFileID", OtherKey="FileID", IsForeignKey=true)]
		public File LogoFile
		{
			get
			{
				return this._LogoFile.Entity;
			}
			set
			{
				if ((this._LogoFile.Entity != value))
				{
					this.SendPropertyChanging();
					this._LogoFile.Entity = value;
					this.SendPropertyChanged("LogoFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Manufacturers")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ManufacturerID;
		
		private string _Name;
		
		private string _Info;
		
		private string _WebSiteUrl;
		
		private System.Nullable<int> _LogoFileID;
		
		private System.Nullable<int> _FolderID;
		
		private bool _ShowInCatalog;
		
		private string _UrlCode;
		
		private string _PageTitle;
		
		private string _PageKeywords;
		
		private string _PageDescription;
		
		private string _PageFooter;
		
		private EntityRef<Folder> _Folder;
		
		private EntityRef<File> _LogoFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnWebSiteUrlChanging(string value);
    partial void OnWebSiteUrlChanged();
    partial void OnLogoFileIDChanging(System.Nullable<int> value);
    partial void OnLogoFileIDChanged();
    partial void OnFolderIDChanging(System.Nullable<int> value);
    partial void OnFolderIDChanged();
    partial void OnShowInCatalogChanging(bool value);
    partial void OnShowInCatalogChanged();
    partial void OnUrlCodeChanging(string value);
    partial void OnUrlCodeChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPageKeywordsChanging(string value);
    partial void OnPageKeywordsChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    partial void OnPageFooterChanging(string value);
    partial void OnPageFooterChanged();
    #endregion
		
		public Manufacturer()
		{
			this._Folder = default(EntityRef<Folder>);
			this._LogoFile = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="VarChar(MAX)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSiteUrl", DbType="VarChar(256)")]
		public string WebSiteUrl
		{
			get
			{
				return this._WebSiteUrl;
			}
			set
			{
				if ((this._WebSiteUrl != value))
				{
					this.OnWebSiteUrlChanging(value);
					this.SendPropertyChanging();
					this._WebSiteUrl = value;
					this.SendPropertyChanged("WebSiteUrl");
					this.OnWebSiteUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFileID", DbType="Int")]
		public System.Nullable<int> LogoFileID
		{
			get
			{
				return this._LogoFileID;
			}
			set
			{
				if ((this._LogoFileID != value))
				{
					if (this._LogoFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogoFileIDChanging(value);
					this.SendPropertyChanging();
					this._LogoFileID = value;
					this.SendPropertyChanged("LogoFileID");
					this.OnLogoFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int")]
		public System.Nullable<int> FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					if (this._Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInCatalog", DbType="Bit NOT NULL")]
		public bool ShowInCatalog
		{
			get
			{
				return this._ShowInCatalog;
			}
			set
			{
				if ((this._ShowInCatalog != value))
				{
					this.OnShowInCatalogChanging(value);
					this.SendPropertyChanging();
					this._ShowInCatalog = value;
					this.SendPropertyChanged("ShowInCatalog");
					this.OnShowInCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCode", DbType="Varchar(50) NOT NULL", CanBeNull=false)]
		public string UrlCode
		{
			get
			{
				return this._UrlCode;
			}
			set
			{
				if ((this._UrlCode != value))
				{
					this.OnUrlCodeChanging(value);
					this.SendPropertyChanging();
					this._UrlCode = value;
					this.SendPropertyChanged("UrlCode");
					this.OnUrlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="VarChar(500)")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKeywords", DbType="VarChar(MAX)")]
		public string PageKeywords
		{
			get
			{
				return this._PageKeywords;
			}
			set
			{
				if ((this._PageKeywords != value))
				{
					this.OnPageKeywordsChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords = value;
					this.SendPropertyChanged("PageKeywords");
					this.OnPageKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDescription", DbType="Varchar(MAX)")]
		public string PageDescription
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFooter", DbType="VarChar(MAX)")]
		public string PageFooter
		{
			get
			{
				return this._PageFooter;
			}
			set
			{
				if ((this._PageFooter != value))
				{
					this.OnPageFooterChanging(value);
					this.SendPropertyChanging();
					this._PageFooter = value;
					this.SendPropertyChanged("PageFooter");
					this.OnPageFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Manufacturer", Storage="_Folder", ThisKey="FolderID", OtherKey="FolderID", IsForeignKey=true)]
		public Folder Folder
		{
			get
			{
				return this._Folder.Entity;
			}
			set
			{
				if ((this._Folder.Entity != value))
				{
					this.SendPropertyChanging();
					this._Folder.Entity = value;
					this.SendPropertyChanged("Folder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Manufacturer", Storage="_LogoFile", ThisKey="LogoFileID", OtherKey="FileID", IsForeignKey=true)]
		public File LogoFile
		{
			get
			{
				return this._LogoFile.Entity;
			}
			set
			{
				if ((this._LogoFile.Entity != value))
				{
					this.SendPropertyChanging();
					this._LogoFile.Entity = value;
					this.SendPropertyChanged("LogoFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.CatalogItems")]
	public partial class CatalogItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogItemID;
		
		private System.Nullable<int> _ParentItemID;
		
		private int _CatalogItemPriority;
		
		private string _CatalogItemName;
		
		private string _CatalogItemPath;
		
		private string _CatalogItemQueryString;
		
		private bool _CatalogItemVisible;
		
		private bool _IsServicePage;
		
		private bool _CatalogItemOpenNewWindow;
		
		private CatalogItemMenuType _CatalogItemMenuType;
		
		private string _CatalogItemImageUrl;
		
		private string _CatalogItemCode;
		
		private string _PageTitle;
		
		private string _PageKeywords;
		
		private string _PageDescription;
		
		private string _PageBody;
		
		private string _PageFooter;
		
		private byte _BannerCount;
		
		private string _CssClass;
		
		private EntitySet<CatalogItem> _ChildItems;
		
		private EntitySet<BannersForCatalogItem> _BannersForCatalogItems;
		
		private EntitySet<CatalogItemsLoc> _CatalogItemsLocs;
		
		private EntityRef<CatalogItem> _ParentItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogItemIDChanging(int value);
    partial void OnCatalogItemIDChanged();
    partial void OnParentItemIDChanging(System.Nullable<int> value);
    partial void OnParentItemIDChanged();
    partial void OnCatalogItemPriorityChanging(int value);
    partial void OnCatalogItemPriorityChanged();
    partial void OnCatalogItemNameRUChanging(string value);
    partial void OnCatalogItemNameRUChanged();
    partial void OnCatalogItemPathChanging(string value);
    partial void OnCatalogItemPathChanged();
    partial void OnCatalogItemQueryStringChanging(string value);
    partial void OnCatalogItemQueryStringChanged();
    partial void OnCatalogItemVisibleChanging(bool value);
    partial void OnCatalogItemVisibleChanged();
    partial void OnIsServicePageChanging(bool value);
    partial void OnIsServicePageChanged();
    partial void OnCatalogItemOpenNewWindowChanging(bool value);
    partial void OnCatalogItemOpenNewWindowChanged();
    partial void OnCatalogItemMenuTypeChanging(CatalogItemMenuType value);
    partial void OnCatalogItemMenuTypeChanged();
    partial void OnCatalogItemImageUrlRUChanging(string value);
    partial void OnCatalogItemImageUrlRUChanged();
    partial void OnCatalogItemCodeChanging(string value);
    partial void OnCatalogItemCodeChanged();
    partial void OnPageTitleRUChanging(string value);
    partial void OnPageTitleRUChanged();
    partial void OnPageKeywordsRUChanging(string value);
    partial void OnPageKeywordsRUChanged();
    partial void OnPageDescriptionRUChanging(string value);
    partial void OnPageDescriptionRUChanged();
    partial void OnPageBodyRUChanging(string value);
    partial void OnPageBodyRUChanged();
    partial void OnPageFooterRUChanging(string value);
    partial void OnPageFooterRUChanged();
    partial void OnBannerCountChanging(byte value);
    partial void OnBannerCountChanged();
    partial void OnCssClassChanging(string value);
    partial void OnCssClassChanged();
    #endregion
		
		public CatalogItem()
		{
			this._ChildItems = new EntitySet<CatalogItem>(new Action<CatalogItem>(this.attach_ChildItems), new Action<CatalogItem>(this.detach_ChildItems));
			this._BannersForCatalogItems = new EntitySet<BannersForCatalogItem>(new Action<BannersForCatalogItem>(this.attach_BannersForCatalogItems), new Action<BannersForCatalogItem>(this.detach_BannersForCatalogItems));
			this._CatalogItemsLocs = new EntitySet<CatalogItemsLoc>(new Action<CatalogItemsLoc>(this.attach_CatalogItemsLocs), new Action<CatalogItemsLoc>(this.detach_CatalogItemsLocs));
			this._ParentItem = default(EntityRef<CatalogItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogItemID
		{
			get
			{
				return this._CatalogItemID;
			}
			set
			{
				if ((this._CatalogItemID != value))
				{
					this.OnCatalogItemIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemID = value;
					this.SendPropertyChanged("CatalogItemID");
					this.OnCatalogItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentItemID", DbType="Int")]
		public System.Nullable<int> ParentItemID
		{
			get
			{
				return this._ParentItemID;
			}
			set
			{
				if ((this._ParentItemID != value))
				{
					if (this._ParentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ParentItemID = value;
					this.SendPropertyChanged("ParentItemID");
					this.OnParentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemPriority", DbType="Int NOT NULL")]
		public int CatalogItemPriority
		{
			get
			{
				return this._CatalogItemPriority;
			}
			set
			{
				if ((this._CatalogItemPriority != value))
				{
					this.OnCatalogItemPriorityChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemPriority = value;
					this.SendPropertyChanged("CatalogItemPriority");
					this.OnCatalogItemPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CatalogItemName", Storage="_CatalogItemName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CatalogItemNameRU
		{
			get
			{
				return this._CatalogItemName;
			}
			set
			{
				if ((this._CatalogItemName != value))
				{
					this.OnCatalogItemNameRUChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemName = value;
					this.SendPropertyChanged("CatalogItemNameRU");
					this.OnCatalogItemNameRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemPath", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string CatalogItemPath
		{
			get
			{
				return this._CatalogItemPath;
			}
			set
			{
				if ((this._CatalogItemPath != value))
				{
					this.OnCatalogItemPathChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemPath = value;
					this.SendPropertyChanged("CatalogItemPath");
					this.OnCatalogItemPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemQueryString", DbType="VarChar(250)")]
		public string CatalogItemQueryString
		{
			get
			{
				return this._CatalogItemQueryString;
			}
			set
			{
				if ((this._CatalogItemQueryString != value))
				{
					this.OnCatalogItemQueryStringChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemQueryString = value;
					this.SendPropertyChanged("CatalogItemQueryString");
					this.OnCatalogItemQueryStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemVisible", DbType="Bit NOT NULL")]
		public bool CatalogItemVisible
		{
			get
			{
				return this._CatalogItemVisible;
			}
			set
			{
				if ((this._CatalogItemVisible != value))
				{
					this.OnCatalogItemVisibleChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemVisible = value;
					this.SendPropertyChanged("CatalogItemVisible");
					this.OnCatalogItemVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsServicePage", DbType="Bit NOT NULL")]
		public bool IsServicePage
		{
			get
			{
				return this._IsServicePage;
			}
			set
			{
				if ((this._IsServicePage != value))
				{
					this.OnIsServicePageChanging(value);
					this.SendPropertyChanging();
					this._IsServicePage = value;
					this.SendPropertyChanged("IsServicePage");
					this.OnIsServicePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemOpenNewWindow", DbType="Bit NOT NULL")]
		public bool CatalogItemOpenNewWindow
		{
			get
			{
				return this._CatalogItemOpenNewWindow;
			}
			set
			{
				if ((this._CatalogItemOpenNewWindow != value))
				{
					this.OnCatalogItemOpenNewWindowChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemOpenNewWindow = value;
					this.SendPropertyChanged("CatalogItemOpenNewWindow");
					this.OnCatalogItemOpenNewWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemMenuType", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public CatalogItemMenuType CatalogItemMenuType
		{
			get
			{
				return this._CatalogItemMenuType;
			}
			set
			{
				if ((this._CatalogItemMenuType != value))
				{
					this.OnCatalogItemMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemMenuType = value;
					this.SendPropertyChanged("CatalogItemMenuType");
					this.OnCatalogItemMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CatalogItemImageUrl", Storage="_CatalogItemImageUrl", DbType="VarChar(50)")]
		public string CatalogItemImageUrlRU
		{
			get
			{
				return this._CatalogItemImageUrl;
			}
			set
			{
				if ((this._CatalogItemImageUrl != value))
				{
					this.OnCatalogItemImageUrlRUChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemImageUrl = value;
					this.SendPropertyChanged("CatalogItemImageUrlRU");
					this.OnCatalogItemImageUrlRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CatalogItemCode
		{
			get
			{
				return this._CatalogItemCode;
			}
			set
			{
				if ((this._CatalogItemCode != value))
				{
					this.OnCatalogItemCodeChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemCode = value;
					this.SendPropertyChanged("CatalogItemCode");
					this.OnCatalogItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageTitle", Storage="_PageTitle", DbType="VarChar(500)")]
		public string PageTitleRU
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleRUChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitleRU");
					this.OnPageTitleRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageKeywords", Storage="_PageKeywords", DbType="VarChar(MAX)")]
		public string PageKeywordsRU
		{
			get
			{
				return this._PageKeywords;
			}
			set
			{
				if ((this._PageKeywords != value))
				{
					this.OnPageKeywordsRUChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords = value;
					this.SendPropertyChanged("PageKeywordsRU");
					this.OnPageKeywordsRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageDescription", Storage="_PageDescription", DbType="VarChar(MAX)")]
		public string PageDescriptionRU
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionRUChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescriptionRU");
					this.OnPageDescriptionRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageBody", Storage="_PageBody", DbType="Varchar(MAX)")]
		public string PageBodyRU
		{
			get
			{
				return this._PageBody;
			}
			set
			{
				if ((this._PageBody != value))
				{
					this.OnPageBodyRUChanging(value);
					this.SendPropertyChanging();
					this._PageBody = value;
					this.SendPropertyChanged("PageBodyRU");
					this.OnPageBodyRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageFooter", Storage="_PageFooter", DbType="VarChar(MAX)")]
		public string PageFooterRU
		{
			get
			{
				return this._PageFooter;
			}
			set
			{
				if ((this._PageFooter != value))
				{
					this.OnPageFooterRUChanging(value);
					this.SendPropertyChanging();
					this._PageFooter = value;
					this.SendPropertyChanged("PageFooterRU");
					this.OnPageFooterRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerCount", DbType="TinyInt NOT NULL DEFAULT(1)")]
		public byte BannerCount
		{
			get
			{
				return this._BannerCount;
			}
			set
			{
				if ((this._BannerCount != value))
				{
					this.OnBannerCountChanging(value);
					this.SendPropertyChanging();
					this._BannerCount = value;
					this.SendPropertyChanged("BannerCount");
					this.OnBannerCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CssClass", DbType="VarChar(250)")]
		public string CssClass
		{
			get
			{
				return this._CssClass;
			}
			set
			{
				if ((this._CssClass != value))
				{
					this.OnCssClassChanging(value);
					this.SendPropertyChanging();
					this._CssClass = value;
					this.SendPropertyChanged("CssClass");
					this.OnCssClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogItem_CatalogItem", Storage="_ChildItems", ThisKey="CatalogItemID", OtherKey="ParentItemID")]
		public EntitySet<CatalogItem> ChildItems
		{
			get
			{
				return this._ChildItems;
			}
			set
			{
				this._ChildItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogItem_BannersForCatalogItem", Storage="_BannersForCatalogItems", ThisKey="CatalogItemID", OtherKey="CatalogItemID")]
		public EntitySet<BannersForCatalogItem> BannersForCatalogItems
		{
			get
			{
				return this._BannersForCatalogItems;
			}
			set
			{
				this._BannersForCatalogItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogItem_CatalogItemsLoc", Storage="_CatalogItemsLocs", ThisKey="CatalogItemID", OtherKey="CatalogItemID")]
		public EntitySet<CatalogItemsLoc> CatalogItemsLocs
		{
			get
			{
				return this._CatalogItemsLocs;
			}
			set
			{
				this._CatalogItemsLocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogItem_CatalogItem", Storage="_ParentItem", ThisKey="ParentItemID", OtherKey="CatalogItemID", IsForeignKey=true)]
		public CatalogItem ParentItem
		{
			get
			{
				return this._ParentItem.Entity;
			}
			set
			{
				CatalogItem previousValue = this._ParentItem.Entity;
				if (((previousValue != value) 
							|| (this._ParentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentItem.Entity = null;
						previousValue.ChildItems.Remove(this);
					}
					this._ParentItem.Entity = value;
					if ((value != null))
					{
						value.ChildItems.Add(this);
						this._ParentItemID = value.CatalogItemID;
					}
					else
					{
						this._ParentItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildItems(CatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.ParentItem = this;
		}
		
		private void detach_ChildItems(CatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.ParentItem = null;
		}
		
		private void attach_BannersForCatalogItems(BannersForCatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItem = this;
		}
		
		private void detach_BannersForCatalogItems(BannersForCatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItem = null;
		}
		
		private void attach_CatalogItemsLocs(CatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItem = this;
		}
		
		private void detach_CatalogItemsLocs(CatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.SeoPartsCatalogItems")]
	public partial class SeoPartsCatalogItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Name;
		
		private System.Data.Linq.Link<string> _Body;
		
		private string _UrlCode;
		
		private bool _Visible;
		
		private string _PageTitle;
		
		private System.Data.Linq.Link<string> _PageKeywords;
		
		private System.Data.Linq.Link<string> _PageDescription;
		
		private System.Data.Linq.Link<string> _PageFooter;
		
		private System.Nullable<int> _Priority;
		
		private bool _IsServicePage;
		
		private EntitySet<SeoPartsCatalogItem> _ChildItems;
		
		private EntitySet<SeoPartsCatalogItemsLoc> _SeoPartsCatalogItemsLocs;
		
		private EntityRef<SeoPartsCatalogItem> _ParentItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnNameRUChanging(string value);
    partial void OnNameRUChanged();
    partial void OnBodyRUChanging(string value);
    partial void OnBodyRUChanged();
    partial void OnUrlCodeChanging(string value);
    partial void OnUrlCodeChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnPageTitleRUChanging(string value);
    partial void OnPageTitleRUChanged();
    partial void OnPageKeywordsRUChanging(string value);
    partial void OnPageKeywordsRUChanged();
    partial void OnPageDescriptionRUChanging(string value);
    partial void OnPageDescriptionRUChanged();
    partial void OnPageFooterRUChanging(string value);
    partial void OnPageFooterRUChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnIsServicePageChanging(bool value);
    partial void OnIsServicePageChanged();
    #endregion
		
		public SeoPartsCatalogItem()
		{
			this._ChildItems = new EntitySet<SeoPartsCatalogItem>(new Action<SeoPartsCatalogItem>(this.attach_ChildItems), new Action<SeoPartsCatalogItem>(this.detach_ChildItems));
			this._SeoPartsCatalogItemsLocs = new EntitySet<SeoPartsCatalogItemsLoc>(new Action<SeoPartsCatalogItemsLoc>(this.attach_SeoPartsCatalogItemsLocs), new Action<SeoPartsCatalogItemsLoc>(this.detach_SeoPartsCatalogItemsLocs));
			this._ParentItem = default(EntityRef<SeoPartsCatalogItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._ParentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Name", Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NameRU
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameRUChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("NameRU");
					this.OnNameRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Body", Storage="_Body", DbType="VarChar(MAX)")]
		public string BodyRU
		{
			get
			{
				return this._Body.Value;
			}
			set
			{
				if ((this._Body.Value != value))
				{
					this.OnBodyRUChanging(value);
					this.SendPropertyChanging();
					this._Body.Value = value;
					this.SendPropertyChanged("BodyRU");
					this.OnBodyRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlCode
		{
			get
			{
				return this._UrlCode;
			}
			set
			{
				if ((this._UrlCode != value))
				{
					this.OnUrlCodeChanging(value);
					this.SendPropertyChanging();
					this._UrlCode = value;
					this.SendPropertyChanged("UrlCode");
					this.OnUrlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageTitle", Storage="_PageTitle", DbType="VarChar(500)")]
		public string PageTitleRU
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleRUChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitleRU");
					this.OnPageTitleRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageKeywords", Storage="_PageKeywords", DbType="VarChar(MAX)")]
		public string PageKeywordsRU
		{
			get
			{
				return this._PageKeywords.Value;
			}
			set
			{
				if ((this._PageKeywords.Value != value))
				{
					this.OnPageKeywordsRUChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords.Value = value;
					this.SendPropertyChanged("PageKeywordsRU");
					this.OnPageKeywordsRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageDescription", Storage="_PageDescription", DbType="VarChar(MAX)")]
		public string PageDescriptionRU
		{
			get
			{
				return this._PageDescription.Value;
			}
			set
			{
				if ((this._PageDescription.Value != value))
				{
					this.OnPageDescriptionRUChanging(value);
					this.SendPropertyChanging();
					this._PageDescription.Value = value;
					this.SendPropertyChanged("PageDescriptionRU");
					this.OnPageDescriptionRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PageFooter", Storage="_PageFooter", DbType="VarChar(MAX)")]
		public string PageFooterRU
		{
			get
			{
				return this._PageFooter.Value;
			}
			set
			{
				if ((this._PageFooter.Value != value))
				{
					this.OnPageFooterRUChanging(value);
					this.SendPropertyChanging();
					this._PageFooter.Value = value;
					this.SendPropertyChanged("PageFooterRU");
					this.OnPageFooterRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsServicePage", DbType="Bit NOT NULL")]
		public bool IsServicePage
		{
			get
			{
				return this._IsServicePage;
			}
			set
			{
				if ((this._IsServicePage != value))
				{
					this.OnIsServicePageChanging(value);
					this.SendPropertyChanging();
					this._IsServicePage = value;
					this.SendPropertyChanged("IsServicePage");
					this.OnIsServicePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeoPartsCatalogItem_SeoPartsCatalogItem", Storage="_ChildItems", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<SeoPartsCatalogItem> ChildItems
		{
			get
			{
				return this._ChildItems;
			}
			set
			{
				this._ChildItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeoPartsCatalogItem_SeoPartsCatalogItemsLoc", Storage="_SeoPartsCatalogItemsLocs", ThisKey="ID", OtherKey="ID")]
		public EntitySet<SeoPartsCatalogItemsLoc> SeoPartsCatalogItemsLocs
		{
			get
			{
				return this._SeoPartsCatalogItemsLocs;
			}
			set
			{
				this._SeoPartsCatalogItemsLocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeoPartsCatalogItem_SeoPartsCatalogItem", Storage="_ParentItem", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public SeoPartsCatalogItem ParentItem
		{
			get
			{
				return this._ParentItem.Entity;
			}
			set
			{
				SeoPartsCatalogItem previousValue = this._ParentItem.Entity;
				if (((previousValue != value) 
							|| (this._ParentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentItem.Entity = null;
						previousValue.ChildItems.Remove(this);
					}
					this._ParentItem.Entity = value;
					if ((value != null))
					{
						value.ChildItems.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildItems(SeoPartsCatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.ParentItem = this;
		}
		
		private void detach_ChildItems(SeoPartsCatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.ParentItem = null;
		}
		
		private void attach_SeoPartsCatalogItemsLocs(SeoPartsCatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.SeoPartsCatalogItem = this;
		}
		
		private void detach_SeoPartsCatalogItemsLocs(SeoPartsCatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.SeoPartsCatalogItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.SeoTecDocTextTemplates")]
	public partial class SeoTecDocTextTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private SeoTecDocTextTemplate.TextTypes _TextType;
		
		private string _TextTemplate;
		
		private EntitySet<SeoTecDocText> _SeoTecDocTexts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTextTypeChanging(SeoTecDocTextTemplate.TextTypes value);
    partial void OnTextTypeChanged();
    partial void OnTextTemplateChanging(string value);
    partial void OnTextTemplateChanged();
    #endregion
		
		public SeoTecDocTextTemplate()
		{
			this._SeoTecDocTexts = new EntitySet<SeoTecDocText>(new Action<SeoTecDocText>(this.attach_SeoTecDocTexts), new Action<SeoTecDocText>(this.detach_SeoTecDocTexts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextType", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public SeoTecDocTextTemplate.TextTypes TextType
		{
			get
			{
				return this._TextType;
			}
			set
			{
				if ((this._TextType != value))
				{
					this.OnTextTypeChanging(value);
					this.SendPropertyChanging();
					this._TextType = value;
					this.SendPropertyChanged("TextType");
					this.OnTextTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextTemplate", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string TextTemplate
		{
			get
			{
				return this._TextTemplate;
			}
			set
			{
				if ((this._TextTemplate != value))
				{
					this.OnTextTemplateChanging(value);
					this.SendPropertyChanging();
					this._TextTemplate = value;
					this.SendPropertyChanged("TextTemplate");
					this.OnTextTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeoTecDocTextTemplate_SeoTecDocText", Storage="_SeoTecDocTexts", ThisKey="ID", OtherKey="PageFooterID")]
		public EntitySet<SeoTecDocText> SeoTecDocTexts
		{
			get
			{
				return this._SeoTecDocTexts;
			}
			set
			{
				this._SeoTecDocTexts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SeoTecDocTexts(SeoTecDocText entity)
		{
			this.SendPropertyChanging();
			entity.PageFooterTemplate = this;
		}
		
		private void detach_SeoTecDocTexts(SeoTecDocText entity)
		{
			this.SendPropertyChanging();
			entity.PageFooterTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.SeoTecDocTexts")]
	public partial class SeoTecDocText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PageUrl;
		
		private int _PageTitleID;
		
		private int _PageFooterID;
		
		private EntityRef<SeoTecDocTextTemplate> _PageFooterTemplate;
		
		private EntityRef<SeoTecDocTextTemplate> _PageTitleTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageUrlChanging(string value);
    partial void OnPageUrlChanged();
    partial void OnPageTitleIDChanging(int value);
    partial void OnPageTitleIDChanged();
    partial void OnPageFooterIDChanging(int value);
    partial void OnPageFooterIDChanged();
    #endregion
		
		public SeoTecDocText()
		{
			this._PageFooterTemplate = default(EntityRef<SeoTecDocTextTemplate>);
			this._PageTitleTemplate = default(EntityRef<SeoTecDocTextTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageUrl", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PageUrl
		{
			get
			{
				return this._PageUrl;
			}
			set
			{
				if ((this._PageUrl != value))
				{
					this.OnPageUrlChanging(value);
					this.SendPropertyChanging();
					this._PageUrl = value;
					this.SendPropertyChanged("PageUrl");
					this.OnPageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitleID", DbType="Int NOT NULL")]
		public int PageTitleID
		{
			get
			{
				return this._PageTitleID;
			}
			set
			{
				if ((this._PageTitleID != value))
				{
					if (this._PageTitleTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageTitleIDChanging(value);
					this.SendPropertyChanging();
					this._PageTitleID = value;
					this.SendPropertyChanged("PageTitleID");
					this.OnPageTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFooterID", DbType="Int NOT NULL")]
		public int PageFooterID
		{
			get
			{
				return this._PageFooterID;
			}
			set
			{
				if ((this._PageFooterID != value))
				{
					if (this._PageFooterTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageFooterIDChanging(value);
					this.SendPropertyChanging();
					this._PageFooterID = value;
					this.SendPropertyChanged("PageFooterID");
					this.OnPageFooterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeoTecDocTextTemplate_SeoTecDocText", Storage="_PageFooterTemplate", ThisKey="PageFooterID", OtherKey="ID", IsForeignKey=true)]
		public SeoTecDocTextTemplate PageFooterTemplate
		{
			get
			{
				return this._PageFooterTemplate.Entity;
			}
			set
			{
				SeoTecDocTextTemplate previousValue = this._PageFooterTemplate.Entity;
				if (((previousValue != value) 
							|| (this._PageFooterTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageFooterTemplate.Entity = null;
						previousValue.SeoTecDocTexts.Remove(this);
					}
					this._PageFooterTemplate.Entity = value;
					if ((value != null))
					{
						value.SeoTecDocTexts.Add(this);
						this._PageFooterID = value.ID;
					}
					else
					{
						this._PageFooterID = default(int);
					}
					this.SendPropertyChanged("PageFooterTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeoTecDocTextTemplate_SeoTecDocText1", Storage="_PageTitleTemplate", ThisKey="PageTitleID", OtherKey="ID", IsForeignKey=true)]
		public SeoTecDocTextTemplate PageTitleTemplate
		{
			get
			{
				return this._PageTitleTemplate.Entity;
			}
			set
			{
				if ((this._PageTitleTemplate.Entity != value))
				{
					this.SendPropertyChanging();
					this._PageTitleTemplate.Entity = value;
					this.SendPropertyChanged("PageTitleTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.SparePartGroups")]
	public partial class SparePartGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SparePartGroupID;
		
		private string _GroupName;
		
		private string _BackgroundColor;
		
		private bool _Visible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSparePartGroupIDChanging(int value);
    partial void OnSparePartGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnBackgroundColorChanging(string value);
    partial void OnBackgroundColorChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    #endregion
		
		public SparePartGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparePartGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SparePartGroupID
		{
			get
			{
				return this._SparePartGroupID;
			}
			set
			{
				if ((this._SparePartGroupID != value))
				{
					this.OnSparePartGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SparePartGroupID = value;
					this.SendPropertyChanged("SparePartGroupID");
					this.OnSparePartGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this.OnBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._BackgroundColor = value;
					this.SendPropertyChanged("BackgroundColor");
					this.OnBackgroundColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.BannersForCatalogItems")]
	public partial class BannersForCatalogItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BannerID;
		
		private int _CatalogItemID;
		
		private byte _Position;
		
		private bool _IsVisible;
		
		private EntityRef<CatalogItem> _CatalogItem;
		
		private EntityRef<Banners> _Banners;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBannerIDChanging(int value);
    partial void OnBannerIDChanged();
    partial void OnCatalogItemIDChanging(int value);
    partial void OnCatalogItemIDChanged();
    partial void OnPositionChanging(byte value);
    partial void OnPositionChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public BannersForCatalogItem()
		{
			this._CatalogItem = default(EntityRef<CatalogItem>);
			this._Banners = default(EntityRef<Banners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerID", DbType="Int NOT NULL")]
		public int BannerID
		{
			get
			{
				return this._BannerID;
			}
			set
			{
				if ((this._BannerID != value))
				{
					if (this._Banners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBannerIDChanging(value);
					this.SendPropertyChanging();
					this._BannerID = value;
					this.SendPropertyChanged("BannerID");
					this.OnBannerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemID", DbType="Int NOT NULL")]
		public int CatalogItemID
		{
			get
			{
				return this._CatalogItemID;
			}
			set
			{
				if ((this._CatalogItemID != value))
				{
					if (this._CatalogItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatalogItemIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemID = value;
					this.SendPropertyChanged("CatalogItemID");
					this.OnCatalogItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="TinyInt NOT NULL")]
		public byte Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogItem_BannersForCatalogItem", Storage="_CatalogItem", ThisKey="CatalogItemID", OtherKey="CatalogItemID", IsForeignKey=true)]
		public CatalogItem CatalogItem
		{
			get
			{
				return this._CatalogItem.Entity;
			}
			set
			{
				CatalogItem previousValue = this._CatalogItem.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItem.Entity = null;
						previousValue.BannersForCatalogItems.Remove(this);
					}
					this._CatalogItem.Entity = value;
					if ((value != null))
					{
						value.BannersForCatalogItems.Add(this);
						this._CatalogItemID = value.CatalogItemID;
					}
					else
					{
						this._CatalogItemID = default(int);
					}
					this.SendPropertyChanged("CatalogItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Banners_BannersForCatalogItem", Storage="_Banners", ThisKey="BannerID", OtherKey="BannerID", IsForeignKey=true)]
		public Banners Banners
		{
			get
			{
				return this._Banners.Entity;
			}
			set
			{
				Banners previousValue = this._Banners.Entity;
				if (((previousValue != value) 
							|| (this._Banners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Banners.Entity = null;
						previousValue.BannersForCatalogItems.Remove(this);
					}
					this._Banners.Entity = value;
					if ((value != null))
					{
						value.BannersForCatalogItems.Add(this);
						this._BannerID = value.BannerID;
					}
					else
					{
						this._BannerID = default(int);
					}
					this.SendPropertyChanged("Banners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Banners")]
	public partial class Banners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BannerID;
		
		private string _Name;
		
		private string _URL;
		
		private System.Nullable<int> _FileID;
		
		private string _Html;
		
		private byte _RenderType;
		
		private EntitySet<BannersForCatalogItem> _BannersForCatalogItems;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerIDChanging(int value);
    partial void OnBannerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnFileIDChanging(System.Nullable<int> value);
    partial void OnFileIDChanged();
    partial void OnHtmlChanging(string value);
    partial void OnHtmlChanged();
    partial void OnRenderTypeChanging(byte value);
    partial void OnRenderTypeChanged();
    #endregion
		
		public Banners()
		{
			this._BannersForCatalogItems = new EntitySet<BannersForCatalogItem>(new Action<BannersForCatalogItem>(this.attach_BannersForCatalogItems), new Action<BannersForCatalogItem>(this.detach_BannersForCatalogItems));
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BannerID
		{
			get
			{
				return this._BannerID;
			}
			set
			{
				if ((this._BannerID != value))
				{
					this.OnBannerIDChanging(value);
					this.SendPropertyChanging();
					this._BannerID = value;
					this.SendPropertyChanged("BannerID");
					this.OnBannerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(256)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="Int")]
		public System.Nullable<int> FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Html", DbType="VarChar(MAX)")]
		public string Html
		{
			get
			{
				return this._Html;
			}
			set
			{
				if ((this._Html != value))
				{
					this.OnHtmlChanging(value);
					this.SendPropertyChanging();
					this._Html = value;
					this.SendPropertyChanged("Html");
					this.OnHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenderType", DbType="TinyInt NOT NULL")]
		public byte RenderType
		{
			get
			{
				return this._RenderType;
			}
			set
			{
				if ((this._RenderType != value))
				{
					this.OnRenderTypeChanging(value);
					this.SendPropertyChanging();
					this._RenderType = value;
					this.SendPropertyChanged("RenderType");
					this.OnRenderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Banners_BannersForCatalogItem", Storage="_BannersForCatalogItems", ThisKey="BannerID", OtherKey="BannerID")]
		public EntitySet<BannersForCatalogItem> BannersForCatalogItems
		{
			get
			{
				return this._BannersForCatalogItems;
			}
			set
			{
				this._BannersForCatalogItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Banners", Storage="_File", ThisKey="FileID", OtherKey="FileID", IsForeignKey=true, DeleteRule="SET NULL")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Banners.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Banners.Add(this);
						this._FileID = value.FileID;
					}
					else
					{
						this._FileID = default(Nullable<int>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BannersForCatalogItems(BannersForCatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.Banners = this;
		}
		
		private void detach_BannersForCatalogItems(BannersForCatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.Banners = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.SeoShortLinks")]
	public partial class SeoShortLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SeoLinksID;
		
		private string _NameLink;
		
		private string _Url;
		
		private System.DateTime _UpdateDate = default(System.DateTime);
		
		private string _Localization;
		
		private EntityRef<Localization> _Localization1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeoLinksIDChanging(int value);
    partial void OnSeoLinksIDChanged();
    partial void OnNameLinkChanging(string value);
    partial void OnNameLinkChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    #endregion
		
		public SeoShortLink()
		{
			this._Localization1 = default(EntityRef<Localization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoLinksID", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SeoLinksID
		{
			get
			{
				return this._SeoLinksID;
			}
			set
			{
				if ((this._SeoLinksID != value))
				{
					this.OnSeoLinksIDChanging(value);
					this.SendPropertyChanging();
					this._SeoLinksID = value;
					this.SendPropertyChanged("SeoLinksID");
					this.OnSeoLinksIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLink", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NameLink
		{
			get
			{
				return this._NameLink;
			}
			set
			{
				if ((this._NameLink != value))
				{
					this.OnNameLinkChanging(value);
					this.SendPropertyChanging();
					this._NameLink = value;
					this.SendPropertyChanged("NameLink");
					this.OnNameLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localization", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					if (this._Localization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_SeoShortLink", Storage="_Localization1", ThisKey="Localization", OtherKey="LocalizationID", IsForeignKey=true)]
		public Localization Localization1
		{
			get
			{
				return this._Localization1.Entity;
			}
			set
			{
				Localization previousValue = this._Localization1.Entity;
				if (((previousValue != value) 
							|| (this._Localization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localization1.Entity = null;
						previousValue.SeoShortLinks.Remove(this);
					}
					this._Localization1.Entity = value;
					if ((value != null))
					{
						value.SeoShortLinks.Add(this);
						this._Localization = value.LocalizationID;
					}
					else
					{
						this._Localization = default(string);
					}
					this.SendPropertyChanged("Localization1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Localization")]
	public partial class Localization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LocalizationID;
		
		private EntitySet<NewsItem> _NewsItems;
		
		private EntitySet<SeoShortLink> _SeoShortLinks;
		
		private EntitySet<TextItem> _TextItems;
		
		private EntitySet<CatalogItemsLoc> _CatalogItemsLocs;
		
		private EntitySet<SeoPartsCatalogItemsLoc> _SeoPartsCatalogItemsLocs;
		
		private EntitySet<FeedbackRecipientsLoc> _FeedbackRecipientsLocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocalizationIDChanging(string value);
    partial void OnLocalizationIDChanged();
    #endregion
		
		public Localization()
		{
			this._NewsItems = new EntitySet<NewsItem>(new Action<NewsItem>(this.attach_NewsItems), new Action<NewsItem>(this.detach_NewsItems));
			this._SeoShortLinks = new EntitySet<SeoShortLink>(new Action<SeoShortLink>(this.attach_SeoShortLinks), new Action<SeoShortLink>(this.detach_SeoShortLinks));
			this._TextItems = new EntitySet<TextItem>(new Action<TextItem>(this.attach_TextItems), new Action<TextItem>(this.detach_TextItems));
			this._CatalogItemsLocs = new EntitySet<CatalogItemsLoc>(new Action<CatalogItemsLoc>(this.attach_CatalogItemsLocs), new Action<CatalogItemsLoc>(this.detach_CatalogItemsLocs));
			this._SeoPartsCatalogItemsLocs = new EntitySet<SeoPartsCatalogItemsLoc>(new Action<SeoPartsCatalogItemsLoc>(this.attach_SeoPartsCatalogItemsLocs), new Action<SeoPartsCatalogItemsLoc>(this.detach_SeoPartsCatalogItemsLocs));
			this._FeedbackRecipientsLocs = new EntitySet<FeedbackRecipientsLoc>(new Action<FeedbackRecipientsLoc>(this.attach_FeedbackRecipientsLocs), new Action<FeedbackRecipientsLoc>(this.detach_FeedbackRecipientsLocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizationID", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LocalizationID
		{
			get
			{
				return this._LocalizationID;
			}
			set
			{
				if ((this._LocalizationID != value))
				{
					this.OnLocalizationIDChanging(value);
					this.SendPropertyChanging();
					this._LocalizationID = value;
					this.SendPropertyChanged("LocalizationID");
					this.OnLocalizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_NewsItem", Storage="_NewsItems", ThisKey="LocalizationID", OtherKey="Localization")]
		public EntitySet<NewsItem> NewsItems
		{
			get
			{
				return this._NewsItems;
			}
			set
			{
				this._NewsItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_SeoShortLink", Storage="_SeoShortLinks", ThisKey="LocalizationID", OtherKey="Localization")]
		public EntitySet<SeoShortLink> SeoShortLinks
		{
			get
			{
				return this._SeoShortLinks;
			}
			set
			{
				this._SeoShortLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_TextItem", Storage="_TextItems", ThisKey="LocalizationID", OtherKey="Localization")]
		public EntitySet<TextItem> TextItems
		{
			get
			{
				return this._TextItems;
			}
			set
			{
				this._TextItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_CatalogItemsLoc", Storage="_CatalogItemsLocs", ThisKey="LocalizationID", OtherKey="Localization")]
		public EntitySet<CatalogItemsLoc> CatalogItemsLocs
		{
			get
			{
				return this._CatalogItemsLocs;
			}
			set
			{
				this._CatalogItemsLocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_SeoPartsCatalogItemsLoc", Storage="_SeoPartsCatalogItemsLocs", ThisKey="LocalizationID", OtherKey="Localization")]
		public EntitySet<SeoPartsCatalogItemsLoc> SeoPartsCatalogItemsLocs
		{
			get
			{
				return this._SeoPartsCatalogItemsLocs;
			}
			set
			{
				this._SeoPartsCatalogItemsLocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_FeedbackRecipientsLoc", Storage="_FeedbackRecipientsLocs", ThisKey="LocalizationID", OtherKey="Localization")]
		public EntitySet<FeedbackRecipientsLoc> FeedbackRecipientsLocs
		{
			get
			{
				return this._FeedbackRecipientsLocs;
			}
			set
			{
				this._FeedbackRecipientsLocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NewsItems(NewsItem entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = this;
		}
		
		private void detach_NewsItems(NewsItem entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = null;
		}
		
		private void attach_SeoShortLinks(SeoShortLink entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = this;
		}
		
		private void detach_SeoShortLinks(SeoShortLink entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = null;
		}
		
		private void attach_TextItems(TextItem entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = this;
		}
		
		private void detach_TextItems(TextItem entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = null;
		}
		
		private void attach_CatalogItemsLocs(CatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = this;
		}
		
		private void detach_CatalogItemsLocs(CatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = null;
		}
		
		private void attach_SeoPartsCatalogItemsLocs(SeoPartsCatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = this;
		}
		
		private void detach_SeoPartsCatalogItemsLocs(SeoPartsCatalogItemsLoc entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = null;
		}
		
		private void attach_FeedbackRecipientsLocs(FeedbackRecipientsLoc entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = this;
		}
		
		private void detach_FeedbackRecipientsLocs(FeedbackRecipientsLoc entity)
		{
			this.SendPropertyChanging();
			entity.Localization1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.TextItems")]
	public partial class TextItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TextItemID;
		
		private string _TextItemHeader;
		
		private string _TextItemBody;
		
		private bool _TextItemFixed;
		
		private string _Localization;
		
		private EntityRef<Localization> _Localization1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTextItemIDChanging(string value);
    partial void OnTextItemIDChanged();
    partial void OnTextItemHeaderChanging(string value);
    partial void OnTextItemHeaderChanged();
    partial void OnTextItemBodyChanging(string value);
    partial void OnTextItemBodyChanged();
    partial void OnTextItemFixedChanging(bool value);
    partial void OnTextItemFixedChanged();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    #endregion
		
		public TextItem()
		{
			this._Localization1 = default(EntityRef<Localization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TextItemID
		{
			get
			{
				return this._TextItemID;
			}
			set
			{
				if ((this._TextItemID != value))
				{
					this.OnTextItemIDChanging(value);
					this.SendPropertyChanging();
					this._TextItemID = value;
					this.SendPropertyChanged("TextItemID");
					this.OnTextItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextItemHeader", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string TextItemHeader
		{
			get
			{
				return this._TextItemHeader;
			}
			set
			{
				if ((this._TextItemHeader != value))
				{
					this.OnTextItemHeaderChanging(value);
					this.SendPropertyChanging();
					this._TextItemHeader = value;
					this.SendPropertyChanged("TextItemHeader");
					this.OnTextItemHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextItemBody", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TextItemBody
		{
			get
			{
				return this._TextItemBody;
			}
			set
			{
				if ((this._TextItemBody != value))
				{
					this.OnTextItemBodyChanging(value);
					this.SendPropertyChanging();
					this._TextItemBody = value;
					this.SendPropertyChanged("TextItemBody");
					this.OnTextItemBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextItemFixed", DbType="Bit NOT NULL")]
		public bool TextItemFixed
		{
			get
			{
				return this._TextItemFixed;
			}
			set
			{
				if ((this._TextItemFixed != value))
				{
					this.OnTextItemFixedChanging(value);
					this.SendPropertyChanging();
					this._TextItemFixed = value;
					this.SendPropertyChanged("TextItemFixed");
					this.OnTextItemFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localization", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					if (this._Localization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_TextItem", Storage="_Localization1", ThisKey="Localization", OtherKey="LocalizationID", IsForeignKey=true)]
		public Localization Localization1
		{
			get
			{
				return this._Localization1.Entity;
			}
			set
			{
				Localization previousValue = this._Localization1.Entity;
				if (((previousValue != value) 
							|| (this._Localization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localization1.Entity = null;
						previousValue.TextItems.Remove(this);
					}
					this._Localization1.Entity = value;
					if ((value != null))
					{
						value.TextItems.Add(this);
						this._Localization = value.LocalizationID;
					}
					else
					{
						this._Localization = default(string);
					}
					this.SendPropertyChanged("Localization1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Tires")]
	public partial class Tires : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TireNumber;
		
		private System.Nullable<double> _Profile;
		
		private System.Nullable<double> _Height;
		
		private string _Diameter;
		
		private string _TireIndex;
		
		private string _ModelName;
		
		private string _Manufacturer;
		
		private string _Season;
		
		private System.Nullable<int> _ImageUrl;
		
		private System.Nullable<int> _ManufacturerId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTireNumberChanging(string value);
    partial void OnTireNumberChanged();
    partial void OnProfileChanging(System.Nullable<double> value);
    partial void OnProfileChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnRadiusChanging(string value);
    partial void OnRadiusChanged();
    partial void OnTireIndexChanging(string value);
    partial void OnTireIndexChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnSeasonChanging(string value);
    partial void OnSeasonChanged();
    partial void OnImageUrlChanging(System.Nullable<int> value);
    partial void OnImageUrlChanged();
    partial void OnManufacturerIdChanging(System.Nullable<int> value);
    partial void OnManufacturerIdChanged();
    #endregion
		
		public Tires()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TireNumber", AutoSync=AutoSync.OnUpdate, DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TireNumber
		{
			get
			{
				return this._TireNumber;
			}
			set
			{
				if ((this._TireNumber != value))
				{
					this.OnTireNumberChanging(value);
					this.SendPropertyChanging();
					this._TireNumber = value;
					this.SendPropertyChanged("TireNumber");
					this.OnTireNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile", DbType="numeric")]
		public System.Nullable<double> Profile
		{
			get
			{
				return this._Profile;
			}
			set
			{
				if ((this._Profile != value))
				{
					this.OnProfileChanging(value);
					this.SendPropertyChanging();
					this._Profile = value;
					this.SendPropertyChanged("Profile");
					this.OnProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="numeric")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diameter", DbType="NVarChar(50)", CanBeNull=false)]
		public string Radius
		{
			get
			{
				return this._Diameter;
			}
			set
			{
				if ((this._Diameter != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Diameter = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TireIndex", DbType="NVarChar(50)", CanBeNull=false)]
		public string TireIndex
		{
			get
			{
				return this._TireIndex;
			}
			set
			{
				if ((this._TireIndex != value))
				{
					this.OnTireIndexChanging(value);
					this.SendPropertyChanging();
					this._TireIndex = value;
					this.SendPropertyChanged("TireIndex");
					this.OnTireIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(50)", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Season", DbType="NVarChar(50)", CanBeNull=false)]
		public string Season
		{
			get
			{
				return this._Season;
			}
			set
			{
				if ((this._Season != value))
				{
					this.OnSeasonChanging(value);
					this.SendPropertyChanging();
					this._Season = value;
					this.SendPropertyChanged("Season");
					this.OnSeasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="Int")]
		public System.Nullable<int> ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerId", DbType="int")]
		public System.Nullable<int> ManufacturerId
		{
			get
			{
				return this._ManufacturerId;
			}
			set
			{
				if ((this._ManufacturerId != value))
				{
					this.OnManufacturerIdChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerId = value;
					this.SendPropertyChanged("ManufacturerId");
					this.OnManufacturerIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.TireBrands")]
	public partial class TireBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _ImageId;
		
		private bool _IsVisible;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public TireBrand()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_TireBrand", Storage="_File", ThisKey="ImageId", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.TireBrands.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.TireBrands.Add(this);
						this._ImageId = value.FileID;
					}
					else
					{
						this._ImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Battery")]
	public partial class Battery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartNumber;
		
		private string _Manufacturer;
		
		private System.Nullable<int> _ManufaturerId;
		
		private string _ModelName;
		
		private System.Nullable<decimal> _Capacity;
		
		private string _polarity;
		
		private string _cleat;
		
		private string _Size;
		
		private System.Nullable<int> _ImageUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnManufaturerIdChanging(System.Nullable<int> value);
    partial void OnManufaturerIdChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnCapacityChanging(System.Nullable<decimal> value);
    partial void OnCapacityChanged();
    partial void OnpolarityChanging(string value);
    partial void OnpolarityChanged();
    partial void OncleatChanging(string value);
    partial void OncleatChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnImageUrlChanging(System.Nullable<int> value);
    partial void OnImageUrlChanged();
    #endregion
		
		public Battery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufaturerId", DbType="Int")]
		public System.Nullable<int> ManufaturerId
		{
			get
			{
				return this._ManufaturerId;
			}
			set
			{
				if ((this._ManufaturerId != value))
				{
					this.OnManufaturerIdChanging(value);
					this.SendPropertyChanging();
					this._ManufaturerId = value;
					this.SendPropertyChanged("ManufaturerId");
					this.OnManufaturerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(50)")]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_polarity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string polarity
		{
			get
			{
				return this._polarity;
			}
			set
			{
				if ((this._polarity != value))
				{
					this.OnpolarityChanging(value);
					this.SendPropertyChanging();
					this._polarity = value;
					this.SendPropertyChanged("polarity");
					this.OnpolarityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cleat", DbType="NVarChar(50)")]
		public string cleat
		{
			get
			{
				return this._cleat;
			}
			set
			{
				if ((this._cleat != value))
				{
					this.OncleatChanging(value);
					this.SendPropertyChanging();
					this._cleat = value;
					this.SendPropertyChanged("cleat");
					this.OncleatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="Int")]
		public System.Nullable<int> ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.BatteryBrands")]
	public partial class BatteryBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _ImageId;
		
		private bool _IsVisible;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public BatteryBrand()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_BatteryBrand", Storage="_File", ThisKey="ImageId", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				if ((this._File.Entity != value))
				{
					this.SendPropertyChanging();
					this._File.Entity = value;
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.DiscBrands")]
	public partial class DiscBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _ImageId;
		
		private bool _IsVisible;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public DiscBrand()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_DiscBrand", Storage="_File", ThisKey="ImageId", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.DiscBrands.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.DiscBrands.Add(this);
						this._ImageId = value.FileID;
					}
					else
					{
						this._ImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Catalogs")]
	public partial class Catalog
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _ImageUrl;
		
		private string _ref;
		
		public Catalog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="Int")]
		public System.Nullable<int> ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this._ImageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref", Storage="_ref", DbType="NVarChar(50)")]
		public string @ref
		{
			get
			{
				return this._ref;
			}
			set
			{
				if ((this._ref != value))
				{
					this._ref = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.OurCatalogs")]
	public partial class OurCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _ImageUrl;
		
		private string _ref;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<bool> _Visible;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageUrlChanging(System.Nullable<int> value);
    partial void OnImageUrlChanged();
    partial void OnrefChanging(string value);
    partial void OnrefChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnVisibleChanging(System.Nullable<bool> value);
    partial void OnVisibleChanged();
    #endregion
		
		public OurCatalog()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="Int")]
		public System.Nullable<int> ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref", Storage="_ref", DbType="NVarChar(50)")]
		public string @ref
		{
			get
			{
				return this._ref;
			}
			set
			{
				if ((this._ref != value))
				{
					this.OnrefChanging(value);
					this.SendPropertyChanging();
					this._ref = value;
					this.SendPropertyChanged("@ref");
					this.OnrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_OurCatalog", Storage="_File", ThisKey="ImageUrl", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.OurCatalogs.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.OurCatalogs.Add(this);
						this._ImageUrl = value.FileID;
					}
					else
					{
						this._ImageUrl = default(Nullable<int>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.Disc")]
	public partial class Disc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartNumber;
		
		private string _Manufacturer;
		
		private System.Nullable<int> _ManufaturerId;
		
		private string _ModelName;
		
		private System.Nullable<decimal> _Gab;
		
		private System.Nullable<decimal> _Diameter;
		
		private System.Nullable<decimal> _Width;
		
		private System.Nullable<int> _ImageUrl;
		
		private System.Nullable<decimal> _Dia;
		
		private string _PCD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnManufaturerIdChanging(System.Nullable<int> value);
    partial void OnManufaturerIdChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnGabChanging(System.Nullable<decimal> value);
    partial void OnGabChanged();
    partial void OnDiameterChanging(System.Nullable<decimal> value);
    partial void OnDiameterChanged();
    partial void OnWidthChanging(System.Nullable<decimal> value);
    partial void OnWidthChanged();
    partial void OnImageUrlChanging(System.Nullable<int> value);
    partial void OnImageUrlChanged();
    partial void OnDiaChanging(System.Nullable<decimal> value);
    partial void OnDiaChanged();
    partial void OnPCDChanging(string value);
    partial void OnPCDChanged();
    #endregion
		
		public Disc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufaturerId", DbType="Int")]
		public System.Nullable<int> ManufaturerId
		{
			get
			{
				return this._ManufaturerId;
			}
			set
			{
				if ((this._ManufaturerId != value))
				{
					this.OnManufaturerIdChanging(value);
					this.SendPropertyChanging();
					this._ManufaturerId = value;
					this.SendPropertyChanged("ManufaturerId");
					this.OnManufaturerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(50)")]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gab", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Gab
		{
			get
			{
				return this._Gab;
			}
			set
			{
				if ((this._Gab != value))
				{
					this.OnGabChanging(value);
					this.SendPropertyChanging();
					this._Gab = value;
					this.SendPropertyChanged("Gab");
					this.OnGabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diameter", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Diameter
		{
			get
			{
				return this._Diameter;
			}
			set
			{
				if ((this._Diameter != value))
				{
					this.OnDiameterChanging(value);
					this.SendPropertyChanging();
					this._Diameter = value;
					this.SendPropertyChanged("Diameter");
					this.OnDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="Int")]
		public System.Nullable<int> ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dia", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> Dia
		{
			get
			{
				return this._Dia;
			}
			set
			{
				if ((this._Dia != value))
				{
					this.OnDiaChanging(value);
					this.SendPropertyChanging();
					this._Dia = value;
					this.SendPropertyChanged("Dia");
					this.OnDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCD", DbType="NVarChar(50)")]
		public string PCD
		{
			get
			{
				return this._PCD;
			}
			set
			{
				if ((this._PCD != value))
				{
					this.OnPCDChanging(value);
					this.SendPropertyChanging();
					this._PCD = value;
					this.SendPropertyChanged("PCD");
					this.OnPCDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.OrderLineStatuses")]
	public partial class OrderLineStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _OrderLineStatusID;
		
		private string _NameRMS;
		
		private string _NameHansa;
		
		private bool _IsFinal;
		
		private bool _RequiresClientReaction;
		
		private bool _ExcludeFromTotalSum;
		
		private bool _SendToAcctg;
		
		private string _Manager;
		
		private string _Client;
		
		private bool _ClientShow;
		
		private int _ClientShowOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderLineStatusIDChanging(byte value);
    partial void OnOrderLineStatusIDChanged();
    partial void OnNameRMSChanging(string value);
    partial void OnNameRMSChanged();
    partial void OnNameHansaChanging(string value);
    partial void OnNameHansaChanged();
    partial void OnIsFinalChanging(bool value);
    partial void OnIsFinalChanged();
    partial void OnRequiresClientReactionChanging(bool value);
    partial void OnRequiresClientReactionChanged();
    partial void OnExcludeFromTotalSumChanging(bool value);
    partial void OnExcludeFromTotalSumChanged();
    partial void OnSendToAcctgChanging(bool value);
    partial void OnSendToAcctgChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnClientChanging(string value);
    partial void OnClientChanged();
    partial void OnClientShowChanging(bool value);
    partial void OnClientShowChanged();
    partial void OnClientShowOrderChanging(int value);
    partial void OnClientShowOrderChanged();
    #endregion
		
		public OrderLineStatuses()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderLineStatusID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte OrderLineStatusID
		{
			get
			{
				return this._OrderLineStatusID;
			}
			set
			{
				if ((this._OrderLineStatusID != value))
				{
					this.OnOrderLineStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OrderLineStatusID = value;
					this.SendPropertyChanged("OrderLineStatusID");
					this.OnOrderLineStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRMS", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameRMS
		{
			get
			{
				return this._NameRMS;
			}
			set
			{
				if ((this._NameRMS != value))
				{
					this.OnNameRMSChanging(value);
					this.SendPropertyChanging();
					this._NameRMS = value;
					this.SendPropertyChanged("NameRMS");
					this.OnNameRMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameHansa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameHansa
		{
			get
			{
				return this._NameHansa;
			}
			set
			{
				if ((this._NameHansa != value))
				{
					this.OnNameHansaChanging(value);
					this.SendPropertyChanging();
					this._NameHansa = value;
					this.SendPropertyChanged("NameHansa");
					this.OnNameHansaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinal", DbType="Bit NOT NULL")]
		public bool IsFinal
		{
			get
			{
				return this._IsFinal;
			}
			set
			{
				if ((this._IsFinal != value))
				{
					this.OnIsFinalChanging(value);
					this.SendPropertyChanging();
					this._IsFinal = value;
					this.SendPropertyChanged("IsFinal");
					this.OnIsFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresClientReaction", DbType="Bit NOT NULL")]
		public bool RequiresClientReaction
		{
			get
			{
				return this._RequiresClientReaction;
			}
			set
			{
				if ((this._RequiresClientReaction != value))
				{
					this.OnRequiresClientReactionChanging(value);
					this.SendPropertyChanging();
					this._RequiresClientReaction = value;
					this.SendPropertyChanged("RequiresClientReaction");
					this.OnRequiresClientReactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeFromTotalSum", DbType="Bit NOT NULL")]
		public bool ExcludeFromTotalSum
		{
			get
			{
				return this._ExcludeFromTotalSum;
			}
			set
			{
				if ((this._ExcludeFromTotalSum != value))
				{
					this.OnExcludeFromTotalSumChanging(value);
					this.SendPropertyChanging();
					this._ExcludeFromTotalSum = value;
					this.SendPropertyChanged("ExcludeFromTotalSum");
					this.OnExcludeFromTotalSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToAcctg", DbType="Bit NOT NULL")]
		public bool SendToAcctg
		{
			get
			{
				return this._SendToAcctg;
			}
			set
			{
				if ((this._SendToAcctg != value))
				{
					this.OnSendToAcctgChanging(value);
					this.SendPropertyChanging();
					this._SendToAcctg = value;
					this.SendPropertyChanged("SendToAcctg");
					this.OnSendToAcctgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this.OnClientChanging(value);
					this.SendPropertyChanging();
					this._Client = value;
					this.SendPropertyChanged("Client");
					this.OnClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientShow", DbType="Bit NOT NULL")]
		public bool ClientShow
		{
			get
			{
				return this._ClientShow;
			}
			set
			{
				if ((this._ClientShow != value))
				{
					this.OnClientShowChanging(value);
					this.SendPropertyChanging();
					this._ClientShow = value;
					this.SendPropertyChanged("ClientShow");
					this.OnClientShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientShowOrder", DbType="Int NOT NULL")]
		public int ClientShowOrder
		{
			get
			{
				return this._ClientShowOrder;
			}
			set
			{
				if ((this._ClientShowOrder != value))
				{
					this.OnClientShowOrderChanging(value);
					this.SendPropertyChanging();
					this._ClientShowOrder = value;
					this.SendPropertyChanged("ClientShowOrder");
					this.OnClientShowOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.CatalogItemsLocs")]
	public partial class CatalogItemsLoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogItemID;
		
		private string _Localization;
		
		private string _CatalogItemName;
		
		private string _CatalogItemImageUrl;
		
		private string _PageTitle;
		
		private string _PageKeywords;
		
		private string _PageDescription;
		
		private string _PageFooter;
		
		private string _PageBody;
		
		private EntityRef<CatalogItem> _CatalogItem;
		
		private EntityRef<Localization> _Localization1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogItemIDChanging(int value);
    partial void OnCatalogItemIDChanged();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    partial void OnCatalogItemNameChanging(string value);
    partial void OnCatalogItemNameChanged();
    partial void OnCatalogItemImageUrlChanging(string value);
    partial void OnCatalogItemImageUrlChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPageKeywordsChanging(string value);
    partial void OnPageKeywordsChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    partial void OnPageFooterChanging(string value);
    partial void OnPageFooterChanged();
    partial void OnPageBodyChanging(string value);
    partial void OnPageBodyChanged();
    #endregion
		
		public CatalogItemsLoc()
		{
			this._CatalogItem = default(EntityRef<CatalogItem>);
			this._Localization1 = default(EntityRef<Localization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CatalogItemID
		{
			get
			{
				return this._CatalogItemID;
			}
			set
			{
				if ((this._CatalogItemID != value))
				{
					if (this._CatalogItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatalogItemIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemID = value;
					this.SendPropertyChanged("CatalogItemID");
					this.OnCatalogItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localization", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					if (this._Localization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CatalogItemName
		{
			get
			{
				return this._CatalogItemName;
			}
			set
			{
				if ((this._CatalogItemName != value))
				{
					this.OnCatalogItemNameChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemName = value;
					this.SendPropertyChanged("CatalogItemName");
					this.OnCatalogItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogItemImageUrl", DbType="VarChar(50)")]
		public string CatalogItemImageUrl
		{
			get
			{
				return this._CatalogItemImageUrl;
			}
			set
			{
				if ((this._CatalogItemImageUrl != value))
				{
					this.OnCatalogItemImageUrlChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemImageUrl = value;
					this.SendPropertyChanged("CatalogItemImageUrl");
					this.OnCatalogItemImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="VarChar(500)")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKeywords", DbType="VarChar(MAX)")]
		public string PageKeywords
		{
			get
			{
				return this._PageKeywords;
			}
			set
			{
				if ((this._PageKeywords != value))
				{
					this.OnPageKeywordsChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords = value;
					this.SendPropertyChanged("PageKeywords");
					this.OnPageKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDescription", DbType="VarChar(MAX)")]
		public string PageDescription
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFooter", DbType="VarChar(MAX)")]
		public string PageFooter
		{
			get
			{
				return this._PageFooter;
			}
			set
			{
				if ((this._PageFooter != value))
				{
					this.OnPageFooterChanging(value);
					this.SendPropertyChanging();
					this._PageFooter = value;
					this.SendPropertyChanged("PageFooter");
					this.OnPageFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageBody", DbType="VarChar(MAX)")]
		public string PageBody
		{
			get
			{
				return this._PageBody;
			}
			set
			{
				if ((this._PageBody != value))
				{
					this.OnPageBodyChanging(value);
					this.SendPropertyChanging();
					this._PageBody = value;
					this.SendPropertyChanged("PageBody");
					this.OnPageBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogItem_CatalogItemsLoc", Storage="_CatalogItem", ThisKey="CatalogItemID", OtherKey="CatalogItemID", IsForeignKey=true)]
		public CatalogItem CatalogItem
		{
			get
			{
				return this._CatalogItem.Entity;
			}
			set
			{
				CatalogItem previousValue = this._CatalogItem.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItem.Entity = null;
						previousValue.CatalogItemsLocs.Remove(this);
					}
					this._CatalogItem.Entity = value;
					if ((value != null))
					{
						value.CatalogItemsLocs.Add(this);
						this._CatalogItemID = value.CatalogItemID;
					}
					else
					{
						this._CatalogItemID = default(int);
					}
					this.SendPropertyChanged("CatalogItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_CatalogItemsLoc", Storage="_Localization1", ThisKey="Localization", OtherKey="LocalizationID", IsForeignKey=true)]
		public Localization Localization1
		{
			get
			{
				return this._Localization1.Entity;
			}
			set
			{
				Localization previousValue = this._Localization1.Entity;
				if (((previousValue != value) 
							|| (this._Localization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localization1.Entity = null;
						previousValue.CatalogItemsLocs.Remove(this);
					}
					this._Localization1.Entity = value;
					if ((value != null))
					{
						value.CatalogItemsLocs.Add(this);
						this._Localization = value.LocalizationID;
					}
					else
					{
						this._Localization = default(string);
					}
					this.SendPropertyChanged("Localization1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.SeoPartsCatalogItemsLocs")]
	public partial class SeoPartsCatalogItemsLoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Localization;
		
		private string _Name;
		
		private string _Body;
		
		private string _PageTitle;
		
		private string _PageKeywords;
		
		private string _PageDescription;
		
		private string _PageFooter;
		
		private EntityRef<SeoPartsCatalogItem> _SeoPartsCatalogItem;
		
		private EntityRef<Localization> _Localization1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPageKeywordsChanging(string value);
    partial void OnPageKeywordsChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    partial void OnPageFooterChanging(string value);
    partial void OnPageFooterChanged();
    #endregion
		
		public SeoPartsCatalogItemsLoc()
		{
			this._SeoPartsCatalogItem = default(EntityRef<SeoPartsCatalogItem>);
			this._Localization1 = default(EntityRef<Localization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._SeoPartsCatalogItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localization", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					if (this._Localization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="VarChar(500)")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKeywords", DbType="VarChar(MAX)")]
		public string PageKeywords
		{
			get
			{
				return this._PageKeywords;
			}
			set
			{
				if ((this._PageKeywords != value))
				{
					this.OnPageKeywordsChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords = value;
					this.SendPropertyChanged("PageKeywords");
					this.OnPageKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDescription", DbType="VarChar(MAX)")]
		public string PageDescription
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFooter", DbType="VarChar(MAX)")]
		public string PageFooter
		{
			get
			{
				return this._PageFooter;
			}
			set
			{
				if ((this._PageFooter != value))
				{
					this.OnPageFooterChanging(value);
					this.SendPropertyChanging();
					this._PageFooter = value;
					this.SendPropertyChanged("PageFooter");
					this.OnPageFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeoPartsCatalogItem_SeoPartsCatalogItemsLoc", Storage="_SeoPartsCatalogItem", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public SeoPartsCatalogItem SeoPartsCatalogItem
		{
			get
			{
				return this._SeoPartsCatalogItem.Entity;
			}
			set
			{
				SeoPartsCatalogItem previousValue = this._SeoPartsCatalogItem.Entity;
				if (((previousValue != value) 
							|| (this._SeoPartsCatalogItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SeoPartsCatalogItem.Entity = null;
						previousValue.SeoPartsCatalogItemsLocs.Remove(this);
					}
					this._SeoPartsCatalogItem.Entity = value;
					if ((value != null))
					{
						value.SeoPartsCatalogItemsLocs.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("SeoPartsCatalogItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_SeoPartsCatalogItemsLoc", Storage="_Localization1", ThisKey="Localization", OtherKey="LocalizationID", IsForeignKey=true)]
		public Localization Localization1
		{
			get
			{
				return this._Localization1.Entity;
			}
			set
			{
				Localization previousValue = this._Localization1.Entity;
				if (((previousValue != value) 
							|| (this._Localization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localization1.Entity = null;
						previousValue.SeoPartsCatalogItemsLocs.Remove(this);
					}
					this._Localization1.Entity = value;
					if ((value != null))
					{
						value.SeoPartsCatalogItemsLocs.Add(this);
						this._Localization = value.LocalizationID;
					}
					else
					{
						this._Localization = default(string);
					}
					this.SendPropertyChanged("Localization1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cms.FeedbackRecipientsLocs")]
	public partial class FeedbackRecipientsLoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecipientID;
		
		private string _Localization;
		
		private string _RecipientName;
		
		private EntityRef<FeedbackRecipient> _FeedbackRecipient;
		
		private EntityRef<Localization> _Localization1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecipientIDChanging(int value);
    partial void OnRecipientIDChanged();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    partial void OnRecipientNameChanging(string value);
    partial void OnRecipientNameChanged();
    #endregion
		
		public FeedbackRecipientsLoc()
		{
			this._FeedbackRecipient = default(EntityRef<FeedbackRecipient>);
			this._Localization1 = default(EntityRef<Localization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RecipientID
		{
			get
			{
				return this._RecipientID;
			}
			set
			{
				if ((this._RecipientID != value))
				{
					if (this._FeedbackRecipient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipientIDChanging(value);
					this.SendPropertyChanging();
					this._RecipientID = value;
					this.SendPropertyChanged("RecipientID");
					this.OnRecipientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localization", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					if (this._Localization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string RecipientName
		{
			get
			{
				return this._RecipientName;
			}
			set
			{
				if ((this._RecipientName != value))
				{
					this.OnRecipientNameChanging(value);
					this.SendPropertyChanging();
					this._RecipientName = value;
					this.SendPropertyChanged("RecipientName");
					this.OnRecipientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeedbackRecipient_FeedbackRecipientsLoc", Storage="_FeedbackRecipient", ThisKey="RecipientID", OtherKey="RecipientID", IsForeignKey=true)]
		public FeedbackRecipient FeedbackRecipient
		{
			get
			{
				return this._FeedbackRecipient.Entity;
			}
			set
			{
				FeedbackRecipient previousValue = this._FeedbackRecipient.Entity;
				if (((previousValue != value) 
							|| (this._FeedbackRecipient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeedbackRecipient.Entity = null;
						previousValue.FeedbackRecipientsLocs.Remove(this);
					}
					this._FeedbackRecipient.Entity = value;
					if ((value != null))
					{
						value.FeedbackRecipientsLocs.Add(this);
						this._RecipientID = value.RecipientID;
					}
					else
					{
						this._RecipientID = default(int);
					}
					this.SendPropertyChanged("FeedbackRecipient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localization_FeedbackRecipientsLoc", Storage="_Localization1", ThisKey="Localization", OtherKey="LocalizationID", IsForeignKey=true)]
		public Localization Localization1
		{
			get
			{
				return this._Localization1.Entity;
			}
			set
			{
				Localization previousValue = this._Localization1.Entity;
				if (((previousValue != value) 
							|| (this._Localization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localization1.Entity = null;
						previousValue.FeedbackRecipientsLocs.Remove(this);
					}
					this._Localization1.Entity = value;
					if ((value != null))
					{
						value.FeedbackRecipientsLocs.Add(this);
						this._Localization = value.LocalizationID;
					}
					else
					{
						this._Localization = default(string);
					}
					this.SendPropertyChanged("Localization1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spSelFilesFromRmsResult
	{
		
		private int _FileID;
		
		private int _FolderID;
		
		private string _FileName;
		
		private System.Data.Linq.Binary _FileBody;
		
		private string _FileMimeType;
		
		private int _FileSize;
		
		private System.DateTime _FileCreationDate;
		
		private System.DateTime _FileModificationDate;
		
		private string _FileNote;
		
		private bool _IsImage;
		
		private System.Nullable<int> _ImageWidth;
		
		private System.Nullable<int> _ImageHeight;
		
		private System.Data.Linq.Binary _Timestamp;
		
		public spSelFilesFromRmsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="Int NOT NULL")]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this._FileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int NOT NULL")]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					this._FolderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileBody", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary FileBody
		{
			get
			{
				return this._FileBody;
			}
			set
			{
				if ((this._FileBody != value))
				{
					this._FileBody = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileMimeType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileMimeType
		{
			get
			{
				return this._FileMimeType;
			}
			set
			{
				if ((this._FileMimeType != value))
				{
					this._FileMimeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="Int NOT NULL")]
		public int FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this._FileSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime FileCreationDate
		{
			get
			{
				return this._FileCreationDate;
			}
			set
			{
				if ((this._FileCreationDate != value))
				{
					this._FileCreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileModificationDate", DbType="DateTime NOT NULL")]
		public System.DateTime FileModificationDate
		{
			get
			{
				return this._FileModificationDate;
			}
			set
			{
				if ((this._FileModificationDate != value))
				{
					this._FileModificationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNote", DbType="VarChar(500)")]
		public string FileNote
		{
			get
			{
				return this._FileNote;
			}
			set
			{
				if ((this._FileNote != value))
				{
					this._FileNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImage", DbType="Bit NOT NULL")]
		public bool IsImage
		{
			get
			{
				return this._IsImage;
			}
			set
			{
				if ((this._IsImage != value))
				{
					this._IsImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageWidth", DbType="Int")]
		public System.Nullable<int> ImageWidth
		{
			get
			{
				return this._ImageWidth;
			}
			set
			{
				if ((this._ImageWidth != value))
				{
					this._ImageWidth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageHeight", DbType="Int")]
		public System.Nullable<int> ImageHeight
		{
			get
			{
				return this._ImageHeight;
			}
			set
			{
				if ((this._ImageHeight != value))
				{
					this._ImageHeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="rowversion NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this._Timestamp = value;
				}
			}
		}
	}
	
	public partial class spSelCatalogsFromRmsResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _ImageUrl;
		
		private string _ref;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<bool> _Visible;
		
		public spSelCatalogsFromRmsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="Int")]
		public System.Nullable<int> ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this._ImageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref", Storage="_ref", DbType="NVarChar(50)")]
		public string @ref
		{
			get
			{
				return this._ref;
			}
			set
			{
				if ((this._ref != value))
				{
					this._ref = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this._Visible = value;
				}
			}
		}
	}
	
	public partial class spSelFranchesFromRmsResult
	{
		
		private int _Franch_ID;
		
		private System.Nullable<int> _RegionID;
		
		private string _Name;
		
		private string _Url;
		
		private string _InternalFranchName;
		
		private string _ContactInfo;
		
		private string _Phone;
		
		private string _Address;
		
		private string _SiteName;
		
		private string _ServerName;
		
		private string _DbName;
		
		private string _RegionCode;
		
		private string _AdditionalPeriod;
		
		private string _LogName;
		
		private string _ImgTel;
		
		private string _lnkHeadUrl;
		
		private bool _isLite;
		
		private int _PriceSearchCommandTimeOut;
		
		private int _ClientGroup;
		
		private string _License;
		
		private System.Nullable<System.DateTime> _Issued;
		
		public spSelFranchesFromRmsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Franch_ID", DbType="Int NOT NULL")]
		public int Franch_ID
		{
			get
			{
				return this._Franch_ID;
			}
			set
			{
				if ((this._Franch_ID != value))
				{
					this._Franch_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this._RegionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(100)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalFranchName", DbType="NVarChar(100)")]
		public string InternalFranchName
		{
			get
			{
				return this._InternalFranchName;
			}
			set
			{
				if ((this._InternalFranchName != value))
				{
					this._InternalFranchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactInfo", DbType="NVarChar(500)")]
		public string ContactInfo
		{
			get
			{
				return this._ContactInfo;
			}
			set
			{
				if ((this._ContactInfo != value))
				{
					this._ContactInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="NVarChar(50)")]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this._SiteName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(255)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this._ServerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbName", DbType="NVarChar(255)")]
		public string DbName
		{
			get
			{
				return this._DbName;
			}
			set
			{
				if ((this._DbName != value))
				{
					this._DbName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this._RegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalPeriod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdditionalPeriod
		{
			get
			{
				return this._AdditionalPeriod;
			}
			set
			{
				if ((this._AdditionalPeriod != value))
				{
					this._AdditionalPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogName", DbType="NVarChar(50)")]
		public string LogName
		{
			get
			{
				return this._LogName;
			}
			set
			{
				if ((this._LogName != value))
				{
					this._LogName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgTel", DbType="NVarChar(100)")]
		public string ImgTel
		{
			get
			{
				return this._ImgTel;
			}
			set
			{
				if ((this._ImgTel != value))
				{
					this._ImgTel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lnkHeadUrl", DbType="NVarChar(100)")]
		public string lnkHeadUrl
		{
			get
			{
				return this._lnkHeadUrl;
			}
			set
			{
				if ((this._lnkHeadUrl != value))
				{
					this._lnkHeadUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLite", DbType="Bit NOT NULL")]
		public bool isLite
		{
			get
			{
				return this._isLite;
			}
			set
			{
				if ((this._isLite != value))
				{
					this._isLite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSearchCommandTimeOut", DbType="Int NOT NULL")]
		public int PriceSearchCommandTimeOut
		{
			get
			{
				return this._PriceSearchCommandTimeOut;
			}
			set
			{
				if ((this._PriceSearchCommandTimeOut != value))
				{
					this._PriceSearchCommandTimeOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGroup", DbType="Int NOT NULL")]
		public int ClientGroup
		{
			get
			{
				return this._ClientGroup;
			}
			set
			{
				if ((this._ClientGroup != value))
				{
					this._ClientGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_License", DbType="NVarChar(50)")]
		public string License
		{
			get
			{
				return this._License;
			}
			set
			{
				if ((this._License != value))
				{
					this._License = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issued", DbType="DateTime")]
		public System.Nullable<System.DateTime> Issued
		{
			get
			{
				return this._Issued;
			}
			set
			{
				if ((this._Issued != value))
				{
					this._Issued = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
