#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RmsAuto.TechDoc.Entities.TecdocBase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ex_tecdocs")]
	public partial class TecdocBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertGenericArticle(GenericArticle instance);
    partial void UpdateGenericArticle(GenericArticle instance);
    partial void DeleteGenericArticle(GenericArticle instance);
    partial void InsertArticleLink(ArticleLink instance);
    partial void UpdateArticleLink(ArticleLink instance);
    partial void DeleteArticleLink(ArticleLink instance);
    partial void InsertSearchTreeNode(SearchTreeNode instance);
    partial void UpdateSearchTreeNode(SearchTreeNode instance);
    partial void DeleteSearchTreeNode(SearchTreeNode instance);
    partial void InsertStrFamilyTree(StrFamilyTree instance);
    partial void UpdateStrFamilyTree(StrFamilyTree instance);
    partial void DeleteStrFamilyTree(StrFamilyTree instance);
    partial void InsertGenericArticleToStrLink(GenericArticleToStrLink instance);
    partial void UpdateGenericArticleToStrLink(GenericArticleToStrLink instance);
    partial void DeleteGenericArticleToStrLink(GenericArticleToStrLink instance);
    partial void InsertCarType(CarType instance);
    partial void UpdateCarType(CarType instance);
    partial void DeleteCarType(CarType instance);
    partial void InsertArticleLinkToCarTypeLink(ArticleLinkToCarTypeLink instance);
    partial void UpdateArticleLinkToCarTypeLink(ArticleLinkToCarTypeLink instance);
    partial void DeleteArticleLinkToCarTypeLink(ArticleLinkToCarTypeLink instance);
    partial void InsertGraphicsToArticleLink(GraphicsToArticleLink instance);
    partial void UpdateGraphicsToArticleLink(GraphicsToArticleLink instance);
    partial void DeleteGraphicsToArticleLink(GraphicsToArticleLink instance);
    partial void InsertCountryDelivery(CountryDelivery instance);
    partial void UpdateCountryDelivery(CountryDelivery instance);
    partial void DeleteCountryDelivery(CountryDelivery instance);
    partial void InsertArticleLookup(ArticleLookup instance);
    partial void UpdateArticleLookup(ArticleLookup instance);
    partial void DeleteArticleLookup(ArticleLookup instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void Insertv_des_texts(v_des_texts instance);
    partial void Updatev_des_texts(v_des_texts instance);
    partial void Deletev_des_texts(v_des_texts instance);
    partial void InsertCdsText(CdsText instance);
    partial void UpdateCdsText(CdsText instance);
    partial void DeleteCdsText(CdsText instance);
    partial void InsertArticleCriterion(ArticleCriterion instance);
    partial void UpdateArticleCriterion(ArticleCriterion instance);
    partial void DeleteArticleCriterion(ArticleCriterion instance);
    partial void InsertArticleCriterionLink(ArticleCriterionLink instance);
    partial void UpdateArticleCriterionLink(ArticleCriterionLink instance);
    partial void DeleteArticleCriterionLink(ArticleCriterionLink instance);
    partial void InsertGraphicsData(GraphicsData instance);
    partial void UpdateGraphicsData(GraphicsData instance);
    partial void DeleteGraphicsData(GraphicsData instance);
    partial void InsertGraphics(Graphics instance);
    partial void UpdateGraphics(Graphics instance);
    partial void DeleteGraphics(Graphics instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertSupersededArticle(SupersededArticle instance);
    partial void UpdateSupersededArticle(SupersededArticle instance);
    partial void DeleteSupersededArticle(SupersededArticle instance);
    #endregion
		
		public TecdocBaseDataContext() : 
				base(global::RmsAuto.TechDoc.Properties.Settings.Default.ex_tecdocsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TecdocBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TecdocBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TecdocBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TecdocBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<GenericArticle> GenericArticles
		{
			get
			{
				return this.GetTable<GenericArticle>();
			}
		}
		
		public System.Data.Linq.Table<ArticleLink> ArticleLinks
		{
			get
			{
				return this.GetTable<ArticleLink>();
			}
		}
		
		public System.Data.Linq.Table<SearchLookup> SearchLookups
		{
			get
			{
				return this.GetTable<SearchLookup>();
			}
		}
		
		public System.Data.Linq.Table<SearchTreeNode> SearchTreeNodes
		{
			get
			{
				return this.GetTable<SearchTreeNode>();
			}
		}
		
		public System.Data.Linq.Table<StrFamilyTree> StrFamilyTrees
		{
			get
			{
				return this.GetTable<StrFamilyTree>();
			}
		}
		
		public System.Data.Linq.Table<GenericArticleToStrLink> GenericArticleToStrLinks
		{
			get
			{
				return this.GetTable<GenericArticleToStrLink>();
			}
		}
		
		public System.Data.Linq.Table<CarType> CarTypes
		{
			get
			{
				return this.GetTable<CarType>();
			}
		}
		
		public System.Data.Linq.Table<ArticleLinkToCarTypeLink> ArticleLinkToCarTypeLinks
		{
			get
			{
				return this.GetTable<ArticleLinkToCarTypeLink>();
			}
		}
		
		public System.Data.Linq.Table<GraphicsToArticleLink> GraphicsToArticleLinks
		{
			get
			{
				return this.GetTable<GraphicsToArticleLink>();
			}
		}
		
		public System.Data.Linq.Table<CountryDelivery> CountryDeliveries
		{
			get
			{
				return this.GetTable<CountryDelivery>();
			}
		}
		
		public System.Data.Linq.Table<ArticleLookup> ArticleLookups
		{
			get
			{
				return this.GetTable<ArticleLookup>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<v_des_texts> v_des_texts
		{
			get
			{
				return this.GetTable<v_des_texts>();
			}
		}
		
		public System.Data.Linq.Table<CdsText> CdsTexts
		{
			get
			{
				return this.GetTable<CdsText>();
			}
		}
		
		public System.Data.Linq.Table<ArticleCriterion> ArticleCriteria
		{
			get
			{
				return this.GetTable<ArticleCriterion>();
			}
		}
		
		public System.Data.Linq.Table<ArticleCriterionLink> ArticleCriterionLinks
		{
			get
			{
				return this.GetTable<ArticleCriterionLink>();
			}
		}
		
		public System.Data.Linq.Table<GraphicsData> GraphicsDatas
		{
			get
			{
				return this.GetTable<GraphicsData>();
			}
		}
		
		public System.Data.Linq.Table<Graphics> Graphics
		{
			get
			{
				return this.GetTable<Graphics>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<SupersededArticle> SupersededArticles
		{
			get
			{
				return this.GetTable<SupersededArticle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_MODELS")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ManufacturerID;
		
		private System.Nullable<int> _CountryDesignationTextID;
		
		private System.Nullable<int> _DateFrom;
		
		private System.Nullable<int> _DateTo;
		
		private short _IsTruckModel;
		
		private short _IsCarModel;
		
		private EntitySet<CarType> _CarTypes;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
		private EntityRef<CdsText> _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMOD_IDChanging(int value);
    partial void OnMOD_IDChanged();
    partial void OnMOD_MFA_IDChanging(System.Nullable<int> value);
    partial void OnMOD_MFA_IDChanged();
    partial void OnMOD_CDS_IDChanging(System.Nullable<int> value);
    partial void OnMOD_CDS_IDChanged();
    partial void OnMOD_PCON_STARTChanging(System.Nullable<int> value);
    partial void OnMOD_PCON_STARTChanged();
    partial void OnMOD_PCON_ENDChanging(System.Nullable<int> value);
    partial void OnMOD_PCON_ENDChanged();
    partial void OnIsTruckModelChanging(short value);
    partial void OnIsTruckModelChanged();
    partial void OnIsCarModelChanging(short value);
    partial void OnIsCarModelChanged();
    #endregion
		
		public Model()
		{
			this._CarTypes = new EntitySet<CarType>(new Action<CarType>(this.attach_CarTypes), new Action<CarType>(this.detach_CarTypes));
			this._Manufacturer = default(EntityRef<Manufacturer>);
			this._Name = default(EntityRef<CdsText>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MOD_ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnMOD_IDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("MOD_ID");
					this.OnMOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="SmallInt")]
		public System.Nullable<int> MOD_MFA_ID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					if (this._Manufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMOD_MFA_IDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("MOD_MFA_ID");
					this.OnMOD_MFA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryDesignationTextID", DbType="Int")]
		public System.Nullable<int> MOD_CDS_ID
		{
			get
			{
				return this._CountryDesignationTextID;
			}
			set
			{
				if ((this._CountryDesignationTextID != value))
				{
					if (this._Name.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMOD_CDS_IDChanging(value);
					this.SendPropertyChanging();
					this._CountryDesignationTextID = value;
					this.SendPropertyChanged("MOD_CDS_ID");
					this.OnMOD_CDS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="Int")]
		public System.Nullable<int> MOD_PCON_START
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnMOD_PCON_STARTChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("MOD_PCON_START");
					this.OnMOD_PCON_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="Int")]
		public System.Nullable<int> MOD_PCON_END
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnMOD_PCON_ENDChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("MOD_PCON_END");
					this.OnMOD_PCON_ENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MOD_CV", Storage="_IsTruckModel", DbType="smallint")]
		public short IsTruckModel
		{
			get
			{
				return this._IsTruckModel;
			}
			set
			{
				if ((this._IsTruckModel != value))
				{
					this.OnIsTruckModelChanging(value);
					this.SendPropertyChanging();
					this._IsTruckModel = value;
					this.SendPropertyChanged("IsTruckModel");
					this.OnIsTruckModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MOD_PC", Storage="_IsCarModel", DbType="smallint")]
		public short IsCarModel
		{
			get
			{
				return this._IsCarModel;
			}
			set
			{
				if ((this._IsCarModel != value))
				{
					this.OnIsCarModelChanging(value);
					this.SendPropertyChanging();
					this._IsCarModel = value;
					this.SendPropertyChanged("IsCarModel");
					this.OnIsCarModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_CarType", Storage="_CarTypes", ThisKey="MOD_ID", OtherKey="TYP_MOD_ID")]
		public EntitySet<CarType> CarTypes
		{
			get
			{
				return this._CarTypes;
			}
			set
			{
				this._CarTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Model", Storage="_Manufacturer", ThisKey="MOD_MFA_ID", OtherKey="ID", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.Models.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.Models.Add(this);
						this._ManufacturerID = value.ID;
					}
					else
					{
						this._ManufacturerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdsText_Model", Storage="_Name", ThisKey="MOD_CDS_ID", OtherKey="cds_ID", IsForeignKey=true)]
		public CdsText Name
		{
			get
			{
				return this._Name.Entity;
			}
			set
			{
				if ((this._Name.Entity != value))
				{
					this.SendPropertyChanging();
					this._Name.Entity = value;
					this.SendPropertyChanged("Name");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarTypes(CarType entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_CarTypes(CarType entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_MANUFACTURERS")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _IsCarManufacturer;
		
		private System.Nullable<bool> _IsTruckManufacturer;
		
		private System.Nullable<short> _MFA_AXL_MFC;
		
		private System.Nullable<short> _MFA_ENG_MFC;
		
		private System.Nullable<short> _MFA_ENG_TYP;
		
		private string _MFA_MFC_CODE;
		
		private string _Name;
		
		private System.Nullable<int> _MFA_MF_NR;
		
		private EntitySet<Model> _Models;
		
		private EntityRef<Brand> _AfterMarketBrand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsCarManufacturerChanging(System.Nullable<bool> value);
    partial void OnIsCarManufacturerChanged();
    partial void OnIsTruckManufacturerChanging(System.Nullable<bool> value);
    partial void OnIsTruckManufacturerChanged();
    partial void OnMFA_AXL_MFCChanging(System.Nullable<short> value);
    partial void OnMFA_AXL_MFCChanged();
    partial void OnMFA_ENG_MFCChanging(System.Nullable<short> value);
    partial void OnMFA_ENG_MFCChanged();
    partial void OnMFA_ENG_TYPChanging(System.Nullable<short> value);
    partial void OnMFA_ENG_TYPChanged();
    partial void OnMFA_MFC_CODEChanging(string value);
    partial void OnMFA_MFC_CODEChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMFA_MF_NRChanging(System.Nullable<int> value);
    partial void OnMFA_MF_NRChanged();
    #endregion
		
		public Manufacturer()
		{
			this._Models = new EntitySet<Model>(new Action<Model>(this.attach_Models), new Action<Model>(this.detach_Models));
			this._AfterMarketBrand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MFA_ID", Storage="_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MFA_PC_MFC", Storage="_IsCarManufacturer", DbType="Bit")]
		public System.Nullable<bool> IsCarManufacturer
		{
			get
			{
				return this._IsCarManufacturer;
			}
			set
			{
				if ((this._IsCarManufacturer != value))
				{
					this.OnIsCarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._IsCarManufacturer = value;
					this.SendPropertyChanged("IsCarManufacturer");
					this.OnIsCarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MFA_CV_MFC", Storage="_IsTruckManufacturer", DbType="Bit")]
		public System.Nullable<bool> IsTruckManufacturer
		{
			get
			{
				return this._IsTruckManufacturer;
			}
			set
			{
				if ((this._IsTruckManufacturer != value))
				{
					this.OnIsTruckManufacturerChanging(value);
					this.SendPropertyChanging();
					this._IsTruckManufacturer = value;
					this.SendPropertyChanged("IsTruckManufacturer");
					this.OnIsTruckManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFA_AXL_MFC", DbType="SmallInt")]
		public System.Nullable<short> MFA_AXL_MFC
		{
			get
			{
				return this._MFA_AXL_MFC;
			}
			set
			{
				if ((this._MFA_AXL_MFC != value))
				{
					this.OnMFA_AXL_MFCChanging(value);
					this.SendPropertyChanging();
					this._MFA_AXL_MFC = value;
					this.SendPropertyChanged("MFA_AXL_MFC");
					this.OnMFA_AXL_MFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFA_ENG_MFC", DbType="SmallInt")]
		public System.Nullable<short> MFA_ENG_MFC
		{
			get
			{
				return this._MFA_ENG_MFC;
			}
			set
			{
				if ((this._MFA_ENG_MFC != value))
				{
					this.OnMFA_ENG_MFCChanging(value);
					this.SendPropertyChanging();
					this._MFA_ENG_MFC = value;
					this.SendPropertyChanged("MFA_ENG_MFC");
					this.OnMFA_ENG_MFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFA_ENG_TYP", DbType="SmallInt")]
		public System.Nullable<short> MFA_ENG_TYP
		{
			get
			{
				return this._MFA_ENG_TYP;
			}
			set
			{
				if ((this._MFA_ENG_TYP != value))
				{
					this.OnMFA_ENG_TYPChanging(value);
					this.SendPropertyChanging();
					this._MFA_ENG_TYP = value;
					this.SendPropertyChanged("MFA_ENG_TYP");
					this.OnMFA_ENG_TYPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFA_MFC_CODE", DbType="VarChar(30)")]
		public string MFA_MFC_CODE
		{
			get
			{
				return this._MFA_MFC_CODE;
			}
			set
			{
				if ((this._MFA_MFC_CODE != value))
				{
					this.OnMFA_MFC_CODEChanging(value);
					this.SendPropertyChanging();
					this._MFA_MFC_CODE = value;
					this.SendPropertyChanged("MFA_MFC_CODE");
					this.OnMFA_MFC_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MFA_BRAND", Storage="_Name", DbType="VarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFA_MF_NR", DbType="Int")]
		public System.Nullable<int> MFA_MF_NR
		{
			get
			{
				return this._MFA_MF_NR;
			}
			set
			{
				if ((this._MFA_MF_NR != value))
				{
					if (this._AfterMarketBrand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMFA_MF_NRChanging(value);
					this.SendPropertyChanging();
					this._MFA_MF_NR = value;
					this.SendPropertyChanged("MFA_MF_NR");
					this.OnMFA_MF_NRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Model", Storage="_Models", ThisKey="ID", OtherKey="MOD_MFA_ID")]
		public EntitySet<Model> Models
		{
			get
			{
				return this._Models;
			}
			set
			{
				this._Models.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Manufacturer", Storage="_AfterMarketBrand", ThisKey="MFA_MF_NR", OtherKey="BRA_MF_NR", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._AfterMarketBrand.Entity;
			}
			set
			{
				Brand previousValue = this._AfterMarketBrand.Entity;
				if (((previousValue != value) 
							|| (this._AfterMarketBrand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AfterMarketBrand.Entity = null;
						previousValue.Manufacturers.Remove(this);
					}
					this._AfterMarketBrand.Entity = value;
					if ((value != null))
					{
						value.Manufacturers.Add(this);
						this._MFA_MF_NR = value.BRA_MF_NR;
					}
					else
					{
						this._MFA_MF_NR = default(Nullable<int>);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_COUNTRIES")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _COU_ID;
		
		private string _COU_CC;
		
		private System.Nullable<int> _COU_DES_ID;
		
		private string _COU_CURRENCY_CODE;
		
		private string _COU_ISO2;
		
		private short _COU_IS_GROUP;
		
		private EntitySet<Supplier> _Suppliers;
		
		private EntityRef<v_des_texts> _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOU_IDChanging(short value);
    partial void OnCOU_IDChanged();
    partial void OnCOU_CCChanging(string value);
    partial void OnCOU_CCChanged();
    partial void OnCOU_DES_IDChanging(System.Nullable<int> value);
    partial void OnCOU_DES_IDChanged();
    partial void OnCOU_CURRENCY_CODEChanging(string value);
    partial void OnCOU_CURRENCY_CODEChanged();
    partial void OnCOU_ISO2Changing(string value);
    partial void OnCOU_ISO2Changed();
    partial void OnCOU_IS_GROUPChanging(short value);
    partial void OnCOU_IS_GROUPChanged();
    #endregion
		
		public Country()
		{
			this._Suppliers = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Suppliers), new Action<Supplier>(this.detach_Suppliers));
			this._Name = default(EntityRef<v_des_texts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COU_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short COU_ID
		{
			get
			{
				return this._COU_ID;
			}
			set
			{
				if ((this._COU_ID != value))
				{
					this.OnCOU_IDChanging(value);
					this.SendPropertyChanging();
					this._COU_ID = value;
					this.SendPropertyChanged("COU_ID");
					this.OnCOU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COU_CC", DbType="VarChar(9)")]
		public string COU_CC
		{
			get
			{
				return this._COU_CC;
			}
			set
			{
				if ((this._COU_CC != value))
				{
					this.OnCOU_CCChanging(value);
					this.SendPropertyChanging();
					this._COU_CC = value;
					this.SendPropertyChanged("COU_CC");
					this.OnCOU_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COU_DES_ID", DbType="Int")]
		public System.Nullable<int> COU_DES_ID
		{
			get
			{
				return this._COU_DES_ID;
			}
			set
			{
				if ((this._COU_DES_ID != value))
				{
					if (this._Name.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOU_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._COU_DES_ID = value;
					this.SendPropertyChanged("COU_DES_ID");
					this.OnCOU_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COU_CURRENCY_CODE", DbType="VarChar(9)")]
		public string COU_CURRENCY_CODE
		{
			get
			{
				return this._COU_CURRENCY_CODE;
			}
			set
			{
				if ((this._COU_CURRENCY_CODE != value))
				{
					this.OnCOU_CURRENCY_CODEChanging(value);
					this.SendPropertyChanging();
					this._COU_CURRENCY_CODE = value;
					this.SendPropertyChanged("COU_CURRENCY_CODE");
					this.OnCOU_CURRENCY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COU_ISO2", DbType="VarChar(6)")]
		public string COU_ISO2
		{
			get
			{
				return this._COU_ISO2;
			}
			set
			{
				if ((this._COU_ISO2 != value))
				{
					this.OnCOU_ISO2Changing(value);
					this.SendPropertyChanging();
					this._COU_ISO2 = value;
					this.SendPropertyChanged("COU_ISO2");
					this.OnCOU_ISO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COU_IS_GROUP", DbType="SmallInt NOT NULL")]
		public short COU_IS_GROUP
		{
			get
			{
				return this._COU_IS_GROUP;
			}
			set
			{
				if ((this._COU_IS_GROUP != value))
				{
					this.OnCOU_IS_GROUPChanging(value);
					this.SendPropertyChanging();
					this._COU_IS_GROUP = value;
					this.SendPropertyChanged("COU_IS_GROUP");
					this.OnCOU_IS_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Supplier", Storage="_Suppliers", ThisKey="COU_ID", OtherKey="SUP_COU_ID")]
		public EntitySet<Supplier> Suppliers
		{
			get
			{
				return this._Suppliers;
			}
			set
			{
				this._Suppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_Country", Storage="_Name", ThisKey="COU_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts Name
		{
			get
			{
				return this._Name.Entity;
			}
			set
			{
				if ((this._Name.Entity != value))
				{
					this.SendPropertyChanging();
					this._Name.Entity = value;
					this.SendPropertyChanged("Name");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_SUPPLIERS")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Name;
		
		private System.Nullable<short> _SUP_SUPPLIER_NR;
		
		private System.Nullable<short> _SUP_COU_ID;
		
		private System.Nullable<short> _SUP_IS_HESS;
		
		private EntitySet<Article> _Articles;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSUP_SUPPLIER_NRChanging(System.Nullable<short> value);
    partial void OnSUP_SUPPLIER_NRChanged();
    partial void OnSUP_COU_IDChanging(System.Nullable<short> value);
    partial void OnSUP_COU_IDChanged();
    partial void OnSUP_IS_HESSChanging(System.Nullable<short> value);
    partial void OnSUP_IS_HESSChanged();
    #endregion
		
		public Supplier()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SUP_ID", Storage="_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SUP_BRAND", Storage="_Name", DbType="VarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_SUPPLIER_NR", DbType="SmallInt")]
		public System.Nullable<short> SUP_SUPPLIER_NR
		{
			get
			{
				return this._SUP_SUPPLIER_NR;
			}
			set
			{
				if ((this._SUP_SUPPLIER_NR != value))
				{
					this.OnSUP_SUPPLIER_NRChanging(value);
					this.SendPropertyChanging();
					this._SUP_SUPPLIER_NR = value;
					this.SendPropertyChanged("SUP_SUPPLIER_NR");
					this.OnSUP_SUPPLIER_NRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_COU_ID", DbType="SmallInt")]
		public System.Nullable<short> SUP_COU_ID
		{
			get
			{
				return this._SUP_COU_ID;
			}
			set
			{
				if ((this._SUP_COU_ID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUP_COU_IDChanging(value);
					this.SendPropertyChanging();
					this._SUP_COU_ID = value;
					this.SendPropertyChanged("SUP_COU_ID");
					this.OnSUP_COU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_IS_HESS", DbType="SmallInt")]
		public System.Nullable<short> SUP_IS_HESS
		{
			get
			{
				return this._SUP_IS_HESS;
			}
			set
			{
				if ((this._SUP_IS_HESS != value))
				{
					this.OnSUP_IS_HESSChanging(value);
					this.SendPropertyChanging();
					this._SUP_IS_HESS = value;
					this.SendPropertyChanged("SUP_IS_HESS");
					this.OnSUP_IS_HESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Article", Storage="_Articles", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Supplier", Storage="_Country", ThisKey="SUP_COU_ID", OtherKey="COU_ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Suppliers.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Suppliers.Add(this);
						this._SUP_COU_ID = value.COU_ID;
					}
					else
					{
						this._SUP_COU_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_ARTICLES")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ART_ARTICLE_NR;
		
		private System.Nullable<short> _SupplierID;
		
		private System.Nullable<int> _ART_DES_ID;
		
		private System.Nullable<int> _ART_COMPLETE_DES_ID;
		
		private System.Nullable<short> _ART_PACK_SELFSERVICE;
		
		private System.Nullable<short> _ART_MATERIAL_MARK;
		
		private System.Nullable<short> _ART_REPLACEMENT;
		
		private System.Nullable<short> _ART_ACCESSORY;
		
		private System.Nullable<int> _ART_BATCH_SIZE1;
		
		private System.Nullable<int> _ART_BATCH_SIZE2;
		
		private EntitySet<ArticleLink> _ArticleLinks;
		
		private EntitySet<ArticleLookup> _ArticleLookups;
		
		private EntitySet<SupersededArticle> _SupersededArticles;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<v_des_texts> _Name;
		
		private EntityRef<v_des_texts> _CompleteName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticleNumberChanging(string value);
    partial void OnArticleNumberChanged();
    partial void OnSupplierIDChanging(System.Nullable<short> value);
    partial void OnSupplierIDChanged();
    partial void OnART_DES_IDChanging(System.Nullable<int> value);
    partial void OnART_DES_IDChanged();
    partial void OnART_COMPLETE_DES_IDChanging(System.Nullable<int> value);
    partial void OnART_COMPLETE_DES_IDChanged();
    partial void OnART_PACK_SELFSERVICEChanging(System.Nullable<short> value);
    partial void OnART_PACK_SELFSERVICEChanged();
    partial void OnART_MATERIAL_MARKChanging(System.Nullable<short> value);
    partial void OnART_MATERIAL_MARKChanged();
    partial void OnART_REPLACEMENTChanging(System.Nullable<short> value);
    partial void OnART_REPLACEMENTChanged();
    partial void OnART_ACCESSORYChanging(System.Nullable<short> value);
    partial void OnART_ACCESSORYChanged();
    partial void OnART_BATCH_SIZE1Changing(System.Nullable<int> value);
    partial void OnART_BATCH_SIZE1Changed();
    partial void OnART_BATCH_SIZE2Changing(System.Nullable<int> value);
    partial void OnART_BATCH_SIZE2Changed();
    #endregion
		
		public Article()
		{
			this._ArticleLinks = new EntitySet<ArticleLink>(new Action<ArticleLink>(this.attach_ArticleLinks), new Action<ArticleLink>(this.detach_ArticleLinks));
			this._ArticleLookups = new EntitySet<ArticleLookup>(new Action<ArticleLookup>(this.attach_ArticleLookups), new Action<ArticleLookup>(this.detach_ArticleLookups));
			this._SupersededArticles = new EntitySet<SupersededArticle>(new Action<SupersededArticle>(this.attach_SupersededArticles), new Action<SupersededArticle>(this.detach_SupersededArticles));
			this._Supplier = default(EntityRef<Supplier>);
			this._Name = default(EntityRef<v_des_texts>);
			this._CompleteName = default(EntityRef<v_des_texts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ART_ID", Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ART_ARTICLE_NR", Storage="_ART_ARTICLE_NR", DbType="VarChar(66) NOT NULL", CanBeNull=false)]
		public string ArticleNumber
		{
			get
			{
				return this._ART_ARTICLE_NR;
			}
			set
			{
				if ((this._ART_ARTICLE_NR != value))
				{
					this.OnArticleNumberChanging(value);
					this.SendPropertyChanging();
					this._ART_ARTICLE_NR = value;
					this.SendPropertyChanged("ArticleNumber");
					this.OnArticleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ART_SUP_ID", Storage="_SupplierID", DbType="SmallInt")]
		public System.Nullable<short> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_DES_ID", DbType="Int")]
		public System.Nullable<int> ART_DES_ID
		{
			get
			{
				return this._ART_DES_ID;
			}
			set
			{
				if ((this._ART_DES_ID != value))
				{
					if (this._Name.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnART_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._ART_DES_ID = value;
					this.SendPropertyChanged("ART_DES_ID");
					this.OnART_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_COMPLETE_DES_ID", DbType="Int")]
		public System.Nullable<int> ART_COMPLETE_DES_ID
		{
			get
			{
				return this._ART_COMPLETE_DES_ID;
			}
			set
			{
				if ((this._ART_COMPLETE_DES_ID != value))
				{
					if (this._CompleteName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnART_COMPLETE_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._ART_COMPLETE_DES_ID = value;
					this.SendPropertyChanged("ART_COMPLETE_DES_ID");
					this.OnART_COMPLETE_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_PACK_SELFSERVICE", DbType="SmallInt")]
		public System.Nullable<short> ART_PACK_SELFSERVICE
		{
			get
			{
				return this._ART_PACK_SELFSERVICE;
			}
			set
			{
				if ((this._ART_PACK_SELFSERVICE != value))
				{
					this.OnART_PACK_SELFSERVICEChanging(value);
					this.SendPropertyChanging();
					this._ART_PACK_SELFSERVICE = value;
					this.SendPropertyChanged("ART_PACK_SELFSERVICE");
					this.OnART_PACK_SELFSERVICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_MATERIAL_MARK", DbType="SmallInt")]
		public System.Nullable<short> ART_MATERIAL_MARK
		{
			get
			{
				return this._ART_MATERIAL_MARK;
			}
			set
			{
				if ((this._ART_MATERIAL_MARK != value))
				{
					this.OnART_MATERIAL_MARKChanging(value);
					this.SendPropertyChanging();
					this._ART_MATERIAL_MARK = value;
					this.SendPropertyChanged("ART_MATERIAL_MARK");
					this.OnART_MATERIAL_MARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_REPLACEMENT", DbType="SmallInt")]
		public System.Nullable<short> ART_REPLACEMENT
		{
			get
			{
				return this._ART_REPLACEMENT;
			}
			set
			{
				if ((this._ART_REPLACEMENT != value))
				{
					this.OnART_REPLACEMENTChanging(value);
					this.SendPropertyChanging();
					this._ART_REPLACEMENT = value;
					this.SendPropertyChanged("ART_REPLACEMENT");
					this.OnART_REPLACEMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_ACCESSORY", DbType="SmallInt")]
		public System.Nullable<short> ART_ACCESSORY
		{
			get
			{
				return this._ART_ACCESSORY;
			}
			set
			{
				if ((this._ART_ACCESSORY != value))
				{
					this.OnART_ACCESSORYChanging(value);
					this.SendPropertyChanging();
					this._ART_ACCESSORY = value;
					this.SendPropertyChanged("ART_ACCESSORY");
					this.OnART_ACCESSORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_BATCH_SIZE1", DbType="Int")]
		public System.Nullable<int> ART_BATCH_SIZE1
		{
			get
			{
				return this._ART_BATCH_SIZE1;
			}
			set
			{
				if ((this._ART_BATCH_SIZE1 != value))
				{
					this.OnART_BATCH_SIZE1Changing(value);
					this.SendPropertyChanging();
					this._ART_BATCH_SIZE1 = value;
					this.SendPropertyChanged("ART_BATCH_SIZE1");
					this.OnART_BATCH_SIZE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ART_BATCH_SIZE2", DbType="Int")]
		public System.Nullable<int> ART_BATCH_SIZE2
		{
			get
			{
				return this._ART_BATCH_SIZE2;
			}
			set
			{
				if ((this._ART_BATCH_SIZE2 != value))
				{
					this.OnART_BATCH_SIZE2Changing(value);
					this.SendPropertyChanging();
					this._ART_BATCH_SIZE2 = value;
					this.SendPropertyChanged("ART_BATCH_SIZE2");
					this.OnART_BATCH_SIZE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleLink", Storage="_ArticleLinks", ThisKey="ID", OtherKey="LA_ART_ID")]
		public EntitySet<ArticleLink> ArticleLinks
		{
			get
			{
				return this._ArticleLinks;
			}
			set
			{
				this._ArticleLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleLookup", Storage="_ArticleLookups", ThisKey="ID", OtherKey="ARL_ART_ID")]
		public EntitySet<ArticleLookup> ArticleLookups
		{
			get
			{
				return this._ArticleLookups;
			}
			set
			{
				this._ArticleLookups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_SupersededArticle", Storage="_SupersededArticles", ThisKey="ID", OtherKey="SUA_ART_ID")]
		public EntitySet<SupersededArticle> SupersededArticles
		{
			get
			{
				return this._SupersededArticles;
			}
			set
			{
				this._SupersededArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Article", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_Article", Storage="_Name", ThisKey="ART_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts Name
		{
			get
			{
				return this._Name.Entity;
			}
			set
			{
				if ((this._Name.Entity != value))
				{
					this.SendPropertyChanging();
					this._Name.Entity = value;
					this.SendPropertyChanged("Name");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_Article1", Storage="_CompleteName", ThisKey="ART_COMPLETE_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts CompleteName
		{
			get
			{
				return this._CompleteName.Entity;
			}
			set
			{
				if ((this._CompleteName.Entity != value))
				{
					this.SendPropertyChanging();
					this._CompleteName.Entity = value;
					this.SendPropertyChanged("CompleteName");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleLinks(ArticleLink entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ArticleLinks(ArticleLink entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_ArticleLookups(ArticleLookup entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ArticleLookups(ArticleLookup entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_SupersededArticles(SupersededArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_SupersededArticles(SupersededArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_GENERIC_ARTICLES")]
	public partial class GenericArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<short> _GA_NR;
		
		private int _GA_DES_ID;
		
		private int _GA_DES_ID_STANDARD;
		
		private System.Nullable<int> _GA_DES_ID_ASSEMBLY;
		
		private System.Nullable<int> _GA_DES_ID_INTENDED;
		
		private System.Nullable<short> _GA_UNIVERSAL;
		
		private EntitySet<ArticleLink> _ArticleLinks;
		
		private EntitySet<GenericArticleToStrLink> _StrLinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGA_NRChanging(System.Nullable<short> value);
    partial void OnGA_NRChanged();
    partial void OnGA_DES_IDChanging(int value);
    partial void OnGA_DES_IDChanged();
    partial void OnGA_DES_ID_STANDARDChanging(int value);
    partial void OnGA_DES_ID_STANDARDChanged();
    partial void OnGA_DES_ID_ASSEMBLYChanging(System.Nullable<int> value);
    partial void OnGA_DES_ID_ASSEMBLYChanged();
    partial void OnGA_DES_ID_INTENDEDChanging(System.Nullable<int> value);
    partial void OnGA_DES_ID_INTENDEDChanged();
    partial void OnGA_UNIVERSALChanging(System.Nullable<short> value);
    partial void OnGA_UNIVERSALChanged();
    #endregion
		
		public GenericArticle()
		{
			this._ArticleLinks = new EntitySet<ArticleLink>(new Action<ArticleLink>(this.attach_ArticleLinks), new Action<ArticleLink>(this.detach_ArticleLinks));
			this._StrLinks = new EntitySet<GenericArticleToStrLink>(new Action<GenericArticleToStrLink>(this.attach_StrLinks), new Action<GenericArticleToStrLink>(this.detach_StrLinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GA_ID", Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GA_NR", DbType="SmallInt")]
		public System.Nullable<short> GA_NR
		{
			get
			{
				return this._GA_NR;
			}
			set
			{
				if ((this._GA_NR != value))
				{
					this.OnGA_NRChanging(value);
					this.SendPropertyChanging();
					this._GA_NR = value;
					this.SendPropertyChanged("GA_NR");
					this.OnGA_NRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GA_DES_ID", DbType="Int NOT NULL")]
		public int GA_DES_ID
		{
			get
			{
				return this._GA_DES_ID;
			}
			set
			{
				if ((this._GA_DES_ID != value))
				{
					this.OnGA_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._GA_DES_ID = value;
					this.SendPropertyChanged("GA_DES_ID");
					this.OnGA_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GA_DES_ID_STANDARD", DbType="Int NOT NULL")]
		public int GA_DES_ID_STANDARD
		{
			get
			{
				return this._GA_DES_ID_STANDARD;
			}
			set
			{
				if ((this._GA_DES_ID_STANDARD != value))
				{
					this.OnGA_DES_ID_STANDARDChanging(value);
					this.SendPropertyChanging();
					this._GA_DES_ID_STANDARD = value;
					this.SendPropertyChanged("GA_DES_ID_STANDARD");
					this.OnGA_DES_ID_STANDARDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GA_DES_ID_ASSEMBLY", DbType="Int")]
		public System.Nullable<int> GA_DES_ID_ASSEMBLY
		{
			get
			{
				return this._GA_DES_ID_ASSEMBLY;
			}
			set
			{
				if ((this._GA_DES_ID_ASSEMBLY != value))
				{
					this.OnGA_DES_ID_ASSEMBLYChanging(value);
					this.SendPropertyChanging();
					this._GA_DES_ID_ASSEMBLY = value;
					this.SendPropertyChanged("GA_DES_ID_ASSEMBLY");
					this.OnGA_DES_ID_ASSEMBLYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GA_DES_ID_INTENDED", DbType="Int")]
		public System.Nullable<int> GA_DES_ID_INTENDED
		{
			get
			{
				return this._GA_DES_ID_INTENDED;
			}
			set
			{
				if ((this._GA_DES_ID_INTENDED != value))
				{
					this.OnGA_DES_ID_INTENDEDChanging(value);
					this.SendPropertyChanging();
					this._GA_DES_ID_INTENDED = value;
					this.SendPropertyChanged("GA_DES_ID_INTENDED");
					this.OnGA_DES_ID_INTENDEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GA_UNIVERSAL", DbType="SmallInt")]
		public System.Nullable<short> GA_UNIVERSAL
		{
			get
			{
				return this._GA_UNIVERSAL;
			}
			set
			{
				if ((this._GA_UNIVERSAL != value))
				{
					this.OnGA_UNIVERSALChanging(value);
					this.SendPropertyChanging();
					this._GA_UNIVERSAL = value;
					this.SendPropertyChanged("GA_UNIVERSAL");
					this.OnGA_UNIVERSALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenericArticle_ArticleLink", Storage="_ArticleLinks", ThisKey="ID", OtherKey="LA_GA_ID")]
		public EntitySet<ArticleLink> ArticleLinks
		{
			get
			{
				return this._ArticleLinks;
			}
			set
			{
				this._ArticleLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenericArticle_GenericArticleToStrLink", Storage="_StrLinks", ThisKey="ID", OtherKey="GenericArticleID")]
		public EntitySet<GenericArticleToStrLink> StrLinks
		{
			get
			{
				return this._StrLinks;
			}
			set
			{
				this._StrLinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleLinks(ArticleLink entity)
		{
			this.SendPropertyChanging();
			entity.GenericArticle = this;
		}
		
		private void detach_ArticleLinks(ArticleLink entity)
		{
			this.SendPropertyChanging();
			entity.GenericArticle = null;
		}
		
		private void attach_StrLinks(GenericArticleToStrLink entity)
		{
			this.SendPropertyChanging();
			entity.GenericArticle = this;
		}
		
		private void detach_StrLinks(GenericArticleToStrLink entity)
		{
			this.SendPropertyChanging();
			entity.GenericArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_LINK_ART")]
	public partial class ArticleLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LA_ART_ID;
		
		private int _LA_GA_ID;
		
		private int _LA_SORT;
		
		private EntitySet<ArticleLinkToCarTypeLink> _ArticleLinkToCarTypeLinks;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<GenericArticle> _GenericArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLA_ART_IDChanging(int value);
    partial void OnLA_ART_IDChanged();
    partial void OnLA_GA_IDChanging(int value);
    partial void OnLA_GA_IDChanged();
    partial void OnLA_SORTChanging(int value);
    partial void OnLA_SORTChanged();
    #endregion
		
		public ArticleLink()
		{
			this._ArticleLinkToCarTypeLinks = new EntitySet<ArticleLinkToCarTypeLink>(new Action<ArticleLinkToCarTypeLink>(this.attach_ArticleLinkToCarTypeLinks), new Action<ArticleLinkToCarTypeLink>(this.detach_ArticleLinkToCarTypeLinks));
			this._Article = default(EntityRef<Article>);
			this._GenericArticle = default(EntityRef<GenericArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LA_ID", Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA_ART_ID", DbType="Int NOT NULL")]
		public int LA_ART_ID
		{
			get
			{
				return this._LA_ART_ID;
			}
			set
			{
				if ((this._LA_ART_ID != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLA_ART_IDChanging(value);
					this.SendPropertyChanging();
					this._LA_ART_ID = value;
					this.SendPropertyChanged("LA_ART_ID");
					this.OnLA_ART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA_GA_ID", DbType="Int NOT NULL")]
		public int LA_GA_ID
		{
			get
			{
				return this._LA_GA_ID;
			}
			set
			{
				if ((this._LA_GA_ID != value))
				{
					if (this._GenericArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLA_GA_IDChanging(value);
					this.SendPropertyChanging();
					this._LA_GA_ID = value;
					this.SendPropertyChanged("LA_GA_ID");
					this.OnLA_GA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA_SORT", DbType="Int NOT NULL")]
		public int LA_SORT
		{
			get
			{
				return this._LA_SORT;
			}
			set
			{
				if ((this._LA_SORT != value))
				{
					this.OnLA_SORTChanging(value);
					this.SendPropertyChanging();
					this._LA_SORT = value;
					this.SendPropertyChanged("LA_SORT");
					this.OnLA_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleLink_ArticleLinkToCarTypeLink", Storage="_ArticleLinkToCarTypeLinks", ThisKey="ID", OtherKey="ArticleLinkID")]
		public EntitySet<ArticleLinkToCarTypeLink> ArticleLinkToCarTypeLinks
		{
			get
			{
				return this._ArticleLinkToCarTypeLinks;
			}
			set
			{
				this._ArticleLinkToCarTypeLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleLink", Storage="_Article", ThisKey="LA_ART_ID", OtherKey="ID", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ArticleLinks.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ArticleLinks.Add(this);
						this._LA_ART_ID = value.ID;
					}
					else
					{
						this._LA_ART_ID = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenericArticle_ArticleLink", Storage="_GenericArticle", ThisKey="LA_GA_ID", OtherKey="ID", IsForeignKey=true)]
		public GenericArticle GenericArticle
		{
			get
			{
				return this._GenericArticle.Entity;
			}
			set
			{
				GenericArticle previousValue = this._GenericArticle.Entity;
				if (((previousValue != value) 
							|| (this._GenericArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GenericArticle.Entity = null;
						previousValue.ArticleLinks.Remove(this);
					}
					this._GenericArticle.Entity = value;
					if ((value != null))
					{
						value.ArticleLinks.Add(this);
						this._LA_GA_ID = value.ID;
					}
					else
					{
						this._LA_GA_ID = default(int);
					}
					this.SendPropertyChanged("GenericArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleLinkToCarTypeLinks(ArticleLinkToCarTypeLink entity)
		{
			this.SendPropertyChanging();
			entity.ArticleLink = this;
		}
		
		private void detach_ArticleLinkToCarTypeLinks(ArticleLinkToCarTypeLink entity)
		{
			this.SendPropertyChanging();
			entity.ArticleLink = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_STR_LOOKUP")]
	public partial class SearchLookup
	{
		
		private short _LanguageId;
		
		private string _SearchText;
		
		private int _SearchTreeNodeID;
		
		private int _STL_GA_ID;
		
		public SearchLookup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STL_LNG_ID", Storage="_LanguageId", DbType="SmallInt NOT NULL")]
		public short LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this._LanguageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STL_SEARCH_TEXT", Storage="_SearchText", DbType="VarChar(180) NOT NULL", CanBeNull=false)]
		public string SearchText
		{
			get
			{
				return this._SearchText;
			}
			set
			{
				if ((this._SearchText != value))
				{
					this._SearchText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STL_STR_ID", Storage="_SearchTreeNodeID", DbType="Int NOT NULL")]
		public int SearchTreeNodeID
		{
			get
			{
				return this._SearchTreeNodeID;
			}
			set
			{
				if ((this._SearchTreeNodeID != value))
				{
					this._SearchTreeNodeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STL_GA_ID", DbType="Int NOT NULL")]
		public int STL_GA_ID
		{
			get
			{
				return this._STL_GA_ID;
			}
			set
			{
				if ((this._STL_GA_ID != value))
				{
					this._STL_GA_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_SEARCH_TREE")]
	public partial class SearchTreeNode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ParentNodeID;
		
		private System.Nullable<short> _STR_TYPE;
		
		private System.Nullable<short> _STR_LEVEL;
		
		private System.Nullable<int> _STR_DES_ID;
		
		private System.Nullable<short> _STR_SORT;
		
		private System.Nullable<int> _STR_NODE_NR;
		
		private EntitySet<SearchTreeNode> _ChildNodes;
		
		private EntitySet<StrFamilyTree> _ChildFamilyNodes;
		
		private EntitySet<GenericArticleToStrLink> _GenericArticleLinks;
		
		private EntityRef<SearchTreeNode> _ParentNode;
		
		private EntityRef<v_des_texts> _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentNodeIDChanging(System.Nullable<int> value);
    partial void OnParentNodeIDChanged();
    partial void OnSTR_TYPEChanging(System.Nullable<short> value);
    partial void OnSTR_TYPEChanged();
    partial void OnSTR_LEVELChanging(System.Nullable<short> value);
    partial void OnSTR_LEVELChanged();
    partial void OnSTR_DES_IDChanging(System.Nullable<int> value);
    partial void OnSTR_DES_IDChanged();
    partial void OnSTR_SORTChanging(System.Nullable<short> value);
    partial void OnSTR_SORTChanged();
    partial void OnSTR_NODE_NRChanging(System.Nullable<int> value);
    partial void OnSTR_NODE_NRChanged();
    #endregion
		
		public SearchTreeNode()
		{
			this._ChildNodes = new EntitySet<SearchTreeNode>(new Action<SearchTreeNode>(this.attach_ChildNodes), new Action<SearchTreeNode>(this.detach_ChildNodes));
			this._ChildFamilyNodes = new EntitySet<StrFamilyTree>(new Action<StrFamilyTree>(this.attach_ChildFamilyNodes), new Action<StrFamilyTree>(this.detach_ChildFamilyNodes));
			this._GenericArticleLinks = new EntitySet<GenericArticleToStrLink>(new Action<GenericArticleToStrLink>(this.attach_GenericArticleLinks), new Action<GenericArticleToStrLink>(this.detach_GenericArticleLinks));
			this._ParentNode = default(EntityRef<SearchTreeNode>);
			this._Name = default(EntityRef<v_des_texts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STR_ID", Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STR_ID_PARENT", Storage="_ParentNodeID", DbType="Int")]
		public System.Nullable<int> ParentNodeID
		{
			get
			{
				return this._ParentNodeID;
			}
			set
			{
				if ((this._ParentNodeID != value))
				{
					this.OnParentNodeIDChanging(value);
					this.SendPropertyChanging();
					this._ParentNodeID = value;
					this.SendPropertyChanged("ParentNodeID");
					this.OnParentNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STR_TYPE", DbType="SmallInt")]
		public System.Nullable<short> STR_TYPE
		{
			get
			{
				return this._STR_TYPE;
			}
			set
			{
				if ((this._STR_TYPE != value))
				{
					this.OnSTR_TYPEChanging(value);
					this.SendPropertyChanging();
					this._STR_TYPE = value;
					this.SendPropertyChanged("STR_TYPE");
					this.OnSTR_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STR_LEVEL", DbType="SmallInt")]
		public System.Nullable<short> STR_LEVEL
		{
			get
			{
				return this._STR_LEVEL;
			}
			set
			{
				if ((this._STR_LEVEL != value))
				{
					this.OnSTR_LEVELChanging(value);
					this.SendPropertyChanging();
					this._STR_LEVEL = value;
					this.SendPropertyChanged("STR_LEVEL");
					this.OnSTR_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STR_DES_ID", DbType="Int")]
		public System.Nullable<int> STR_DES_ID
		{
			get
			{
				return this._STR_DES_ID;
			}
			set
			{
				if ((this._STR_DES_ID != value))
				{
					if (this._Name.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTR_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._STR_DES_ID = value;
					this.SendPropertyChanged("STR_DES_ID");
					this.OnSTR_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STR_SORT", DbType="SmallInt")]
		public System.Nullable<short> STR_SORT
		{
			get
			{
				return this._STR_SORT;
			}
			set
			{
				if ((this._STR_SORT != value))
				{
					this.OnSTR_SORTChanging(value);
					this.SendPropertyChanging();
					this._STR_SORT = value;
					this.SendPropertyChanged("STR_SORT");
					this.OnSTR_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STR_NODE_NR", DbType="Int")]
		public System.Nullable<int> STR_NODE_NR
		{
			get
			{
				return this._STR_NODE_NR;
			}
			set
			{
				if ((this._STR_NODE_NR != value))
				{
					this.OnSTR_NODE_NRChanging(value);
					this.SendPropertyChanging();
					this._STR_NODE_NR = value;
					this.SendPropertyChanged("STR_NODE_NR");
					this.OnSTR_NODE_NRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTreeNode_SearchTreeNode", Storage="_ChildNodes", ThisKey="ID", OtherKey="ParentNodeID")]
		public EntitySet<SearchTreeNode> ChildNodes
		{
			get
			{
				return this._ChildNodes;
			}
			set
			{
				this._ChildNodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTreeNode_StrFamilyTree", Storage="_ChildFamilyNodes", ThisKey="ID", OtherKey="ParentStrID")]
		public EntitySet<StrFamilyTree> ChildFamilyNodes
		{
			get
			{
				return this._ChildFamilyNodes;
			}
			set
			{
				this._ChildFamilyNodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTreeNode_GenericArticleToStrLink", Storage="_GenericArticleLinks", ThisKey="ID", OtherKey="StrID")]
		public EntitySet<GenericArticleToStrLink> GenericArticleLinks
		{
			get
			{
				return this._GenericArticleLinks;
			}
			set
			{
				this._GenericArticleLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTreeNode_SearchTreeNode", Storage="_ParentNode", ThisKey="ParentNodeID", OtherKey="ID", IsForeignKey=true)]
		public SearchTreeNode ParentNode
		{
			get
			{
				return this._ParentNode.Entity;
			}
			set
			{
				SearchTreeNode previousValue = this._ParentNode.Entity;
				if (((previousValue != value) 
							|| (this._ParentNode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentNode.Entity = null;
						previousValue.ChildNodes.Remove(this);
					}
					this._ParentNode.Entity = value;
					if ((value != null))
					{
						value.ChildNodes.Add(this);
						this._ParentNodeID = value.ID;
					}
					else
					{
						this._ParentNodeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentNode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_SearchTreeNode", Storage="_Name", ThisKey="STR_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts Name
		{
			get
			{
				return this._Name.Entity;
			}
			set
			{
				if ((this._Name.Entity != value))
				{
					this.SendPropertyChanging();
					this._Name.Entity = value;
					this.SendPropertyChanged("Name");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildNodes(SearchTreeNode entity)
		{
			this.SendPropertyChanging();
			entity.ParentNode = this;
		}
		
		private void detach_ChildNodes(SearchTreeNode entity)
		{
			this.SendPropertyChanging();
			entity.ParentNode = null;
		}
		
		private void attach_ChildFamilyNodes(StrFamilyTree entity)
		{
			this.SendPropertyChanging();
			entity.ParentTreeNode = this;
		}
		
		private void detach_ChildFamilyNodes(StrFamilyTree entity)
		{
			this.SendPropertyChanging();
			entity.ParentTreeNode = null;
		}
		
		private void attach_GenericArticleLinks(GenericArticleToStrLink entity)
		{
			this.SendPropertyChanging();
			entity.SearchTreeNode = this;
		}
		
		private void detach_GenericArticleLinks(GenericArticleToStrLink entity)
		{
			this.SendPropertyChanging();
			entity.SearchTreeNode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_STR_FAMILY_TREE")]
	public partial class StrFamilyTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParentStrID;
		
		private int _ChildStrID;
		
		private EntityRef<SearchTreeNode> _ParentTreeNode;
		
		private EntityRef<SearchTreeNode> _ChildTreeNode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentStrIDChanging(int value);
    partial void OnParentStrIDChanged();
    partial void OnChildStrIDChanging(int value);
    partial void OnChildStrIDChanged();
    #endregion
		
		public StrFamilyTree()
		{
			this._ParentTreeNode = default(EntityRef<SearchTreeNode>);
			this._ChildTreeNode = default(EntityRef<SearchTreeNode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SFT_ANCESTOR_STR_ID", Storage="_ParentStrID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ParentStrID
		{
			get
			{
				return this._ParentStrID;
			}
			set
			{
				if ((this._ParentStrID != value))
				{
					this.OnParentStrIDChanging(value);
					this.SendPropertyChanging();
					this._ParentStrID = value;
					this.SendPropertyChanged("ParentStrID");
					this.OnParentStrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SFT_DESCENDANT_STR_ID", Storage="_ChildStrID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChildStrID
		{
			get
			{
				return this._ChildStrID;
			}
			set
			{
				if ((this._ChildStrID != value))
				{
					this.OnChildStrIDChanging(value);
					this.SendPropertyChanging();
					this._ChildStrID = value;
					this.SendPropertyChanged("ChildStrID");
					this.OnChildStrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTreeNode_StrFamilyTree", Storage="_ParentTreeNode", ThisKey="ParentStrID", OtherKey="ID", IsForeignKey=true)]
		public SearchTreeNode ParentTreeNode
		{
			get
			{
				return this._ParentTreeNode.Entity;
			}
			set
			{
				SearchTreeNode previousValue = this._ParentTreeNode.Entity;
				if (((previousValue != value) 
							|| (this._ParentTreeNode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentTreeNode.Entity = null;
						previousValue.ChildFamilyNodes.Remove(this);
					}
					this._ParentTreeNode.Entity = value;
					if ((value != null))
					{
						value.ChildFamilyNodes.Add(this);
						this._ParentStrID = value.ID;
					}
					else
					{
						this._ParentStrID = default(int);
					}
					this.SendPropertyChanged("ParentTreeNode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTreeNode_StrFamilyTree1", Storage="_ChildTreeNode", ThisKey="ChildStrID", OtherKey="ID", IsForeignKey=true)]
		public SearchTreeNode ChildTreeNode
		{
			get
			{
				return this._ChildTreeNode.Entity;
			}
			set
			{
				if ((this._ChildTreeNode.Entity != value))
				{
					this.SendPropertyChanging();
					this._ChildTreeNode.Entity = value;
					this.SendPropertyChanged("ChildTreeNode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_LINK_GA_STR")]
	public partial class GenericArticleToStrLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StrID;
		
		private int _GenericArticleID;
		
		private EntityRef<GenericArticle> _GenericArticle;
		
		private EntityRef<SearchTreeNode> _SearchTreeNode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStrIDChanging(int value);
    partial void OnStrIDChanged();
    partial void OnGenericArticleIDChanging(int value);
    partial void OnGenericArticleIDChanged();
    #endregion
		
		public GenericArticleToStrLink()
		{
			this._GenericArticle = default(EntityRef<GenericArticle>);
			this._SearchTreeNode = default(EntityRef<SearchTreeNode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LGS_STR_ID", Storage="_StrID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StrID
		{
			get
			{
				return this._StrID;
			}
			set
			{
				if ((this._StrID != value))
				{
					this.OnStrIDChanging(value);
					this.SendPropertyChanging();
					this._StrID = value;
					this.SendPropertyChanged("StrID");
					this.OnStrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LGS_GA_ID", Storage="_GenericArticleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GenericArticleID
		{
			get
			{
				return this._GenericArticleID;
			}
			set
			{
				if ((this._GenericArticleID != value))
				{
					this.OnGenericArticleIDChanging(value);
					this.SendPropertyChanging();
					this._GenericArticleID = value;
					this.SendPropertyChanged("GenericArticleID");
					this.OnGenericArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenericArticle_GenericArticleToStrLink", Storage="_GenericArticle", ThisKey="GenericArticleID", OtherKey="ID", IsForeignKey=true)]
		public GenericArticle GenericArticle
		{
			get
			{
				return this._GenericArticle.Entity;
			}
			set
			{
				GenericArticle previousValue = this._GenericArticle.Entity;
				if (((previousValue != value) 
							|| (this._GenericArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GenericArticle.Entity = null;
						previousValue.StrLinks.Remove(this);
					}
					this._GenericArticle.Entity = value;
					if ((value != null))
					{
						value.StrLinks.Add(this);
						this._GenericArticleID = value.ID;
					}
					else
					{
						this._GenericArticleID = default(int);
					}
					this.SendPropertyChanged("GenericArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTreeNode_GenericArticleToStrLink", Storage="_SearchTreeNode", ThisKey="StrID", OtherKey="ID", IsForeignKey=true)]
		public SearchTreeNode SearchTreeNode
		{
			get
			{
				return this._SearchTreeNode.Entity;
			}
			set
			{
				SearchTreeNode previousValue = this._SearchTreeNode.Entity;
				if (((previousValue != value) 
							|| (this._SearchTreeNode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchTreeNode.Entity = null;
						previousValue.GenericArticleLinks.Remove(this);
					}
					this._SearchTreeNode.Entity = value;
					if ((value != null))
					{
						value.GenericArticleLinks.Add(this);
						this._StrID = value.ID;
					}
					else
					{
						this._StrID = default(int);
					}
					this.SendPropertyChanged("SearchTreeNode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_TYPES")]
	public partial class CarType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TYP_CDS_ID;
		
		private System.Nullable<int> _TYP_MMT_CDS_ID;
		
		private int _TYP_MOD_ID;
		
		private int _TYP_SORT;
		
		private System.Nullable<int> _TYP_PCON_START;
		
		private System.Nullable<int> _TYP_PCON_END;
		
		private System.Nullable<int> _TYP_KW_FROM;
		
		private System.Nullable<int> _TYP_KW_UPTO;
		
		private System.Nullable<int> _TYP_HP_FROM;
		
		private System.Nullable<int> _TYP_HP_UPTO;
		
		private System.Nullable<int> _TYP_CCM;
		
		private System.Nullable<short> _TYP_CYLINDERS;
		
		private System.Nullable<short> _TYP_DOORS;
		
		private System.Nullable<short> _TYP_TANK;
		
		private System.Nullable<int> _TYP_KV_VOLTAGE_DES_ID;
		
		private System.Nullable<int> _TYP_KV_ABS_DES_ID;
		
		private System.Nullable<int> _TYP_KV_ASR_DES_ID;
		
		private System.Nullable<int> _TYP_KV_ENGINE_DES_ID;
		
		private System.Nullable<int> _TYP_KV_BRAKE_TYPE_DES_ID;
		
		private System.Nullable<int> _TYP_KV_BRAKE_SYST_DES_ID;
		
		private System.Nullable<int> _TYP_KV_FUEL_DES_ID;
		
		private System.Nullable<int> _TYP_KV_CATALYST_DES_ID;
		
		private System.Nullable<int> _TYP_KV_BODY_DES_ID;
		
		private System.Nullable<int> _TYP_KV_STEERING_DES_ID;
		
		private System.Nullable<int> _TYP_KV_STEERING_SIDE_DES_ID;
		
		private System.Nullable<double> _TYP_MAX_WEIGHT;
		
		private System.Nullable<int> _TYP_KV_MODEL_DES_ID;
		
		private System.Nullable<int> _TYP_KV_AXLE_DES_ID;
		
		private System.Nullable<int> _TYP_CCM_TAX;
		
		private System.Nullable<double> _TYP_LITRES;
		
		private System.Nullable<int> _TYP_KV_DRIVE_DES_ID;
		
		private System.Nullable<int> _TYP_KV_TRANS_DES_ID;
		
		private System.Nullable<int> _TYP_KV_FUEL_SUPPLY_DES_ID;
		
		private System.Nullable<short> _TYP_VALVES;
		
		private string _TYP_CTM;
		
		private string _TYP_LA_CTM;
		
		private EntitySet<ArticleLinkToCarTypeLink> _ArticleLinkToCarTypeLinks;
		
		private EntityRef<Model> _Model;
		
		private EntityRef<CdsText> _FullName;
		
		private EntityRef<CdsText> _Name;
		
		private EntityRef<v_des_texts> _FuelName;
		
		private EntityRef<v_des_texts> _BodyName;
		
		private EntityRef<v_des_texts> _FuelSupplyName;
		
		private EntityRef<v_des_texts> _EngineName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTYP_CDS_IDChanging(System.Nullable<int> value);
    partial void OnTYP_CDS_IDChanged();
    partial void OnTYP_MMT_CDS_IDChanging(System.Nullable<int> value);
    partial void OnTYP_MMT_CDS_IDChanged();
    partial void OnTYP_MOD_IDChanging(int value);
    partial void OnTYP_MOD_IDChanged();
    partial void OnTYP_SORTChanging(int value);
    partial void OnTYP_SORTChanged();
    partial void OnTYP_PCON_STARTChanging(System.Nullable<int> value);
    partial void OnTYP_PCON_STARTChanged();
    partial void OnTYP_PCON_ENDChanging(System.Nullable<int> value);
    partial void OnTYP_PCON_ENDChanged();
    partial void OnTYP_KW_FROMChanging(System.Nullable<int> value);
    partial void OnTYP_KW_FROMChanged();
    partial void OnTYP_KW_UPTOChanging(System.Nullable<int> value);
    partial void OnTYP_KW_UPTOChanged();
    partial void OnTYP_HP_FROMChanging(System.Nullable<int> value);
    partial void OnTYP_HP_FROMChanged();
    partial void OnTYP_HP_UPTOChanging(System.Nullable<int> value);
    partial void OnTYP_HP_UPTOChanged();
    partial void OnEngineVolumeChanging(System.Nullable<int> value);
    partial void OnEngineVolumeChanged();
    partial void OnTYP_CYLINDERSChanging(System.Nullable<short> value);
    partial void OnTYP_CYLINDERSChanged();
    partial void OnTYP_DOORSChanging(System.Nullable<short> value);
    partial void OnTYP_DOORSChanged();
    partial void OnTYP_TANKChanging(System.Nullable<short> value);
    partial void OnTYP_TANKChanged();
    partial void OnTYP_KV_VOLTAGE_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_VOLTAGE_DES_IDChanged();
    partial void OnTYP_KV_ABS_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_ABS_DES_IDChanged();
    partial void OnTYP_KV_ASR_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_ASR_DES_IDChanged();
    partial void OnTYP_KV_ENGINE_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_ENGINE_DES_IDChanged();
    partial void OnTYP_KV_BRAKE_TYPE_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_BRAKE_TYPE_DES_IDChanged();
    partial void OnTYP_KV_BRAKE_SYST_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_BRAKE_SYST_DES_IDChanged();
    partial void OnTYP_KV_FUEL_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_FUEL_DES_IDChanged();
    partial void OnTYP_KV_CATALYST_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_CATALYST_DES_IDChanged();
    partial void OnTYP_KV_BODY_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_BODY_DES_IDChanged();
    partial void OnTYP_KV_STEERING_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_STEERING_DES_IDChanged();
    partial void OnTYP_KV_STEERING_SIDE_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_STEERING_SIDE_DES_IDChanged();
    partial void OnTYP_MAX_WEIGHTChanging(System.Nullable<double> value);
    partial void OnTYP_MAX_WEIGHTChanged();
    partial void OnTYP_KV_MODEL_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_MODEL_DES_IDChanged();
    partial void OnTYP_KV_AXLE_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_AXLE_DES_IDChanged();
    partial void OnTYP_CCM_TAXChanging(System.Nullable<int> value);
    partial void OnTYP_CCM_TAXChanged();
    partial void OnTYP_LITRESChanging(System.Nullable<double> value);
    partial void OnTYP_LITRESChanged();
    partial void OnTYP_KV_DRIVE_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_DRIVE_DES_IDChanged();
    partial void OnTYP_KV_TRANS_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_TRANS_DES_IDChanged();
    partial void OnTYP_KV_FUEL_SUPPLY_DES_IDChanging(System.Nullable<int> value);
    partial void OnTYP_KV_FUEL_SUPPLY_DES_IDChanged();
    partial void OnTYP_VALVESChanging(System.Nullable<short> value);
    partial void OnTYP_VALVESChanged();
    partial void OnTYP_CTMChanging(string value);
    partial void OnTYP_CTMChanged();
    partial void OnTYP_LA_CTMChanging(string value);
    partial void OnTYP_LA_CTMChanged();
    #endregion
		
		public CarType()
		{
			this._ArticleLinkToCarTypeLinks = new EntitySet<ArticleLinkToCarTypeLink>(new Action<ArticleLinkToCarTypeLink>(this.attach_ArticleLinkToCarTypeLinks), new Action<ArticleLinkToCarTypeLink>(this.detach_ArticleLinkToCarTypeLinks));
			this._Model = default(EntityRef<Model>);
			this._FullName = default(EntityRef<CdsText>);
			this._Name = default(EntityRef<CdsText>);
			this._FuelName = default(EntityRef<v_des_texts>);
			this._BodyName = default(EntityRef<v_des_texts>);
			this._FuelSupplyName = default(EntityRef<v_des_texts>);
			this._EngineName = default(EntityRef<v_des_texts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TYP_ID", Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_CDS_ID", DbType="Int")]
		public System.Nullable<int> TYP_CDS_ID
		{
			get
			{
				return this._TYP_CDS_ID;
			}
			set
			{
				if ((this._TYP_CDS_ID != value))
				{
					if (this._FullName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYP_CDS_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_CDS_ID = value;
					this.SendPropertyChanged("TYP_CDS_ID");
					this.OnTYP_CDS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_MMT_CDS_ID", DbType="Int")]
		public System.Nullable<int> TYP_MMT_CDS_ID
		{
			get
			{
				return this._TYP_MMT_CDS_ID;
			}
			set
			{
				if ((this._TYP_MMT_CDS_ID != value))
				{
					if (this._Name.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYP_MMT_CDS_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_MMT_CDS_ID = value;
					this.SendPropertyChanged("TYP_MMT_CDS_ID");
					this.OnTYP_MMT_CDS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_MOD_ID", DbType="Int NOT NULL")]
		public int TYP_MOD_ID
		{
			get
			{
				return this._TYP_MOD_ID;
			}
			set
			{
				if ((this._TYP_MOD_ID != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYP_MOD_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_MOD_ID = value;
					this.SendPropertyChanged("TYP_MOD_ID");
					this.OnTYP_MOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_SORT", DbType="Int NOT NULL")]
		public int TYP_SORT
		{
			get
			{
				return this._TYP_SORT;
			}
			set
			{
				if ((this._TYP_SORT != value))
				{
					this.OnTYP_SORTChanging(value);
					this.SendPropertyChanging();
					this._TYP_SORT = value;
					this.SendPropertyChanged("TYP_SORT");
					this.OnTYP_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_PCON_START", DbType="Int")]
		public System.Nullable<int> TYP_PCON_START
		{
			get
			{
				return this._TYP_PCON_START;
			}
			set
			{
				if ((this._TYP_PCON_START != value))
				{
					this.OnTYP_PCON_STARTChanging(value);
					this.SendPropertyChanging();
					this._TYP_PCON_START = value;
					this.SendPropertyChanged("TYP_PCON_START");
					this.OnTYP_PCON_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_PCON_END", DbType="Int")]
		public System.Nullable<int> TYP_PCON_END
		{
			get
			{
				return this._TYP_PCON_END;
			}
			set
			{
				if ((this._TYP_PCON_END != value))
				{
					this.OnTYP_PCON_ENDChanging(value);
					this.SendPropertyChanging();
					this._TYP_PCON_END = value;
					this.SendPropertyChanged("TYP_PCON_END");
					this.OnTYP_PCON_ENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KW_FROM", DbType="Int")]
		public System.Nullable<int> TYP_KW_FROM
		{
			get
			{
				return this._TYP_KW_FROM;
			}
			set
			{
				if ((this._TYP_KW_FROM != value))
				{
					this.OnTYP_KW_FROMChanging(value);
					this.SendPropertyChanging();
					this._TYP_KW_FROM = value;
					this.SendPropertyChanged("TYP_KW_FROM");
					this.OnTYP_KW_FROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KW_UPTO", DbType="Int")]
		public System.Nullable<int> TYP_KW_UPTO
		{
			get
			{
				return this._TYP_KW_UPTO;
			}
			set
			{
				if ((this._TYP_KW_UPTO != value))
				{
					this.OnTYP_KW_UPTOChanging(value);
					this.SendPropertyChanging();
					this._TYP_KW_UPTO = value;
					this.SendPropertyChanged("TYP_KW_UPTO");
					this.OnTYP_KW_UPTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_HP_FROM", DbType="Int")]
		public System.Nullable<int> TYP_HP_FROM
		{
			get
			{
				return this._TYP_HP_FROM;
			}
			set
			{
				if ((this._TYP_HP_FROM != value))
				{
					this.OnTYP_HP_FROMChanging(value);
					this.SendPropertyChanging();
					this._TYP_HP_FROM = value;
					this.SendPropertyChanged("TYP_HP_FROM");
					this.OnTYP_HP_FROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_HP_UPTO", DbType="Int")]
		public System.Nullable<int> TYP_HP_UPTO
		{
			get
			{
				return this._TYP_HP_UPTO;
			}
			set
			{
				if ((this._TYP_HP_UPTO != value))
				{
					this.OnTYP_HP_UPTOChanging(value);
					this.SendPropertyChanging();
					this._TYP_HP_UPTO = value;
					this.SendPropertyChanged("TYP_HP_UPTO");
					this.OnTYP_HP_UPTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TYP_CCM", Storage="_TYP_CCM", DbType="Int")]
		public System.Nullable<int> EngineVolume
		{
			get
			{
				return this._TYP_CCM;
			}
			set
			{
				if ((this._TYP_CCM != value))
				{
					this.OnEngineVolumeChanging(value);
					this.SendPropertyChanging();
					this._TYP_CCM = value;
					this.SendPropertyChanged("EngineVolume");
					this.OnEngineVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_CYLINDERS", DbType="SmallInt")]
		public System.Nullable<short> TYP_CYLINDERS
		{
			get
			{
				return this._TYP_CYLINDERS;
			}
			set
			{
				if ((this._TYP_CYLINDERS != value))
				{
					this.OnTYP_CYLINDERSChanging(value);
					this.SendPropertyChanging();
					this._TYP_CYLINDERS = value;
					this.SendPropertyChanged("TYP_CYLINDERS");
					this.OnTYP_CYLINDERSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_DOORS", DbType="SmallInt")]
		public System.Nullable<short> TYP_DOORS
		{
			get
			{
				return this._TYP_DOORS;
			}
			set
			{
				if ((this._TYP_DOORS != value))
				{
					this.OnTYP_DOORSChanging(value);
					this.SendPropertyChanging();
					this._TYP_DOORS = value;
					this.SendPropertyChanged("TYP_DOORS");
					this.OnTYP_DOORSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_TANK", DbType="SmallInt")]
		public System.Nullable<short> TYP_TANK
		{
			get
			{
				return this._TYP_TANK;
			}
			set
			{
				if ((this._TYP_TANK != value))
				{
					this.OnTYP_TANKChanging(value);
					this.SendPropertyChanging();
					this._TYP_TANK = value;
					this.SendPropertyChanged("TYP_TANK");
					this.OnTYP_TANKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_VOLTAGE_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_VOLTAGE_DES_ID
		{
			get
			{
				return this._TYP_KV_VOLTAGE_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_VOLTAGE_DES_ID != value))
				{
					this.OnTYP_KV_VOLTAGE_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_VOLTAGE_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_VOLTAGE_DES_ID");
					this.OnTYP_KV_VOLTAGE_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_ABS_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_ABS_DES_ID
		{
			get
			{
				return this._TYP_KV_ABS_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_ABS_DES_ID != value))
				{
					this.OnTYP_KV_ABS_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_ABS_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_ABS_DES_ID");
					this.OnTYP_KV_ABS_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_ASR_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_ASR_DES_ID
		{
			get
			{
				return this._TYP_KV_ASR_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_ASR_DES_ID != value))
				{
					this.OnTYP_KV_ASR_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_ASR_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_ASR_DES_ID");
					this.OnTYP_KV_ASR_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_ENGINE_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_ENGINE_DES_ID
		{
			get
			{
				return this._TYP_KV_ENGINE_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_ENGINE_DES_ID != value))
				{
					if (this._EngineName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYP_KV_ENGINE_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_ENGINE_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_ENGINE_DES_ID");
					this.OnTYP_KV_ENGINE_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_BRAKE_TYPE_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_BRAKE_TYPE_DES_ID
		{
			get
			{
				return this._TYP_KV_BRAKE_TYPE_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_BRAKE_TYPE_DES_ID != value))
				{
					this.OnTYP_KV_BRAKE_TYPE_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_BRAKE_TYPE_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_BRAKE_TYPE_DES_ID");
					this.OnTYP_KV_BRAKE_TYPE_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_BRAKE_SYST_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_BRAKE_SYST_DES_ID
		{
			get
			{
				return this._TYP_KV_BRAKE_SYST_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_BRAKE_SYST_DES_ID != value))
				{
					this.OnTYP_KV_BRAKE_SYST_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_BRAKE_SYST_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_BRAKE_SYST_DES_ID");
					this.OnTYP_KV_BRAKE_SYST_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_FUEL_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_FUEL_DES_ID
		{
			get
			{
				return this._TYP_KV_FUEL_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_FUEL_DES_ID != value))
				{
					if (this._FuelName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYP_KV_FUEL_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_FUEL_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_FUEL_DES_ID");
					this.OnTYP_KV_FUEL_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_CATALYST_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_CATALYST_DES_ID
		{
			get
			{
				return this._TYP_KV_CATALYST_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_CATALYST_DES_ID != value))
				{
					this.OnTYP_KV_CATALYST_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_CATALYST_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_CATALYST_DES_ID");
					this.OnTYP_KV_CATALYST_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_BODY_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_BODY_DES_ID
		{
			get
			{
				return this._TYP_KV_BODY_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_BODY_DES_ID != value))
				{
					if (this._BodyName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYP_KV_BODY_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_BODY_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_BODY_DES_ID");
					this.OnTYP_KV_BODY_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_STEERING_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_STEERING_DES_ID
		{
			get
			{
				return this._TYP_KV_STEERING_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_STEERING_DES_ID != value))
				{
					this.OnTYP_KV_STEERING_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_STEERING_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_STEERING_DES_ID");
					this.OnTYP_KV_STEERING_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_STEERING_SIDE_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_STEERING_SIDE_DES_ID
		{
			get
			{
				return this._TYP_KV_STEERING_SIDE_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_STEERING_SIDE_DES_ID != value))
				{
					this.OnTYP_KV_STEERING_SIDE_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_STEERING_SIDE_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_STEERING_SIDE_DES_ID");
					this.OnTYP_KV_STEERING_SIDE_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_MAX_WEIGHT", DbType="Float")]
		public System.Nullable<double> TYP_MAX_WEIGHT
		{
			get
			{
				return this._TYP_MAX_WEIGHT;
			}
			set
			{
				if ((this._TYP_MAX_WEIGHT != value))
				{
					this.OnTYP_MAX_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._TYP_MAX_WEIGHT = value;
					this.SendPropertyChanged("TYP_MAX_WEIGHT");
					this.OnTYP_MAX_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_MODEL_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_MODEL_DES_ID
		{
			get
			{
				return this._TYP_KV_MODEL_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_MODEL_DES_ID != value))
				{
					this.OnTYP_KV_MODEL_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_MODEL_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_MODEL_DES_ID");
					this.OnTYP_KV_MODEL_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_AXLE_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_AXLE_DES_ID
		{
			get
			{
				return this._TYP_KV_AXLE_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_AXLE_DES_ID != value))
				{
					this.OnTYP_KV_AXLE_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_AXLE_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_AXLE_DES_ID");
					this.OnTYP_KV_AXLE_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_CCM_TAX", DbType="Int")]
		public System.Nullable<int> TYP_CCM_TAX
		{
			get
			{
				return this._TYP_CCM_TAX;
			}
			set
			{
				if ((this._TYP_CCM_TAX != value))
				{
					this.OnTYP_CCM_TAXChanging(value);
					this.SendPropertyChanging();
					this._TYP_CCM_TAX = value;
					this.SendPropertyChanged("TYP_CCM_TAX");
					this.OnTYP_CCM_TAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_LITRES", DbType="Float")]
		public System.Nullable<double> TYP_LITRES
		{
			get
			{
				return this._TYP_LITRES;
			}
			set
			{
				if ((this._TYP_LITRES != value))
				{
					this.OnTYP_LITRESChanging(value);
					this.SendPropertyChanging();
					this._TYP_LITRES = value;
					this.SendPropertyChanged("TYP_LITRES");
					this.OnTYP_LITRESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_DRIVE_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_DRIVE_DES_ID
		{
			get
			{
				return this._TYP_KV_DRIVE_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_DRIVE_DES_ID != value))
				{
					this.OnTYP_KV_DRIVE_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_DRIVE_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_DRIVE_DES_ID");
					this.OnTYP_KV_DRIVE_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_TRANS_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_TRANS_DES_ID
		{
			get
			{
				return this._TYP_KV_TRANS_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_TRANS_DES_ID != value))
				{
					this.OnTYP_KV_TRANS_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_TRANS_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_TRANS_DES_ID");
					this.OnTYP_KV_TRANS_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_KV_FUEL_SUPPLY_DES_ID", DbType="Int")]
		public System.Nullable<int> TYP_KV_FUEL_SUPPLY_DES_ID
		{
			get
			{
				return this._TYP_KV_FUEL_SUPPLY_DES_ID;
			}
			set
			{
				if ((this._TYP_KV_FUEL_SUPPLY_DES_ID != value))
				{
					if (this._FuelSupplyName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYP_KV_FUEL_SUPPLY_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._TYP_KV_FUEL_SUPPLY_DES_ID = value;
					this.SendPropertyChanged("TYP_KV_FUEL_SUPPLY_DES_ID");
					this.OnTYP_KV_FUEL_SUPPLY_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_VALVES", DbType="SmallInt")]
		public System.Nullable<short> TYP_VALVES
		{
			get
			{
				return this._TYP_VALVES;
			}
			set
			{
				if ((this._TYP_VALVES != value))
				{
					this.OnTYP_VALVESChanging(value);
					this.SendPropertyChanging();
					this._TYP_VALVES = value;
					this.SendPropertyChanged("TYP_VALVES");
					this.OnTYP_VALVESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_CTM", DbType="VarChar(250)")]
		public string TYP_CTM
		{
			get
			{
				return this._TYP_CTM;
			}
			set
			{
				if ((this._TYP_CTM != value))
				{
					this.OnTYP_CTMChanging(value);
					this.SendPropertyChanging();
					this._TYP_CTM = value;
					this.SendPropertyChanged("TYP_CTM");
					this.OnTYP_CTMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYP_LA_CTM", DbType="VarChar(250)")]
		public string TYP_LA_CTM
		{
			get
			{
				return this._TYP_LA_CTM;
			}
			set
			{
				if ((this._TYP_LA_CTM != value))
				{
					this.OnTYP_LA_CTMChanging(value);
					this.SendPropertyChanging();
					this._TYP_LA_CTM = value;
					this.SendPropertyChanged("TYP_LA_CTM");
					this.OnTYP_LA_CTMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarType_ArticleLinkToCarTypeLink", Storage="_ArticleLinkToCarTypeLinks", ThisKey="ID", OtherKey="CarTypeID")]
		public EntitySet<ArticleLinkToCarTypeLink> ArticleLinkToCarTypeLinks
		{
			get
			{
				return this._ArticleLinkToCarTypeLinks;
			}
			set
			{
				this._ArticleLinkToCarTypeLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_CarType", Storage="_Model", ThisKey="TYP_MOD_ID", OtherKey="MOD_ID", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.CarTypes.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.CarTypes.Add(this);
						this._TYP_MOD_ID = value.MOD_ID;
					}
					else
					{
						this._TYP_MOD_ID = default(int);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdsText_CarType", Storage="_FullName", ThisKey="TYP_CDS_ID", OtherKey="cds_ID", IsForeignKey=true)]
		public CdsText FullName
		{
			get
			{
				return this._FullName.Entity;
			}
			set
			{
				if ((this._FullName.Entity != value))
				{
					this.SendPropertyChanging();
					this._FullName.Entity = value;
					this.SendPropertyChanged("FullName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdsText_CarType1", Storage="_Name", ThisKey="TYP_MMT_CDS_ID", OtherKey="cds_ID", IsForeignKey=true)]
		public CdsText Name
		{
			get
			{
				return this._Name.Entity;
			}
			set
			{
				if ((this._Name.Entity != value))
				{
					this.SendPropertyChanging();
					this._Name.Entity = value;
					this.SendPropertyChanged("Name");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_CarType", Storage="_FuelName", ThisKey="TYP_KV_FUEL_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts FuelName
		{
			get
			{
				return this._FuelName.Entity;
			}
			set
			{
				if ((this._FuelName.Entity != value))
				{
					this.SendPropertyChanging();
					this._FuelName.Entity = value;
					this.SendPropertyChanged("FuelName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_CarType1", Storage="_BodyName", ThisKey="TYP_KV_BODY_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts BodyName
		{
			get
			{
				return this._BodyName.Entity;
			}
			set
			{
				if ((this._BodyName.Entity != value))
				{
					this.SendPropertyChanging();
					this._BodyName.Entity = value;
					this.SendPropertyChanged("BodyName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_CarType2", Storage="_FuelSupplyName", ThisKey="TYP_KV_FUEL_SUPPLY_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts FuelSupplyName
		{
			get
			{
				return this._FuelSupplyName.Entity;
			}
			set
			{
				if ((this._FuelSupplyName.Entity != value))
				{
					this.SendPropertyChanging();
					this._FuelSupplyName.Entity = value;
					this.SendPropertyChanged("FuelSupplyName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_CarType3", Storage="_EngineName", ThisKey="TYP_KV_ENGINE_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts EngineName
		{
			get
			{
				return this._EngineName.Entity;
			}
			set
			{
				if ((this._EngineName.Entity != value))
				{
					this.SendPropertyChanging();
					this._EngineName.Entity = value;
					this.SendPropertyChanged("EngineName");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleLinkToCarTypeLinks(ArticleLinkToCarTypeLink entity)
		{
			this.SendPropertyChanging();
			entity.CarType = this;
		}
		
		private void detach_ArticleLinkToCarTypeLinks(ArticleLinkToCarTypeLink entity)
		{
			this.SendPropertyChanging();
			entity.CarType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_LINK_LA_TYP")]
	public partial class ArticleLinkToCarTypeLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModificationID;
		
		private int _ArticleLinkID;
		
		private int _GenericArticleID;
		
		private System.Nullable<short> _SupplierID;
		
		private int _LAT_SORT;
		
		private EntityRef<GenericArticle> _GenericArticle;
		
		private EntityRef<ArticleLink> _ArticleLink;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<CarType> _CarType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarTypeIDChanging(int value);
    partial void OnCarTypeIDChanged();
    partial void OnArticleLinkIDChanging(int value);
    partial void OnArticleLinkIDChanged();
    partial void OnGenericArticleIDChanging(int value);
    partial void OnGenericArticleIDChanged();
    partial void OnSupplierIDChanging(System.Nullable<short> value);
    partial void OnSupplierIDChanged();
    partial void OnLAT_SORTChanging(int value);
    partial void OnLAT_SORTChanged();
    #endregion
		
		public ArticleLinkToCarTypeLink()
		{
			this._GenericArticle = default(EntityRef<GenericArticle>);
			this._ArticleLink = default(EntityRef<ArticleLink>);
			this._Supplier = default(EntityRef<Supplier>);
			this._CarType = default(EntityRef<CarType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LAT_TYP_ID", Storage="_ModificationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarTypeID
		{
			get
			{
				return this._ModificationID;
			}
			set
			{
				if ((this._ModificationID != value))
				{
					this.OnCarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ModificationID = value;
					this.SendPropertyChanged("CarTypeID");
					this.OnCarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LAT_LA_ID", Storage="_ArticleLinkID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ArticleLinkID
		{
			get
			{
				return this._ArticleLinkID;
			}
			set
			{
				if ((this._ArticleLinkID != value))
				{
					this.OnArticleLinkIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleLinkID = value;
					this.SendPropertyChanged("ArticleLinkID");
					this.OnArticleLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LAT_GA_ID", Storage="_GenericArticleID", DbType="Int NOT NULL")]
		public int GenericArticleID
		{
			get
			{
				return this._GenericArticleID;
			}
			set
			{
				if ((this._GenericArticleID != value))
				{
					this.OnGenericArticleIDChanging(value);
					this.SendPropertyChanging();
					this._GenericArticleID = value;
					this.SendPropertyChanged("GenericArticleID");
					this.OnGenericArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LAT_SUP_ID", Storage="_SupplierID", DbType="SmallInt")]
		public System.Nullable<short> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAT_SORT", DbType="Int NOT NULL")]
		public int LAT_SORT
		{
			get
			{
				return this._LAT_SORT;
			}
			set
			{
				if ((this._LAT_SORT != value))
				{
					this.OnLAT_SORTChanging(value);
					this.SendPropertyChanging();
					this._LAT_SORT = value;
					this.SendPropertyChanged("LAT_SORT");
					this.OnLAT_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenericArticle_ArticleLinkToCarTypeLink", Storage="_GenericArticle", ThisKey="GenericArticleID", OtherKey="ID", IsForeignKey=true)]
		public GenericArticle GenericArticle
		{
			get
			{
				return this._GenericArticle.Entity;
			}
			set
			{
				if ((this._GenericArticle.Entity != value))
				{
					this.SendPropertyChanging();
					this._GenericArticle.Entity = value;
					this.SendPropertyChanged("GenericArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleLink_ArticleLinkToCarTypeLink", Storage="_ArticleLink", ThisKey="ArticleLinkID", OtherKey="ID", IsForeignKey=true)]
		public ArticleLink ArticleLink
		{
			get
			{
				return this._ArticleLink.Entity;
			}
			set
			{
				ArticleLink previousValue = this._ArticleLink.Entity;
				if (((previousValue != value) 
							|| (this._ArticleLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleLink.Entity = null;
						previousValue.ArticleLinkToCarTypeLinks.Remove(this);
					}
					this._ArticleLink.Entity = value;
					if ((value != null))
					{
						value.ArticleLinkToCarTypeLinks.Add(this);
						this._ArticleLinkID = value.ID;
					}
					else
					{
						this._ArticleLinkID = default(int);
					}
					this.SendPropertyChanged("ArticleLink");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ArticleLinkToCarTypeLink", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				if ((this._Supplier.Entity != value))
				{
					this.SendPropertyChanging();
					this._Supplier.Entity = value;
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarType_ArticleLinkToCarTypeLink", Storage="_CarType", ThisKey="CarTypeID", OtherKey="ID", IsForeignKey=true)]
		public CarType CarType
		{
			get
			{
				return this._CarType.Entity;
			}
			set
			{
				CarType previousValue = this._CarType.Entity;
				if (((previousValue != value) 
							|| (this._CarType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarType.Entity = null;
						previousValue.ArticleLinkToCarTypeLinks.Remove(this);
					}
					this._CarType.Entity = value;
					if ((value != null))
					{
						value.ArticleLinkToCarTypeLinks.Add(this);
						this._ModificationID = value.ID;
					}
					else
					{
						this._ModificationID = default(int);
					}
					this.SendPropertyChanged("CarType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_LINK_GRA_ART")]
	public partial class GraphicsToArticleLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleId;
		
		private short _LGA_SORT;
		
		private string _GraphicsId;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Graphics> _Graphics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLGA_ART_IDChanging(int value);
    partial void OnLGA_ART_IDChanged();
    partial void OnLGA_SORTChanging(short value);
    partial void OnLGA_SORTChanged();
    partial void OnLGA_GRA_IDChanging(string value);
    partial void OnLGA_GRA_IDChanged();
    #endregion
		
		public GraphicsToArticleLink()
		{
			this._Article = default(EntityRef<Article>);
			this._Graphics = default(EntityRef<Graphics>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LGA_ART_ID
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLGA_ART_IDChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("LGA_ART_ID");
					this.OnLGA_ART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LGA_SORT", DbType="SmallInt NOT NULL")]
		public short LGA_SORT
		{
			get
			{
				return this._LGA_SORT;
			}
			set
			{
				if ((this._LGA_SORT != value))
				{
					this.OnLGA_SORTChanging(value);
					this.SendPropertyChanging();
					this._LGA_SORT = value;
					this.SendPropertyChanged("LGA_SORT");
					this.OnLGA_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraphicsId", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LGA_GRA_ID
		{
			get
			{
				return this._GraphicsId;
			}
			set
			{
				if ((this._GraphicsId != value))
				{
					if (this._Graphics.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLGA_GRA_IDChanging(value);
					this.SendPropertyChanging();
					this._GraphicsId = value;
					this.SendPropertyChanged("LGA_GRA_ID");
					this.OnLGA_GRA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_GraphicsToArticleLink", Storage="_Article", ThisKey="LGA_ART_ID", OtherKey="ID", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				if ((this._Article.Entity != value))
				{
					this.SendPropertyChanging();
					this._Article.Entity = value;
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Graphics_GraphicsToArticleLink", Storage="_Graphics", ThisKey="LGA_GRA_ID", OtherKey="ID", IsForeignKey=true)]
		public Graphics Graphics
		{
			get
			{
				return this._Graphics.Entity;
			}
			set
			{
				if ((this._Graphics.Entity != value))
				{
					this.SendPropertyChanging();
					this._Graphics.Entity = value;
					this.SendPropertyChanged("Graphics");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Custom.CountryDeliveries")]
	public partial class CountryDelivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private int _CountryID;
		
		private int _ManufacturerID;
		
		private int _ModelID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnModelIDChanging(int value);
    partial void OnModelIDChanged();
    #endregion
		
		public CountryDelivery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="Int NOT NULL")]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelID", DbType="Int NOT NULL")]
		public int ModelID
		{
			get
			{
				return this._ModelID;
			}
			set
			{
				if ((this._ModelID != value))
				{
					this.OnModelIDChanging(value);
					this.SendPropertyChanging();
					this._ModelID = value;
					this.SendPropertyChanged("ModelID");
					this.OnModelIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_ART_LOOKUP")]
	public partial class ArticleLookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ArticleID;
		
		private string _SearchNumber;
		
		private System.Nullable<char> _Type;
		
		private System.Nullable<short> _ARL_BRA_ID;
		
		private string _PartNumber;
		
		private System.Nullable<short> _ARL_BLOCK;
		
		private System.Nullable<short> _ARL_SORT;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Brand> _AfterMarketBrand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnARL_ART_IDChanging(System.Nullable<int> value);
    partial void OnARL_ART_IDChanged();
    partial void OnSearchNumberChanging(string value);
    partial void OnSearchNumberChanged();
    partial void OnARL_KINDChanging(System.Nullable<char> value);
    partial void OnARL_KINDChanged();
    partial void OnARL_BRA_IDChanging(System.Nullable<short> value);
    partial void OnARL_BRA_IDChanged();
    partial void OnDisplayNumberChanging(string value);
    partial void OnDisplayNumberChanged();
    partial void OnARL_BLOCKChanging(System.Nullable<short> value);
    partial void OnARL_BLOCKChanged();
    partial void OnARL_SORTChanging(System.Nullable<short> value);
    partial void OnARL_SORTChanged();
    #endregion
		
		public ArticleLookup()
		{
			this._Article = default(EntityRef<Article>);
			this._AfterMarketBrand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="Int", IsPrimaryKey=true)]
		public System.Nullable<int> ARL_ART_ID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnARL_ART_IDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ARL_ART_ID");
					this.OnARL_ART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ARL_SEARCH_NUMBER", Storage="_SearchNumber", DbType="VarChar(105)")]
		public string SearchNumber
		{
			get
			{
				return this._SearchNumber;
			}
			set
			{
				if ((this._SearchNumber != value))
				{
					this.OnSearchNumberChanging(value);
					this.SendPropertyChanging();
					this._SearchNumber = value;
					this.SendPropertyChanged("SearchNumber");
					this.OnSearchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Char(1)", IsPrimaryKey=true)]
		public System.Nullable<char> ARL_KIND
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnARL_KINDChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("ARL_KIND");
					this.OnARL_KINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARL_BRA_ID", DbType="SmallInt")]
		public System.Nullable<short> ARL_BRA_ID
		{
			get
			{
				return this._ARL_BRA_ID;
			}
			set
			{
				if ((this._ARL_BRA_ID != value))
				{
					if (this._AfterMarketBrand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnARL_BRA_IDChanging(value);
					this.SendPropertyChanging();
					this._ARL_BRA_ID = value;
					this.SendPropertyChanged("ARL_BRA_ID");
					this.OnARL_BRA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ARL_DISPLAY_NR", Storage="_PartNumber", DbType="VarChar(105)")]
		public string DisplayNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnDisplayNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("DisplayNumber");
					this.OnDisplayNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARL_BLOCK", DbType="SmallInt")]
		public System.Nullable<short> ARL_BLOCK
		{
			get
			{
				return this._ARL_BLOCK;
			}
			set
			{
				if ((this._ARL_BLOCK != value))
				{
					this.OnARL_BLOCKChanging(value);
					this.SendPropertyChanging();
					this._ARL_BLOCK = value;
					this.SendPropertyChanged("ARL_BLOCK");
					this.OnARL_BLOCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARL_SORT", DbType="SmallInt")]
		public System.Nullable<short> ARL_SORT
		{
			get
			{
				return this._ARL_SORT;
			}
			set
			{
				if ((this._ARL_SORT != value))
				{
					this.OnARL_SORTChanging(value);
					this.SendPropertyChanging();
					this._ARL_SORT = value;
					this.SendPropertyChanged("ARL_SORT");
					this.OnARL_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleLookup", Storage="_Article", ThisKey="ARL_ART_ID", OtherKey="ID", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ArticleLookups.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ArticleLookups.Add(this);
						this._ArticleID = value.ID;
					}
					else
					{
						this._ArticleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_ArticleLookup", Storage="_AfterMarketBrand", ThisKey="ARL_BRA_ID", OtherKey="ID", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._AfterMarketBrand.Entity;
			}
			set
			{
				if ((this._AfterMarketBrand.Entity != value))
				{
					this.SendPropertyChanging();
					this._AfterMarketBrand.Entity = value;
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_BRANDS")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _BRA_MF_NR;
		
		private EntitySet<Manufacturer> _Manufacturers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBRA_MF_NRChanging(System.Nullable<int> value);
    partial void OnBRA_MF_NRChanged();
    #endregion
		
		public Brand()
		{
			this._Manufacturers = new EntitySet<Manufacturer>(new Action<Manufacturer>(this.attach_Manufacturers), new Action<Manufacturer>(this.detach_Manufacturers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BRA_ID", Storage="_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BRA_MFC_CODE", Storage="_Code", DbType="VarChar(60)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BRA_BRAND", Storage="_Name", DbType="VarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRA_MF_NR", DbType="Int")]
		public System.Nullable<int> BRA_MF_NR
		{
			get
			{
				return this._BRA_MF_NR;
			}
			set
			{
				if ((this._BRA_MF_NR != value))
				{
					this.OnBRA_MF_NRChanging(value);
					this.SendPropertyChanging();
					this._BRA_MF_NR = value;
					this.SendPropertyChanged("BRA_MF_NR");
					this.OnBRA_MF_NRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Manufacturer", Storage="_Manufacturers", ThisKey="BRA_MF_NR", OtherKey="MFA_MF_NR")]
		public EntitySet<Manufacturer> Manufacturers
		{
			get
			{
				return this._Manufacturers;
			}
			set
			{
				this._Manufacturers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Manufacturers(Manufacturer entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Manufacturers(Manufacturer entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class v_des_texts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDES_IDChanging(int value);
    partial void OnDES_IDChanged();
    partial void OnTex_TextChanging(string value);
    partial void OnTex_TextChanged();
    #endregion
		
		public v_des_texts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DES_ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnDES_IDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("DES_ID");
					this.OnDES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(1200)")]
		public string Tex_Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTex_TextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Tex_Text");
					this.OnTex_TextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="v_cds_texts")]
	public partial class CdsText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncds_IDChanging(int value);
    partial void Oncds_IDChanged();
    partial void OnTex_TextChanging(string value);
    partial void OnTex_TextChanged();
    #endregion
		
		public CdsText()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cds_ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.Oncds_IDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("cds_ID");
					this.Oncds_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(1200)")]
		public string Tex_Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTex_TextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Tex_Text");
					this.OnTex_TextChanged();
				}
			}
		}

	    public string Text {
	        get { return Tex_Text; }
	    }

	    public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_CRITERIA")]
	public partial class ArticleCriterion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CRI_ID;
		
		private int _CRI_DES_ID;
		
		private System.Nullable<int> _CRI_SHORT_DES_ID;
		
		private System.Nullable<int> _CRI_UNIT_DES_ID;
		
		private char _CRI_TYPE;
		
		private System.Nullable<short> _CRI_KT_ID;
		
		private System.Nullable<short> _CRI_IS_INTERVAL;
		
		private System.Nullable<short> _CRI_SUCCESSOR;
		
		private EntitySet<ArticleCriterionLink> _ArticleCriterionLinks;
		
		private EntityRef<v_des_texts> _FullName;
		
		private EntityRef<v_des_texts> _Name;
		
		private EntityRef<v_des_texts> _UnitName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCRI_IDChanging(short value);
    partial void OnCRI_IDChanged();
    partial void OnCRI_DES_IDChanging(int value);
    partial void OnCRI_DES_IDChanged();
    partial void OnCRI_SHORT_DES_IDChanging(System.Nullable<int> value);
    partial void OnCRI_SHORT_DES_IDChanged();
    partial void OnCRI_UNIT_DES_IDChanging(System.Nullable<int> value);
    partial void OnCRI_UNIT_DES_IDChanged();
    partial void OnCRI_TYPEChanging(char value);
    partial void OnCRI_TYPEChanged();
    partial void OnCRI_KT_IDChanging(System.Nullable<short> value);
    partial void OnCRI_KT_IDChanged();
    partial void OnCRI_IS_INTERVALChanging(System.Nullable<short> value);
    partial void OnCRI_IS_INTERVALChanged();
    partial void OnCRI_SUCCESSORChanging(System.Nullable<short> value);
    partial void OnCRI_SUCCESSORChanged();
    #endregion
		
		public ArticleCriterion()
		{
			this._ArticleCriterionLinks = new EntitySet<ArticleCriterionLink>(new Action<ArticleCriterionLink>(this.attach_ArticleCriterionLinks), new Action<ArticleCriterionLink>(this.detach_ArticleCriterionLinks));
			this._FullName = default(EntityRef<v_des_texts>);
			this._Name = default(EntityRef<v_des_texts>);
			this._UnitName = default(EntityRef<v_des_texts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CRI_ID
		{
			get
			{
				return this._CRI_ID;
			}
			set
			{
				if ((this._CRI_ID != value))
				{
					this.OnCRI_IDChanging(value);
					this.SendPropertyChanging();
					this._CRI_ID = value;
					this.SendPropertyChanged("CRI_ID");
					this.OnCRI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_DES_ID", DbType="Int NOT NULL")]
		public int CRI_DES_ID
		{
			get
			{
				return this._CRI_DES_ID;
			}
			set
			{
				if ((this._CRI_DES_ID != value))
				{
					if (this._FullName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRI_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._CRI_DES_ID = value;
					this.SendPropertyChanged("CRI_DES_ID");
					this.OnCRI_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_SHORT_DES_ID", DbType="Int")]
		public System.Nullable<int> CRI_SHORT_DES_ID
		{
			get
			{
				return this._CRI_SHORT_DES_ID;
			}
			set
			{
				if ((this._CRI_SHORT_DES_ID != value))
				{
					if (this._Name.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRI_SHORT_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._CRI_SHORT_DES_ID = value;
					this.SendPropertyChanged("CRI_SHORT_DES_ID");
					this.OnCRI_SHORT_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_UNIT_DES_ID", DbType="Int")]
		public System.Nullable<int> CRI_UNIT_DES_ID
		{
			get
			{
				return this._CRI_UNIT_DES_ID;
			}
			set
			{
				if ((this._CRI_UNIT_DES_ID != value))
				{
					if (this._UnitName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRI_UNIT_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._CRI_UNIT_DES_ID = value;
					this.SendPropertyChanged("CRI_UNIT_DES_ID");
					this.OnCRI_UNIT_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_TYPE", DbType="Char(1) NOT NULL")]
		public char CRI_TYPE
		{
			get
			{
				return this._CRI_TYPE;
			}
			set
			{
				if ((this._CRI_TYPE != value))
				{
					this.OnCRI_TYPEChanging(value);
					this.SendPropertyChanging();
					this._CRI_TYPE = value;
					this.SendPropertyChanged("CRI_TYPE");
					this.OnCRI_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_KT_ID", DbType="SmallInt")]
		public System.Nullable<short> CRI_KT_ID
		{
			get
			{
				return this._CRI_KT_ID;
			}
			set
			{
				if ((this._CRI_KT_ID != value))
				{
					this.OnCRI_KT_IDChanging(value);
					this.SendPropertyChanging();
					this._CRI_KT_ID = value;
					this.SendPropertyChanged("CRI_KT_ID");
					this.OnCRI_KT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_IS_INTERVAL", DbType="SmallInt")]
		public System.Nullable<short> CRI_IS_INTERVAL
		{
			get
			{
				return this._CRI_IS_INTERVAL;
			}
			set
			{
				if ((this._CRI_IS_INTERVAL != value))
				{
					this.OnCRI_IS_INTERVALChanging(value);
					this.SendPropertyChanging();
					this._CRI_IS_INTERVAL = value;
					this.SendPropertyChanged("CRI_IS_INTERVAL");
					this.OnCRI_IS_INTERVALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRI_SUCCESSOR", DbType="SmallInt")]
		public System.Nullable<short> CRI_SUCCESSOR
		{
			get
			{
				return this._CRI_SUCCESSOR;
			}
			set
			{
				if ((this._CRI_SUCCESSOR != value))
				{
					this.OnCRI_SUCCESSORChanging(value);
					this.SendPropertyChanging();
					this._CRI_SUCCESSOR = value;
					this.SendPropertyChanged("CRI_SUCCESSOR");
					this.OnCRI_SUCCESSORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCriterion_ArticleCriterionLink", Storage="_ArticleCriterionLinks", ThisKey="CRI_ID", OtherKey="ACR_CRI_ID")]
		public EntitySet<ArticleCriterionLink> ArticleCriterionLinks
		{
			get
			{
				return this._ArticleCriterionLinks;
			}
			set
			{
				this._ArticleCriterionLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_ArticleCriterion", Storage="_FullName", ThisKey="CRI_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts FullName
		{
			get
			{
				return this._FullName.Entity;
			}
			set
			{
				if ((this._FullName.Entity != value))
				{
					this.SendPropertyChanging();
					this._FullName.Entity = value;
					this.SendPropertyChanged("FullName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_ArticleCriterion1", Storage="_Name", ThisKey="CRI_SHORT_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts Name
		{
			get
			{
				return this._Name.Entity;
			}
			set
			{
				if ((this._Name.Entity != value))
				{
					this.SendPropertyChanging();
					this._Name.Entity = value;
					this.SendPropertyChanged("Name");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_ArticleCriterion2", Storage="_UnitName", ThisKey="CRI_UNIT_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts UnitName
		{
			get
			{
				return this._UnitName.Entity;
			}
			set
			{
				if ((this._UnitName.Entity != value))
				{
					this.SendPropertyChanging();
					this._UnitName.Entity = value;
					this.SendPropertyChanged("UnitName");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleCriterionLinks(ArticleCriterionLink entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCriterion = this;
		}
		
		private void detach_ArticleCriterionLinks(ArticleCriterionLink entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCriterion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_ARTICLE_CRITERIA")]
	public partial class ArticleCriterionLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ACR_ART_ID;
		
		private int _ACR_GA_ID;
		
		private short _ACR_SORT;
		
		private short _ACR_CRI_ID;
		
		private string _ACR_VALUE;
		
		private System.Nullable<int> _ACR_KV_DES_ID;
		
		private System.Nullable<short> _ACR_DISPLAY;
		
		private EntityRef<ArticleCriterion> _ArticleCriterion;
		
		private EntityRef<v_des_texts> _ValueIfString;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACR_ART_IDChanging(int value);
    partial void OnACR_ART_IDChanged();
    partial void OnACR_GA_IDChanging(int value);
    partial void OnACR_GA_IDChanged();
    partial void OnACR_SORTChanging(short value);
    partial void OnACR_SORTChanged();
    partial void OnACR_CRI_IDChanging(short value);
    partial void OnACR_CRI_IDChanged();
    partial void OnValueIfNumericChanging(string value);
    partial void OnValueIfNumericChanged();
    partial void OnACR_KV_DES_IDChanging(System.Nullable<int> value);
    partial void OnACR_KV_DES_IDChanged();
    partial void OnACR_DISPLAYChanging(System.Nullable<short> value);
    partial void OnACR_DISPLAYChanged();
    #endregion
		
		public ArticleCriterionLink()
		{
			this._ArticleCriterion = default(EntityRef<ArticleCriterion>);
			this._ValueIfString = default(EntityRef<v_des_texts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACR_ART_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ACR_ART_ID
		{
			get
			{
				return this._ACR_ART_ID;
			}
			set
			{
				if ((this._ACR_ART_ID != value))
				{
					this.OnACR_ART_IDChanging(value);
					this.SendPropertyChanging();
					this._ACR_ART_ID = value;
					this.SendPropertyChanged("ACR_ART_ID");
					this.OnACR_ART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACR_GA_ID", DbType="Int NOT NULL")]
		public int ACR_GA_ID
		{
			get
			{
				return this._ACR_GA_ID;
			}
			set
			{
				if ((this._ACR_GA_ID != value))
				{
					this.OnACR_GA_IDChanging(value);
					this.SendPropertyChanging();
					this._ACR_GA_ID = value;
					this.SendPropertyChanged("ACR_GA_ID");
					this.OnACR_GA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACR_SORT", DbType="SmallInt NOT NULL")]
		public short ACR_SORT
		{
			get
			{
				return this._ACR_SORT;
			}
			set
			{
				if ((this._ACR_SORT != value))
				{
					this.OnACR_SORTChanging(value);
					this.SendPropertyChanging();
					this._ACR_SORT = value;
					this.SendPropertyChanged("ACR_SORT");
					this.OnACR_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACR_CRI_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ACR_CRI_ID
		{
			get
			{
				return this._ACR_CRI_ID;
			}
			set
			{
				if ((this._ACR_CRI_ID != value))
				{
					if (this._ArticleCriterion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACR_CRI_IDChanging(value);
					this.SendPropertyChanging();
					this._ACR_CRI_ID = value;
					this.SendPropertyChanged("ACR_CRI_ID");
					this.OnACR_CRI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ACR_VALUE", Storage="_ACR_VALUE", DbType="VarChar(60)")]
		public string ValueIfNumeric
		{
			get
			{
				return this._ACR_VALUE;
			}
			set
			{
				if ((this._ACR_VALUE != value))
				{
					this.OnValueIfNumericChanging(value);
					this.SendPropertyChanging();
					this._ACR_VALUE = value;
					this.SendPropertyChanged("ValueIfNumeric");
					this.OnValueIfNumericChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACR_KV_DES_ID", DbType="Int")]
		public System.Nullable<int> ACR_KV_DES_ID
		{
			get
			{
				return this._ACR_KV_DES_ID;
			}
			set
			{
				if ((this._ACR_KV_DES_ID != value))
				{
					if (this._ValueIfString.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACR_KV_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._ACR_KV_DES_ID = value;
					this.SendPropertyChanged("ACR_KV_DES_ID");
					this.OnACR_KV_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACR_DISPLAY", DbType="SmallInt")]
		public System.Nullable<short> ACR_DISPLAY
		{
			get
			{
				return this._ACR_DISPLAY;
			}
			set
			{
				if ((this._ACR_DISPLAY != value))
				{
					this.OnACR_DISPLAYChanging(value);
					this.SendPropertyChanging();
					this._ACR_DISPLAY = value;
					this.SendPropertyChanged("ACR_DISPLAY");
					this.OnACR_DISPLAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCriterion_ArticleCriterionLink", Storage="_ArticleCriterion", ThisKey="ACR_CRI_ID", OtherKey="CRI_ID", IsForeignKey=true)]
		public ArticleCriterion ArticleCriterion
		{
			get
			{
				return this._ArticleCriterion.Entity;
			}
			set
			{
				ArticleCriterion previousValue = this._ArticleCriterion.Entity;
				if (((previousValue != value) 
							|| (this._ArticleCriterion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleCriterion.Entity = null;
						previousValue.ArticleCriterionLinks.Remove(this);
					}
					this._ArticleCriterion.Entity = value;
					if ((value != null))
					{
						value.ArticleCriterionLinks.Add(this);
						this._ACR_CRI_ID = value.CRI_ID;
					}
					else
					{
						this._ACR_CRI_ID = default(short);
					}
					this.SendPropertyChanged("ArticleCriterion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesText_ArticleCriterionLink", Storage="_ValueIfString", ThisKey="ACR_KV_DES_ID", OtherKey="DES_ID", IsForeignKey=true)]
		public v_des_texts ValueIfString
		{
			get
			{
				return this._ValueIfString.Entity;
			}
			set
			{
				if ((this._ValueIfString.Entity != value))
				{
					this.SendPropertyChanging();
					this._ValueIfString.Entity = value;
					this.SendPropertyChanged("ValueIfString");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_GRA_DATA")]
	public partial class GraphicsData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Data.Linq.Binary _GRD_GRAPHIC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGRD_GRAPHICChanging(System.Data.Linq.Binary value);
    partial void OnGRD_GRAPHICChanged();
    #endregion
		
		public GraphicsData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GRD_ID", Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRD_GRAPHIC", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary GRD_GRAPHIC
		{
			get
			{
				return this._GRD_GRAPHIC;
			}
			set
			{
				if ((this._GRD_GRAPHIC != value))
				{
					this.OnGRD_GRAPHICChanging(value);
					this.SendPropertyChanging();
					this._GRD_GRAPHIC = value;
					this.SendPropertyChanged("GRD_GRAPHIC");
					this.OnGRD_GRAPHICChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_GRAPHICS")]
	public partial class Graphics : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<short> _GRA_SUP_ID;
		
		private string _ID;
		
		private byte _GRA_DOC_TYPE;
		
		private short _GRA_LNG_ID;
		
		private System.Nullable<int> _GRA_GRD_ID;
		
		private System.Nullable<short> _GRA_TYPE;
		
		private string _GRA_NORM;
		
		private System.Nullable<short> _GRA_SUPPLIER_NR;
		
		private System.Nullable<short> _GRA_TAB_NR;
		
		private System.Nullable<int> _GRA_DES_ID;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<GraphicsData> _GraphicsData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGRA_SUP_IDChanging(System.Nullable<short> value);
    partial void OnGRA_SUP_IDChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnGRA_DOC_TYPEChanging(byte value);
    partial void OnGRA_DOC_TYPEChanged();
    partial void OnGRA_LNG_IDChanging(short value);
    partial void OnGRA_LNG_IDChanged();
    partial void OnGRA_GRD_IDChanging(System.Nullable<int> value);
    partial void OnGRA_GRD_IDChanged();
    partial void OnGRA_TYPEChanging(System.Nullable<short> value);
    partial void OnGRA_TYPEChanged();
    partial void OnGRA_NORMChanging(string value);
    partial void OnGRA_NORMChanged();
    partial void OnGRA_SUPPLIER_NRChanging(System.Nullable<short> value);
    partial void OnGRA_SUPPLIER_NRChanged();
    partial void OnGRA_TAB_NRChanging(System.Nullable<short> value);
    partial void OnGRA_TAB_NRChanged();
    partial void OnGRA_DES_IDChanging(System.Nullable<int> value);
    partial void OnGRA_DES_IDChanged();
    #endregion
		
		public Graphics()
		{
			this._DocumentType = default(EntityRef<DocumentType>);
			this._GraphicsData = default(EntityRef<GraphicsData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_SUP_ID", DbType="SmallInt")]
		public System.Nullable<short> GRA_SUP_ID
		{
			get
			{
				return this._GRA_SUP_ID;
			}
			set
			{
				if ((this._GRA_SUP_ID != value))
				{
					this.OnGRA_SUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GRA_SUP_ID = value;
					this.SendPropertyChanged("GRA_SUP_ID");
					this.OnGRA_SUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GRA_ID", Storage="_ID", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_DOC_TYPE", DbType="TinyInt NOT NULL")]
		public byte GRA_DOC_TYPE
		{
			get
			{
				return this._GRA_DOC_TYPE;
			}
			set
			{
				if ((this._GRA_DOC_TYPE != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRA_DOC_TYPEChanging(value);
					this.SendPropertyChanging();
					this._GRA_DOC_TYPE = value;
					this.SendPropertyChanged("GRA_DOC_TYPE");
					this.OnGRA_DOC_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_LNG_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short GRA_LNG_ID
		{
			get
			{
				return this._GRA_LNG_ID;
			}
			set
			{
				if ((this._GRA_LNG_ID != value))
				{
					this.OnGRA_LNG_IDChanging(value);
					this.SendPropertyChanging();
					this._GRA_LNG_ID = value;
					this.SendPropertyChanged("GRA_LNG_ID");
					this.OnGRA_LNG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_GRD_ID", DbType="Int")]
		public System.Nullable<int> GRA_GRD_ID
		{
			get
			{
				return this._GRA_GRD_ID;
			}
			set
			{
				if ((this._GRA_GRD_ID != value))
				{
					if (this._GraphicsData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRA_GRD_IDChanging(value);
					this.SendPropertyChanging();
					this._GRA_GRD_ID = value;
					this.SendPropertyChanged("GRA_GRD_ID");
					this.OnGRA_GRD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_TYPE", DbType="SmallInt")]
		public System.Nullable<short> GRA_TYPE
		{
			get
			{
				return this._GRA_TYPE;
			}
			set
			{
				if ((this._GRA_TYPE != value))
				{
					this.OnGRA_TYPEChanging(value);
					this.SendPropertyChanging();
					this._GRA_TYPE = value;
					this.SendPropertyChanged("GRA_TYPE");
					this.OnGRA_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_NORM", DbType="VarChar(9)")]
		public string GRA_NORM
		{
			get
			{
				return this._GRA_NORM;
			}
			set
			{
				if ((this._GRA_NORM != value))
				{
					this.OnGRA_NORMChanging(value);
					this.SendPropertyChanging();
					this._GRA_NORM = value;
					this.SendPropertyChanged("GRA_NORM");
					this.OnGRA_NORMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_SUPPLIER_NR", DbType="SmallInt")]
		public System.Nullable<short> GRA_SUPPLIER_NR
		{
			get
			{
				return this._GRA_SUPPLIER_NR;
			}
			set
			{
				if ((this._GRA_SUPPLIER_NR != value))
				{
					this.OnGRA_SUPPLIER_NRChanging(value);
					this.SendPropertyChanging();
					this._GRA_SUPPLIER_NR = value;
					this.SendPropertyChanged("GRA_SUPPLIER_NR");
					this.OnGRA_SUPPLIER_NRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_TAB_NR", DbType="SmallInt")]
		public System.Nullable<short> GRA_TAB_NR
		{
			get
			{
				return this._GRA_TAB_NR;
			}
			set
			{
				if ((this._GRA_TAB_NR != value))
				{
					this.OnGRA_TAB_NRChanging(value);
					this.SendPropertyChanging();
					this._GRA_TAB_NR = value;
					this.SendPropertyChanged("GRA_TAB_NR");
					this.OnGRA_TAB_NRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRA_DES_ID", DbType="Int")]
		public System.Nullable<int> GRA_DES_ID
		{
			get
			{
				return this._GRA_DES_ID;
			}
			set
			{
				if ((this._GRA_DES_ID != value))
				{
					this.OnGRA_DES_IDChanging(value);
					this.SendPropertyChanging();
					this._GRA_DES_ID = value;
					this.SendPropertyChanged("GRA_DES_ID");
					this.OnGRA_DES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_Graphics", Storage="_DocumentType", ThisKey="GRA_DOC_TYPE", OtherKey="DOC_TYPE", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.Graphics.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.Graphics.Add(this);
						this._GRA_DOC_TYPE = value.DOC_TYPE;
					}
					else
					{
						this._GRA_DOC_TYPE = default(byte);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GraphicsData_Graphics", Storage="_GraphicsData", ThisKey="GRA_GRD_ID", OtherKey="ID", IsForeignKey=true)]
		public GraphicsData GraphicsData
		{
			get
			{
				return this._GraphicsData.Entity;
			}
			set
			{
				if ((this._GraphicsData.Entity != value))
				{
					this.SendPropertyChanging();
					this._GraphicsData.Entity = value;
					this.SendPropertyChanged("GraphicsData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_DOC_TYPES")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _DOC_TYPE;
		
		private string _DOC_EXTENSION;
		
		private EntitySet<Graphics> _Graphics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDOC_TYPEChanging(byte value);
    partial void OnDOC_TYPEChanged();
    partial void OnDOC_EXTENSIONChanging(string value);
    partial void OnDOC_EXTENSIONChanged();
    #endregion
		
		public DocumentType()
		{
			this._Graphics = new EntitySet<Graphics>(new Action<Graphics>(this.attach_Graphics), new Action<Graphics>(this.detach_Graphics));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOC_TYPE", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte DOC_TYPE
		{
			get
			{
				return this._DOC_TYPE;
			}
			set
			{
				if ((this._DOC_TYPE != value))
				{
					this.OnDOC_TYPEChanging(value);
					this.SendPropertyChanging();
					this._DOC_TYPE = value;
					this.SendPropertyChanged("DOC_TYPE");
					this.OnDOC_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOC_EXTENSION", DbType="VarChar(9)")]
		public string DOC_EXTENSION
		{
			get
			{
				return this._DOC_EXTENSION;
			}
			set
			{
				if ((this._DOC_EXTENSION != value))
				{
					this.OnDOC_EXTENSIONChanging(value);
					this.SendPropertyChanging();
					this._DOC_EXTENSION = value;
					this.SendPropertyChanged("DOC_EXTENSION");
					this.OnDOC_EXTENSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_Graphics", Storage="_Graphics", ThisKey="DOC_TYPE", OtherKey="GRA_DOC_TYPE")]
		public EntitySet<Graphics> Graphics
		{
			get
			{
				return this._Graphics;
			}
			set
			{
				this._Graphics.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Graphics(Graphics entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_Graphics(Graphics entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECDOC_TOF_SUPERSEDED_ARTICLES")]
	public partial class SupersededArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SUA_ART_ID;
		
		private string _SUA_NUMBER;
		
		private int _SUA_SORT;
		
		private EntityRef<Article> _Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUA_ART_IDChanging(int value);
    partial void OnSUA_ART_IDChanged();
    partial void OnSUA_NUMBERChanging(string value);
    partial void OnSUA_NUMBERChanged();
    partial void OnSUA_SORTChanging(int value);
    partial void OnSUA_SORTChanged();
    #endregion
		
		public SupersededArticle()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUA_ART_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SUA_ART_ID
		{
			get
			{
				return this._SUA_ART_ID;
			}
			set
			{
				if ((this._SUA_ART_ID != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUA_ART_IDChanging(value);
					this.SendPropertyChanging();
					this._SUA_ART_ID = value;
					this.SendPropertyChanged("SUA_ART_ID");
					this.OnSUA_ART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUA_NUMBER", DbType="VarChar(66) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SUA_NUMBER
		{
			get
			{
				return this._SUA_NUMBER;
			}
			set
			{
				if ((this._SUA_NUMBER != value))
				{
					this.OnSUA_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._SUA_NUMBER = value;
					this.SendPropertyChanged("SUA_NUMBER");
					this.OnSUA_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUA_SORT", DbType="Int NOT NULL")]
		public int SUA_SORT
		{
			get
			{
				return this._SUA_SORT;
			}
			set
			{
				if ((this._SUA_SORT != value))
				{
					this.OnSUA_SORTChanging(value);
					this.SendPropertyChanging();
					this._SUA_SORT = value;
					this.SendPropertyChanged("SUA_SORT");
					this.OnSUA_SORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_SupersededArticle", Storage="_Article", ThisKey="SUA_ART_ID", OtherKey="ID", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.SupersededArticles.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.SupersededArticles.Add(this);
						this._SUA_ART_ID = value.ID;
					}
					else
					{
						this._SUA_ART_ID = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
