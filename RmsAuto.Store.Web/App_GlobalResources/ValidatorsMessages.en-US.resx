<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CartAndSoOn" xml:space="preserve">
    <value>and so on)</value>
  </data>
  <data name="CartIncorrectItemPleaseDelete" xml:space="preserve">
    <value>Incorrect item. Delete it from the cart.</value>
  </data>
  <data name="CartItemNotInStock" xml:space="preserve">
    <value>Item is not in stock.</value>
  </data>
  <data name="CartMinOrderQty" xml:space="preserve">
    <value>Minimal order quantity for the order: {0}</value>
  </data>
  <data name="CartNotEmpty" xml:space="preserve">
    <value>To upload the file your cart should be empty</value>
  </data>
  <data name="CartPriceChangedRecountPlease" xml:space="preserve">
    <value>Price for current item has changed. Please make the cart re-count.</value>
  </data>
  <data name="CartQtyExceedsLimit" xml:space="preserve">
    <value>Quantity exceeds the available limit:</value>
  </data>
  <data name="CartQtyShouldBeMultiply" xml:space="preserve">
    <value>Quantity should be multiple to parts in set  (</value>
  </data>
  <data name="CartToProceedPleaseDelete" xml:space="preserve">
    <value>To proceed the order please delete the item from the cart</value>
  </data>
  <data name="CityNotSpecified" xml:space="preserve">
    <value>not specified city</value>
  </data>
  <data name="EmailInUse" xml:space="preserve">
    <value>Email address is already in use</value>
  </data>
  <data name="EmptyCompanyAddress" xml:space="preserve">
    <value>Company address is empty</value>
  </data>
  <data name="EmptyCompanyName" xml:space="preserve">
    <value>Company name is empty</value>
  </data>
  <data name="EmptyEmail" xml:space="preserve">
    <value>E-mail is not set</value>
  </data>
  <data name="EmptyLogin" xml:space="preserve">
    <value>Login is not set</value>
  </data>
  <data name="EmptyName" xml:space="preserve">
    <value>Name is empty</value>
  </data>
  <data name="EmptyPassword" xml:space="preserve">
    <value>Password is not set</value>
  </data>
  <data name="EmptySurname" xml:space="preserve">
    <value>Surname is empty</value>
  </data>
  <data name="ExceedLengthPassword" xml:space="preserve">
    <value>Password length exceeds maximum allowable</value>
  </data>
  <data name="FamilyName" xml:space="preserve">
    <value>Family name is not determined</value>
  </data>
  <data name="FieldArticulEmpty" xml:space="preserve">
    <value>&amp;nbsp;Field “Article” should be field in</value>
  </data>
  <data name="FieldIsEmpty" xml:space="preserve">
    <value>field is not filled</value>
  </data>
  <data name="FieldOrderNumEmpty" xml:space="preserve">
    <value>&amp;nbsp;Field “Order No” should be field in</value>
  </data>
  <data name="FormatError_FinalPrice" xml:space="preserve">
    <value>incorrect final price format</value>
  </data>
  <data name="FormatError_FinishDate" xml:space="preserve">
    <value>finish date format error</value>
  </data>
  <data name="FormatError_InitialDate" xml:space="preserve">
    <value>initial date format error</value>
  </data>
  <data name="FormatError_StartPrice" xml:space="preserve">
    <value>incorrect initial price format</value>
  </data>
  <data name="IncorrectFinishPeriod" xml:space="preserve">
    <value>wrong terminal date format</value>
  </data>
  <data name="IncorrectStartPeriod" xml:space="preserve">
    <value>wrong initial date format</value>
  </data>
  <data name="IntegerValueOnly" xml:space="preserve">
    <value>integer value only</value>
  </data>
  <data name="InvalidCartVersion" xml:space="preserve">
    <value>Cart content was changed. Refresh the page to continue.</value>
  </data>
  <data name="InvalidCartVersion2" xml:space="preserve">
    <value>Cart content was changed. To continue go to the cart page.</value>
  </data>
  <data name="InvalidDateFormat" xml:space="preserve">
    <value>Data format shall be entered as MM/DD/YYYY</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>E-mail address format is not correct</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>Invalid data format</value>
  </data>
  <data name="InvalidQty" xml:space="preserve">
    <value>Field "Quantity"  filled not correct</value>
  </data>
  <data name="LettersAllowed" xml:space="preserve">
    <value>Only cyryllic/latin letters are allowed</value>
  </data>
  <data name="LogonUserIsNotActivated" xml:space="preserve">
    <value>user is not activated</value>
  </data>
  <data name="LogonWrongLoginOrPassword" xml:space="preserve">
    <value>Wrong login or password</value>
  </data>
  <data name="NameNotFilled" xml:space="preserve">
    <value>Name of the client is not filled</value>
  </data>
  <data name="NotMatchPassword" xml:space="preserve">
    <value>Entered passwords do not coincide</value>
  </data>
  <data name="OrderNumInvalid" xml:space="preserve">
    <value>&amp;nbsp;Incorrect order number is entered</value>
  </data>
  <data name="SelectCountry" xml:space="preserve">
    <value>Select a country from the list</value>
  </data>
  <data name="SelectFromList" xml:space="preserve">
    <value>select from list</value>
  </data>
  <data name="SelectSourceInformation" xml:space="preserve">
    <value>select the source information</value>
  </data>
  <data name="StartDateExceedFinishDate" xml:space="preserve">
    <value>the initital date cannot exceed the terminal date</value>
  </data>
  <data name="StartPriceExceedFinishPrice" xml:space="preserve">
    <value>initial price cannot exceed the final one</value>
  </data>
  <data name="WrongEmailFormat" xml:space="preserve">
    <value>Wrong email format</value>
  </data>
</root>